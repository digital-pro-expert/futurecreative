{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/Utils.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Canvas.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js", "../../../../../../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Particle.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js", "../../../../../../node_modules/@tsparticles/engine/browser/Types/RangeType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Particles.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Retina.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Container.js", "../../../../../../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Engine.js", "../../../../../../node_modules/@tsparticles/engine/browser/init.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js", "../../../../../../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js", "../../../../../../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js", "../../../../../../node_modules/@tsparticles/engine/browser/index.js"],
  "sourcesContent": ["export const generatedAttribute = \"generated\",\n  mouseDownEvent = \"pointerdown\",\n  mouseUpEvent = \"pointerup\",\n  mouseLeaveEvent = \"pointerleave\",\n  mouseOutEvent = \"pointerout\",\n  mouseMoveEvent = \"pointermove\",\n  touchStartEvent = \"touchstart\",\n  touchEndEvent = \"touchend\",\n  touchMoveEvent = \"touchmove\",\n  touchCancelEvent = \"touchcancel\",\n  resizeEvent = \"resize\",\n  visibilityChangeEvent = \"visibilitychange\",\n  errorPrefix = \"tsParticles - Error\",\n  percentDenominator = 100,\n  half = 0.5,\n  millisecondsToSeconds = 1000,\n  originPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n  },\n  defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1\n  },\n  randomColorValue = \"random\",\n  midColorValue = \"mid\",\n  double = 2,\n  doublePI = Math.PI * double,\n  defaultFps = 60,\n  defaultAlpha = 1,\n  generatedTrue = \"true\",\n  generatedFalse = \"false\",\n  canvasTag = \"canvas\",\n  defaultRetryCount = 0,\n  squareExp = 2,\n  qTreeCapacity = 4,\n  defaultRemoveQuantity = 1,\n  defaultRatio = 1,\n  defaultReduceFactor = 1,\n  subdivideCount = 4,\n  inverseFactorNumerator = 1.0,\n  rgbMax = 255,\n  hMax = 360,\n  sMax = 100,\n  lMax = 100,\n  hMin = 0,\n  sMin = 0,\n  hPhase = 60,\n  empty = 0,\n  quarter = 0.25,\n  threeQuarter = half + quarter,\n  minVelocity = 0,\n  defaultTransformValue = 1,\n  minimumSize = 0,\n  minimumLength = 0,\n  zIndexFactorOffset = 1,\n  defaultOpacity = 1,\n  clickRadius = 1,\n  touchEndLengthOffset = 1,\n  minCoordinate = 0,\n  removeDeleteCount = 1,\n  removeMinIndex = 0,\n  defaultFpsLimit = 120,\n  minFpsLimit = 0,\n  canvasFirstIndex = 0,\n  loadRandomFactor = 10000,\n  loadMinIndex = 0,\n  one = 1,\n  none = 0,\n  decayOffset = 1,\n  tryCountIncrement = 1,\n  minRetries = 0,\n  rollFactor = 1,\n  minZ = 0,\n  defaultRadius = 0,\n  posOffset = -quarter,\n  sizeFactor = 1.5,\n  minLimit = 0,\n  countOffset = 1,\n  minCount = 0,\n  minIndex = 0,\n  manualCount = 0,\n  lengthOffset = 1,\n  defaultDensityFactor = 1,\n  deleteCount = 1,\n  touchDelay = 500,\n  manualDefaultPosition = 50,\n  defaultAngle = 0,\n  identity = 1,\n  minStrokeWidth = 0,\n  lFactor = 1,\n  lMin = 0,\n  rgbFactor = 255,\n  triple = 3,\n  sextuple = 6,\n  sNormalizedOffset = 1,\n  phaseNumerator = 1,\n  defaultRgbMin = 0,\n  defaultVelocity = 0,\n  defaultLoops = 0,\n  defaultTime = 0;", "export var MoveDirection;\n(function (MoveDirection) {\n  MoveDirection[\"bottom\"] = \"bottom\";\n  MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n  MoveDirection[\"bottomRight\"] = \"bottom-right\";\n  MoveDirection[\"left\"] = \"left\";\n  MoveDirection[\"none\"] = \"none\";\n  MoveDirection[\"right\"] = \"right\";\n  MoveDirection[\"top\"] = \"top\";\n  MoveDirection[\"topLeft\"] = \"top-left\";\n  MoveDirection[\"topRight\"] = \"top-right\";\n  MoveDirection[\"outside\"] = \"outside\";\n  MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));", "export function isBoolean(arg) {\n  return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n  return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n  return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n  return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n  return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n  return Array.isArray(arg);\n}\nexport function isNull(arg) {\n  return arg === null || arg === undefined;\n}", "import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n  constructor(xOrCoords, y, z) {\n    this._updateFromAngle = (angle, length) => {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    };\n    if (!isNumber(xOrCoords) && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n      const coords3d = xOrCoords;\n      this.z = coords3d.z ? coords3d.z : originPoint.z;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n      this.z = z ?? originPoint.z;\n    } else {\n      throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n    }\n  }\n  static get origin() {\n    return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n  }\n  get angle() {\n    return Math.atan2(this.y, this.x);\n  }\n  set angle(angle) {\n    this._updateFromAngle(angle, this.length);\n  }\n  get length() {\n    return Math.sqrt(this.getLengthSq());\n  }\n  set length(length) {\n    this._updateFromAngle(this.angle, length);\n  }\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n  add(v) {\n    return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n  }\n  copy() {\n    return Vector3d.clone(this);\n  }\n  distanceTo(v) {\n    return this.sub(v).length;\n  }\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n  divTo(n) {\n    this.x /= n;\n    this.y /= n;\n    this.z /= n;\n  }\n  getLengthSq() {\n    return this.x ** squareExp + this.y ** squareExp;\n  }\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n  multTo(n) {\n    this.x *= n;\n    this.y *= n;\n    this.z *= n;\n  }\n  normalize() {\n    const length = this.length;\n    if (length != none) {\n      this.multTo(inverseFactorNumerator / length);\n    }\n  }\n  rotate(angle) {\n    return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n  }\n  setTo(c) {\n    this.x = c.x;\n    this.y = c.y;\n    const v3d = c;\n    this.z = v3d.z ? v3d.z : originPoint.z;\n  }\n  sub(v) {\n    return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n  }\n}\nexport class Vector extends Vector3d {\n  constructor(xOrCoords, y) {\n    super(xOrCoords, y, originPoint.z);\n  }\n  static get origin() {\n    return Vector.create(originPoint.x, originPoint.y);\n  }\n  static clone(source) {\n    return Vector.create(source.x, source.y);\n  }\n  static create(x, y) {\n    return new Vector(x, y);\n  }\n}", "import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n  nextFrame: cb => requestAnimationFrame(cb),\n  cancel: idx => cancelAnimationFrame(idx)\n};\nexport function setRandom(rnd = Math.random) {\n  _random = rnd;\n}\nexport function getRandom() {\n  const min = 0,\n    max = 1;\n  return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n  _animationLoop.nextFrame = callback => nextFrame(callback);\n  _animationLoop.cancel = handle => cancel(handle);\n}\nexport function animate(fn) {\n  return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n  _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n  return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n  const max = getRangeMax(r),\n    minOffset = 0;\n  let min = getRangeMin(r);\n  if (max === min) {\n    min = minOffset;\n  }\n  return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n  return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n  return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n  return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n  if (source === value || value === undefined && isNumber(source)) {\n    return source;\n  }\n  const min = getRangeMin(source),\n    max = getRangeMax(source);\n  return value !== undefined ? {\n    min: Math.min(min, value),\n    max: Math.max(max, value)\n  } : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n  const dx = pointA.x - pointB.x,\n    dy = pointA.y - pointB.y,\n    squareExp = 2;\n  return {\n    dx: dx,\n    dy: dy,\n    distance: Math.sqrt(dx ** squareExp + dy ** squareExp)\n  };\n}\nexport function getDistance(pointA, pointB) {\n  return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n  const PIDeg = 180;\n  return degrees * Math.PI / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n  if (isNumber(direction)) {\n    return degToRad(direction);\n  }\n  switch (direction) {\n    case MoveDirection.top:\n      return -Math.PI * half;\n    case MoveDirection.topRight:\n      return -Math.PI * quarter;\n    case MoveDirection.right:\n      return empty;\n    case MoveDirection.bottomRight:\n      return Math.PI * quarter;\n    case MoveDirection.bottom:\n      return Math.PI * half;\n    case MoveDirection.bottomLeft:\n      return Math.PI * threeQuarter;\n    case MoveDirection.left:\n      return Math.PI;\n    case MoveDirection.topLeft:\n      return -Math.PI * threeQuarter;\n    case MoveDirection.inside:\n      return Math.atan2(center.y - position.y, center.x - position.x);\n    case MoveDirection.outside:\n      return Math.atan2(position.y - center.y, position.x - center.x);\n    default:\n      return getRandom() * doublePI;\n  }\n}\nexport function getParticleBaseVelocity(direction) {\n  const baseVelocity = Vector.origin;\n  baseVelocity.length = 1;\n  baseVelocity.angle = direction;\n  return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n  return Vector.create(v1.x * (m1 - m2) / (m1 + m2) + v2.x * double * m2 / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n  return data.position?.x !== undefined && data.position.y !== undefined ? {\n    x: data.position.x * data.size.width / percentDenominator,\n    y: data.position.y * data.size.height / percentDenominator\n  } : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n  return {\n    x: (data.position?.x ?? getRandom() * percentDenominator) * data.size.width / percentDenominator,\n    y: (data.position?.y ?? getRandom() * percentDenominator) * data.size.height / percentDenominator\n  };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n  const position = {\n    x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n    y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined\n  };\n  return calcPositionOrRandomFromSize({\n    size: data.size,\n    position\n  });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n  return {\n    x: data.position?.x ?? getRandom() * data.size.width,\n    y: data.position?.y ?? getRandom() * data.size.height\n  };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n  const position = {\n    x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n    y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined\n  };\n  return calcExactPositionOrRandomFromSize({\n    size: data.size,\n    position\n  });\n}\nexport function parseAlpha(input) {\n  const defaultAlpha = 1;\n  if (!input) {\n    return defaultAlpha;\n  }\n  return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}", "export var AnimationMode;\n(function (AnimationMode) {\n  AnimationMode[\"auto\"] = \"auto\";\n  AnimationMode[\"increase\"] = \"increase\";\n  AnimationMode[\"decrease\"] = \"decrease\";\n  AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));", "export var AnimationStatus;\n(function (AnimationStatus) {\n  AnimationStatus[\"increasing\"] = \"increasing\";\n  AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));", "export var DestroyType;\n(function (DestroyType) {\n  DestroyType[\"none\"] = \"none\";\n  DestroyType[\"max\"] = \"max\";\n  DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));", "export var OutModeDirection;\n(function (OutModeDirection) {\n  OutModeDirection[\"bottom\"] = \"bottom\";\n  OutModeDirection[\"left\"] = \"left\";\n  OutModeDirection[\"right\"] = \"right\";\n  OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));", "export var PixelMode;\n(function (PixelMode) {\n  PixelMode[\"precise\"] = \"precise\";\n  PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));", "export var StartValueType;\n(function (StartValueType) {\n  StartValueType[\"max\"] = \"max\";\n  StartValueType[\"min\"] = \"min\";\n  StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));", "import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n  debug: console.debug,\n  error: console.error,\n  info: console.info,\n  log: console.log,\n  verbose: console.log,\n  warning: console.warn\n};\nexport function setLogger(logger) {\n  _logger.debug = logger.debug || _logger.debug;\n  _logger.error = logger.error || _logger.error;\n  _logger.info = logger.info || _logger.info;\n  _logger.log = logger.log || _logger.log;\n  _logger.verbose = logger.verbose || _logger.verbose;\n  _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n  return _logger;\n}\nfunction memoize(fn) {\n  const cache = new Map();\n  return (...args) => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = fn(...args);\n    cache.set(key, result);\n    return result;\n  };\n}\nfunction rectSideBounce(data) {\n  const res = {\n      bounced: false\n    },\n    {\n      pSide,\n      pOtherSide,\n      rectSide,\n      rectOtherSide,\n      velocity,\n      factor\n    } = data;\n  if (pOtherSide.min < rectOtherSide.min || pOtherSide.min > rectOtherSide.max || pOtherSide.max < rectOtherSide.min || pOtherSide.max > rectOtherSide.max) {\n    return res;\n  }\n  if (pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity || pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity) {\n    res.velocity = velocity * -factor;\n    res.bounced = true;\n  }\n  return res;\n}\nfunction checkSelector(element, selectors) {\n  const res = executeOnSingleOrMultiple(selectors, selector => {\n    return element.matches(selector);\n  });\n  return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n  return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n  return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n  if (!hasMatchMedia()) {\n    return;\n  }\n  return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n  if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n    return;\n  }\n  return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n  if (isSsr() || typeof MutationObserver === \"undefined\") {\n    return;\n  }\n  return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n  const invalidIndex = -1;\n  return value === array || isArray(array) && array.indexOf(value) > invalidIndex;\n}\nexport async function loadFont(font, weight) {\n  try {\n    await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n  } catch {}\n}\nexport function arrayRandomIndex(array) {\n  return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n  return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n  const minRadius = 0;\n  return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n  let inside = true;\n  if (!direction || direction === OutModeDirection.bottom) {\n    inside = bounds.top < size.height + offset.x;\n  }\n  if (inside && (!direction || direction === OutModeDirection.left)) {\n    inside = bounds.right > offset.x;\n  }\n  if (inside && (!direction || direction === OutModeDirection.right)) {\n    inside = bounds.left < size.width + offset.y;\n  }\n  if (inside && (!direction || direction === OutModeDirection.top)) {\n    inside = bounds.bottom > offset.y;\n  }\n  return inside;\n}\nexport function calculateBounds(point, radius) {\n  return {\n    bottom: point.y + radius,\n    left: point.x - radius,\n    right: point.x + radius,\n    top: point.y - radius\n  };\n}\nexport function deepExtend(destination, ...sources) {\n  for (const source of sources) {\n    if (source === undefined || source === null) {\n      continue;\n    }\n    if (!isObject(source)) {\n      destination = source;\n      continue;\n    }\n    const sourceIsArray = Array.isArray(source);\n    if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n      destination = [];\n    } else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n      destination = {};\n    }\n    for (const key in source) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      const sourceDict = source,\n        value = sourceDict[key],\n        destDict = destination;\n      destDict[key] = isObject(value) && Array.isArray(value) ? value.map(v => deepExtend(destDict[key], v)) : deepExtend(destDict[key], value);\n    }\n  }\n  return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n  return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n  executeOnSingleOrMultiple(divs, div => {\n    const divMode = div.mode,\n      divEnabled = div.enable;\n    if (divEnabled && isInArray(mode, divMode)) {\n      singleDivModeExecute(div, callback);\n    }\n  });\n}\nexport function singleDivModeExecute(div, callback) {\n  const selectors = div.selectors;\n  executeOnSingleOrMultiple(selectors, selector => {\n    callback(selector, div);\n  });\n}\nexport function divMode(divs, element) {\n  if (!element || !divs) {\n    return;\n  }\n  return findItemFromSingleOrMultiple(divs, div => {\n    return checkSelector(element, div.selectors);\n  });\n}\nexport function circleBounceDataFromParticle(p) {\n  return {\n    position: p.getPosition(),\n    radius: p.getRadius(),\n    mass: p.getMass(),\n    velocity: p.velocity,\n    factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value))\n  };\n}\nexport function circleBounce(p1, p2) {\n  const {\n      x: xVelocityDiff,\n      y: yVelocityDiff\n    } = p1.velocity.sub(p2.velocity),\n    [pos1, pos2] = [p1.position, p2.position],\n    {\n      dx: xDist,\n      dy: yDist\n    } = getDistances(pos2, pos1),\n    minimumDistance = 0;\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n    return;\n  }\n  const angle = -Math.atan2(yDist, xDist),\n    m1 = p1.mass,\n    m2 = p2.mass,\n    u1 = p1.velocity.rotate(angle),\n    u2 = p2.velocity.rotate(angle),\n    v1 = collisionVelocity(u1, u2, m1, m2),\n    v2 = collisionVelocity(u2, u1, m1, m2),\n    vFinal1 = v1.rotate(-angle),\n    vFinal2 = v2.rotate(-angle);\n  p1.velocity.x = vFinal1.x * p1.factor.x;\n  p1.velocity.y = vFinal1.y * p1.factor.y;\n  p2.velocity.x = vFinal2.x * p2.factor.x;\n  p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n  const pPos = particle.getPosition(),\n    size = particle.getRadius(),\n    bounds = calculateBounds(pPos, size),\n    bounceOptions = particle.options.bounce,\n    resH = rectSideBounce({\n      pSide: {\n        min: bounds.left,\n        max: bounds.right\n      },\n      pOtherSide: {\n        min: bounds.top,\n        max: bounds.bottom\n      },\n      rectSide: {\n        min: divBounds.left,\n        max: divBounds.right\n      },\n      rectOtherSide: {\n        min: divBounds.top,\n        max: divBounds.bottom\n      },\n      velocity: particle.velocity.x,\n      factor: getRangeValue(bounceOptions.horizontal.value)\n    });\n  if (resH.bounced) {\n    if (resH.velocity !== undefined) {\n      particle.velocity.x = resH.velocity;\n    }\n    if (resH.position !== undefined) {\n      particle.position.x = resH.position;\n    }\n  }\n  const resV = rectSideBounce({\n    pSide: {\n      min: bounds.top,\n      max: bounds.bottom\n    },\n    pOtherSide: {\n      min: bounds.left,\n      max: bounds.right\n    },\n    rectSide: {\n      min: divBounds.top,\n      max: divBounds.bottom\n    },\n    rectOtherSide: {\n      min: divBounds.left,\n      max: divBounds.right\n    },\n    velocity: particle.velocity.y,\n    factor: getRangeValue(bounceOptions.vertical.value)\n  });\n  if (resV.bounced) {\n    if (resV.velocity !== undefined) {\n      particle.velocity.y = resV.velocity;\n    }\n    if (resV.position !== undefined) {\n      particle.position.y = resV.position;\n    }\n  }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n  const defaultIndex = 0;\n  return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n  return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n  if (isArray(obj)) {\n    return obj.find((t, index) => callback(t, index));\n  }\n  const defaultIndex = 0;\n  return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n  const valueRange = options.value,\n    animationOptions = options.animation,\n    res = {\n      delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n      enable: animationOptions.enable,\n      value: getRangeValue(options.value) * pxRatio,\n      max: getRangeMax(valueRange) * pxRatio,\n      min: getRangeMin(valueRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(animationOptions.count),\n      time: 0\n    },\n    decayOffset = 1;\n  if (animationOptions.enable) {\n    res.decay = decayOffset - getRangeValue(animationOptions.decay);\n    switch (animationOptions.mode) {\n      case AnimationMode.increase:\n        res.status = AnimationStatus.increasing;\n        break;\n      case AnimationMode.decrease:\n        res.status = AnimationStatus.decreasing;\n        break;\n      case AnimationMode.random:\n        res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n        break;\n    }\n    const autoStatus = animationOptions.mode === AnimationMode.auto;\n    switch (animationOptions.startValue) {\n      case StartValueType.min:\n        res.value = res.min;\n        if (autoStatus) {\n          res.status = AnimationStatus.increasing;\n        }\n        break;\n      case StartValueType.max:\n        res.value = res.max;\n        if (autoStatus) {\n          res.status = AnimationStatus.decreasing;\n        }\n        break;\n      case StartValueType.random:\n      default:\n        res.value = randomInRange(res);\n        if (autoStatus) {\n          res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n        }\n        break;\n    }\n  }\n  res.initialValue = res.value;\n  return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n  const isPercent = positionOrSize.mode === PixelMode.percent;\n  if (!isPercent) {\n    const {\n      mode: _,\n      ...rest\n    } = positionOrSize;\n    return rest;\n  }\n  const isPosition = \"x\" in positionOrSize;\n  if (isPosition) {\n    return {\n      x: positionOrSize.x / percentDenominator * canvasSize.width,\n      y: positionOrSize.y / percentDenominator * canvasSize.height\n    };\n  } else {\n    return {\n      width: positionOrSize.width / percentDenominator * canvasSize.width,\n      height: positionOrSize.height / percentDenominator * canvasSize.height\n    };\n  }\n}\nexport function getPosition(position, canvasSize) {\n  return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n  return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n  switch (destroyType) {\n    case DestroyType.max:\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n      break;\n    case DestroyType.min:\n      if (value <= minValue) {\n        particle.destroy();\n      }\n      break;\n  }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n  const minLoops = 0,\n    minDelay = 0,\n    identity = 1,\n    minVelocity = 0,\n    minDecay = 1;\n  if (particle.destroyed || !data || !data.enable || (data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops)) {\n    return;\n  }\n  const velocity = (data.velocity ?? minVelocity) * delta.factor,\n    minValue = data.min,\n    maxValue = data.max,\n    decay = data.decay ?? minDecay;\n  if (!data.time) {\n    data.time = 0;\n  }\n  if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n    data.time += delta.value;\n  }\n  if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n    return;\n  }\n  switch (data.status) {\n    case AnimationStatus.increasing:\n      if (data.value >= maxValue) {\n        if (changeDirection) {\n          data.status = AnimationStatus.decreasing;\n        } else {\n          data.value -= maxValue;\n        }\n        if (!data.loops) {\n          data.loops = minLoops;\n        }\n        data.loops++;\n      } else {\n        data.value += velocity;\n      }\n      break;\n    case AnimationStatus.decreasing:\n      if (data.value <= minValue) {\n        if (changeDirection) {\n          data.status = AnimationStatus.increasing;\n        } else {\n          data.value += maxValue;\n        }\n        if (!data.loops) {\n          data.loops = minLoops;\n        }\n        data.loops++;\n      } else {\n        data.value -= velocity;\n      }\n  }\n  if (data.velocity && decay !== identity) {\n    data.velocity *= decay;\n  }\n  checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n  if (!particle.destroyed) {\n    data.value = clamp(data.value, minValue, maxValue);\n  }\n}\nexport function cloneStyle(style) {\n  const clonedStyle = document.createElement(\"div\").style;\n  if (!style) {\n    return clonedStyle;\n  }\n  for (const key in style) {\n    const styleKey = style[key];\n    if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n      continue;\n    }\n    const styleValue = style.getPropertyValue?.(styleKey);\n    if (!styleValue) {\n      continue;\n    }\n    const stylePriority = style.getPropertyPriority?.(styleKey);\n    if (!stylePriority) {\n      clonedStyle.setProperty?.(styleKey, styleValue);\n    } else {\n      clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n    }\n  }\n  return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n  const fullScreenStyle = document.createElement(\"div\").style,\n    radix = 10,\n    style = {\n      width: \"100%\",\n      height: \"100%\",\n      margin: \"0\",\n      padding: \"0\",\n      borderWidth: \"0\",\n      position: \"fixed\",\n      zIndex: zIndex.toString(radix),\n      top: \"0\",\n      left: \"0\"\n    };\n  for (const key in style) {\n    const value = style[key];\n    fullScreenStyle.setProperty(key, value);\n  }\n  return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);", "export var AlterType;\n(function (AlterType) {\n  AlterType[\"darken\"] = \"darken\";\n  AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n  if (!input) {\n    return;\n  }\n  for (const manager of engine.colorManagers.values()) {\n    if (input.startsWith(manager.stringPrefix)) {\n      return manager.parseString(input);\n    }\n  }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return colorToRgb(engine, color.value, index, useIndex);\n  }\n  if (isArray(color.value)) {\n    return rangeColorToRgb(engine, {\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const manager of engine.colorManagers.values()) {\n    const res = manager.handleRangeColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n  }\n  if (isArray(color.value)) {\n    return colorToRgb(engine, {\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const manager of engine.colorManagers.values()) {\n    const res = manager.handleColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n  const rgb = colorToRgb(engine, color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n  const rgb = rangeColorToRgb(engine, color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n  const r1 = color.r / rgbMax,\n    g1 = color.g / rgbMax,\n    b1 = color.b / rgbMax,\n    max = Math.max(r1, g1, b1),\n    min = Math.min(r1, g1, b1),\n    res = {\n      h: hMin,\n      l: (max + min) * half,\n      s: sMin\n    };\n  if (max !== min) {\n    res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n    res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min);\n  }\n  res.l *= lMax;\n  res.s *= sMax;\n  res.h *= hPhase;\n  if (res.h < hMin) {\n    res.h += hMax;\n  }\n  if (res.h >= hMax) {\n    res.h -= hMax;\n  }\n  return res;\n}\nexport function stringToAlpha(engine, input) {\n  return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n  return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n  const h = (hsl.h % hMax + hMax) % hMax,\n    s = Math.max(sMin, Math.min(sMax, hsl.s)),\n    l = Math.max(lMin, Math.min(lMax, hsl.l)),\n    hNormalized = h / hMax,\n    sNormalized = s / sMax,\n    lNormalized = l / lMax;\n  if (s === sMin) {\n    const grayscaleValue = Math.round(lNormalized * rgbFactor);\n    return {\n      r: grayscaleValue,\n      g: grayscaleValue,\n      b: grayscaleValue\n    };\n  }\n  const channel = (temp1, temp2, temp3) => {\n      const temp3Min = 0,\n        temp3Max = 1;\n      if (temp3 < temp3Min) {\n        temp3++;\n      }\n      if (temp3 > temp3Max) {\n        temp3--;\n      }\n      if (temp3 * sextuple < temp3Max) {\n        return temp1 + (temp2 - temp1) * sextuple * temp3;\n      }\n      if (temp3 * double < temp3Max) {\n        return temp2;\n      }\n      if (temp3 * triple < temp3Max * double) {\n        const temp3Offset = double / triple;\n        return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n      }\n      return temp1;\n    },\n    temp1 = lNormalized < half ? lNormalized * (sNormalizedOffset + sNormalized) : lNormalized + sNormalized - lNormalized * sNormalized,\n    temp2 = double * lNormalized - temp1,\n    phaseThird = phaseNumerator / triple,\n    red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)),\n    green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)),\n    blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n  return {\n    r: Math.round(red),\n    g: Math.round(green),\n    b: Math.round(blue)\n  };\n}\nexport function hslaToRgba(hsla) {\n  const rgbResult = hslToRgb(hsla);\n  return {\n    a: hsla.a,\n    b: rgbResult.b,\n    g: rgbResult.g,\n    r: rgbResult.r\n  };\n}\nexport function getRandomRgbColor(min) {\n  const fixedMin = min ?? defaultRgbMin,\n    fixedMax = rgbMax + identity;\n  return {\n    b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax)))\n  };\n}\nexport function getStyleFromRgb(color, opacity) {\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n  return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n  let rgb1 = color1,\n    rgb2 = color2;\n  if (rgb1.r === undefined) {\n    rgb1 = hslToRgb(color1);\n  }\n  if (rgb2.r === undefined) {\n    rgb2 = hslToRgb(color2);\n  }\n  return {\n    b: mix(rgb1.b, rgb2.b, size1, size2),\n    g: mix(rgb1.g, rgb2.g, size1, size2),\n    r: mix(rgb1.r, rgb2.r, size1, size2)\n  };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n  if (linkColor === randomColorValue) {\n    return getRandomRgbColor();\n  } else if (linkColor === midColorValue) {\n    const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(),\n      destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n    if (sourceColor && destColor && p2) {\n      return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n    } else {\n      const hslColor = sourceColor ?? destColor;\n      if (hslColor) {\n        return hslToRgb(hslColor);\n      }\n    }\n  } else {\n    return linkColor;\n  }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n  const color = isString(optColor) ? optColor : optColor.value;\n  if (color === randomColorValue) {\n    if (consent) {\n      return rangeColorToRgb(engine, {\n        value: color\n      });\n    }\n    if (blink) {\n      return randomColorValue;\n    }\n    return midColorValue;\n  } else if (color === midColorValue) {\n    return midColorValue;\n  } else {\n    return rangeColorToRgb(engine, {\n      value: color\n    });\n  }\n}\nexport function getHslFromAnimation(animation) {\n  return animation !== undefined ? {\n    h: animation.h.value,\n    s: animation.s.value,\n    l: animation.l.value\n  } : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n  const resColor = {\n    h: {\n      enable: false,\n      value: hsl.h\n    },\n    s: {\n      enable: false,\n      value: hsl.s\n    },\n    l: {\n      enable: false,\n      value: hsl.l\n    }\n  };\n  if (animationOptions) {\n    setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n    setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n    setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n  }\n  return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n  colorValue.enable = colorAnimation.enable;\n  if (colorValue.enable) {\n    colorValue.velocity = getRangeValue(colorAnimation.speed) / percentDenominator * reduceFactor;\n    colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n    colorValue.status = AnimationStatus.increasing;\n    colorValue.loops = defaultLoops;\n    colorValue.maxLoops = getRangeValue(colorAnimation.count);\n    colorValue.time = defaultTime;\n    colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n    if (!colorAnimation.sync) {\n      colorValue.velocity *= getRandom();\n      colorValue.value *= getRandom();\n    }\n    colorValue.initialValue = colorValue.value;\n    colorValue.offset = setRangeValue(colorAnimation.offset);\n  } else {\n    colorValue.velocity = defaultVelocity;\n  }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n  const minLoops = 0,\n    minDelay = 0,\n    identity = 1,\n    minVelocity = 0,\n    minOffset = 0,\n    velocityFactor = 3.6;\n  if (!data || !data.enable || (data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops)) {\n    return;\n  }\n  if (!data.time) {\n    data.time = 0;\n  }\n  if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n    data.time += delta.value;\n  }\n  if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n    return;\n  }\n  const offset = data.offset ? randomInRange(data.offset) : minOffset,\n    velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor,\n    decay = data.decay ?? identity,\n    max = getRangeMax(range),\n    min = getRangeMin(range);\n  if (!decrease || data.status === AnimationStatus.increasing) {\n    data.value += velocity;\n    if (data.value > max) {\n      if (!data.loops) {\n        data.loops = 0;\n      }\n      data.loops++;\n      if (decrease) {\n        data.status = AnimationStatus.decreasing;\n      } else {\n        data.value -= max;\n      }\n    }\n  } else {\n    data.value -= velocity;\n    const minValue = 0;\n    if (data.value < minValue) {\n      if (!data.loops) {\n        data.loops = 0;\n      }\n      data.loops++;\n      data.status = AnimationStatus.increasing;\n    }\n  }\n  if (data.velocity && decay !== identity) {\n    data.velocity *= decay;\n  }\n  data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n  if (!color) {\n    return;\n  }\n  const {\n      h,\n      s,\n      l\n    } = color,\n    ranges = {\n      h: {\n        min: 0,\n        max: 360\n      },\n      s: {\n        min: 0,\n        max: 100\n      },\n      l: {\n        min: 0,\n        max: 100\n      }\n    };\n  if (h) {\n    updateColorValue(h, ranges.h, false, delta);\n  }\n  if (s) {\n    updateColorValue(s, ranges.s, true, delta);\n  }\n  if (l) {\n    updateColorValue(l, ranges.l, true, delta);\n  }\n}", "import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n  context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n  context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n  if (!image) {\n    return;\n  }\n  context.globalAlpha = opacity;\n  context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n  context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n  context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n  const {\n      container,\n      context,\n      particle,\n      delta,\n      colorStyles,\n      backgroundMask,\n      composite,\n      radius,\n      opacity,\n      shadow,\n      transform\n    } = data,\n    pos = particle.getPosition(),\n    angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle),\n    rotateData = {\n      sin: Math.sin(angle),\n      cos: Math.cos(angle)\n    },\n    rotating = !!angle,\n    transformData = {\n      a: rotateData.cos * (transform.a ?? defaultTransform.a),\n      b: rotating ? rotateData.sin * (transform.b ?? identity) : transform.b ?? defaultTransform.b,\n      c: rotating ? -rotateData.sin * (transform.c ?? identity) : transform.c ?? defaultTransform.c,\n      d: rotateData.cos * (transform.d ?? defaultTransform.d)\n    };\n  context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n  const shadowColor = particle.shadowColor;\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n  const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n  context.lineWidth = strokeWidth;\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n  const drawData = {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData,\n    strokeWidth\n  };\n  drawShape(drawData);\n  drawShapeAfterDraw(drawData);\n  drawEffect(drawData);\n  context.globalCompositeOperation = \"source-over\";\n  context.resetTransform();\n}\nexport function drawEffect(data) {\n  const {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData\n  } = data;\n  if (!particle.effect) {\n    return;\n  }\n  const drawer = container.effectDrawers.get(particle.effect);\n  if (!drawer) {\n    return;\n  }\n  drawer.draw({\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    pixelRatio: container.retina.pixelRatio,\n    transformData: {\n      ...transformData\n    }\n  });\n}\nexport function drawShape(data) {\n  const {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    strokeWidth,\n    transformData\n  } = data;\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.shapeDrawers.get(particle.shape);\n  if (!drawer) {\n    return;\n  }\n  context.beginPath();\n  drawer.draw({\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    pixelRatio: container.retina.pixelRatio,\n    transformData: {\n      ...transformData\n    }\n  });\n  if (particle.shapeClose) {\n    context.closePath();\n  }\n  if (strokeWidth > minStrokeWidth) {\n    context.stroke();\n  }\n  if (particle.shapeFill) {\n    context.fill();\n  }\n}\nexport function drawShapeAfterDraw(data) {\n  const {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData\n  } = data;\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.shapeDrawers.get(particle.shape);\n  if (!drawer?.afterDraw) {\n    return;\n  }\n  drawer.afterDraw({\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    pixelRatio: container.retina.pixelRatio,\n    transformData: {\n      ...transformData\n    }\n  });\n}\nexport function drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n  plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n  plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value\n  };\n}", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n  const newValue = newFactor[key];\n  if (newValue !== undefined) {\n    factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n  }\n}\nfunction setStyle(canvas, style, important = false) {\n  if (!style) {\n    return;\n  }\n  const element = canvas;\n  if (!element) {\n    return;\n  }\n  const elementStyle = element.style;\n  if (!elementStyle) {\n    return;\n  }\n  const keys = new Set();\n  for (const key in elementStyle) {\n    if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n      continue;\n    }\n    keys.add(elementStyle[key]);\n  }\n  for (const key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n    keys.add(style[key]);\n  }\n  for (const key of keys) {\n    const value = style.getPropertyValue(key);\n    if (!value) {\n      elementStyle.removeProperty(key);\n    } else {\n      elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n  }\n}\nexport class Canvas {\n  constructor(container, engine) {\n    this.container = container;\n    this._applyPostDrawUpdaters = particle => {\n      for (const updater of this._postDrawUpdaters) {\n        updater.afterDraw?.(particle);\n      }\n    };\n    this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n      for (const updater of this._preDrawUpdaters) {\n        if (updater.getColorStyles) {\n          const {\n            fill,\n            stroke\n          } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n          if (fill) {\n            colorStyles.fill = fill;\n          }\n          if (stroke) {\n            colorStyles.stroke = stroke;\n          }\n        }\n        if (updater.getTransformValues) {\n          const updaterTransform = updater.getTransformValues(particle);\n          for (const key in updaterTransform) {\n            setTransformValue(transform, updaterTransform, key);\n          }\n        }\n        updater.beforeDraw?.(particle);\n      }\n    };\n    this._applyResizePlugins = () => {\n      for (const plugin of this._resizePlugins) {\n        plugin.resize?.();\n      }\n    };\n    this._getPluginParticleColors = particle => {\n      let fColor, sColor;\n      for (const plugin of this._colorPlugins) {\n        if (!fColor && plugin.particleFillColor) {\n          fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n        }\n        if (!sColor && plugin.particleStrokeColor) {\n          sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n        }\n        if (fColor && sColor) {\n          break;\n        }\n      }\n      return [fColor, sColor];\n    };\n    this._initCover = async () => {\n      const options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color;\n      if (color) {\n        const coverRgb = rangeColorToRgb(this._engine, color);\n        if (coverRgb) {\n          const coverColor = {\n            ...coverRgb,\n            a: cover.opacity\n          };\n          this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n      } else {\n        await new Promise((resolve, reject) => {\n          if (!cover.image) {\n            return;\n          }\n          const img = document.createElement(\"img\");\n          img.addEventListener(\"load\", () => {\n            this._coverImage = {\n              image: img,\n              opacity: cover.opacity\n            };\n            resolve();\n          });\n          img.addEventListener(\"error\", evt => {\n            reject(evt.error);\n          });\n          img.src = cover.image;\n        });\n      }\n    };\n    this._initStyle = () => {\n      const element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      if (this._fullScreen) {\n        this._setFullScreenStyle();\n      } else {\n        this._resetOriginalStyle();\n      }\n      for (const key in options.style) {\n        if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n          continue;\n        }\n        const value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    };\n    this._initTrail = async () => {\n      const options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        trailFill = trail.fill;\n      if (!trail.enable) {\n        return;\n      }\n      const opacity = inverseFactorNumerator / trail.length;\n      if (trailFill.color) {\n        const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n        if (!fillColor) {\n          return;\n        }\n        this._trailFill = {\n          color: {\n            ...fillColor\n          },\n          opacity\n        };\n      } else {\n        await new Promise((resolve, reject) => {\n          if (!trailFill.image) {\n            return;\n          }\n          const img = document.createElement(\"img\");\n          img.addEventListener(\"load\", () => {\n            this._trailFill = {\n              image: img,\n              opacity\n            };\n            resolve();\n          });\n          img.addEventListener(\"error\", evt => {\n            reject(evt.error);\n          });\n          img.src = trailFill.image;\n        });\n      }\n    };\n    this._paintBase = baseColor => {\n      this.draw(ctx => paintBase(ctx, this.size, baseColor));\n    };\n    this._paintImage = (image, opacity) => {\n      this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n    };\n    this._repairStyle = () => {\n      const element = this.element;\n      if (!element) {\n        return;\n      }\n      this._safeMutationObserver(observer => observer.disconnect());\n      this._initStyle();\n      this.initBackground();\n      this._safeMutationObserver(observer => {\n        if (!element || !(element instanceof Node)) {\n          return;\n        }\n        observer.observe(element, {\n          attributes: true\n        });\n      });\n    };\n    this._resetOriginalStyle = () => {\n      const element = this.element,\n        originalStyle = this._originalStyle;\n      if (!element || !originalStyle) {\n        return;\n      }\n      setStyle(element, originalStyle, true);\n    };\n    this._safeMutationObserver = callback => {\n      if (!this._mutationObserver) {\n        return;\n      }\n      callback(this._mutationObserver);\n    };\n    this._setFullScreenStyle = () => {\n      const element = this.element;\n      if (!element) {\n        return;\n      }\n      setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n    };\n    this._engine = engine;\n    this._standardSize = {\n      height: 0,\n      width: 0\n    };\n    const pxRatio = container.retina.pixelRatio,\n      stdSize = this._standardSize;\n    this.size = {\n      height: stdSize.height * pxRatio,\n      width: stdSize.width * pxRatio\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n  get _fullScreen() {\n    return this.container.actualOptions.fullScreen.enable;\n  }\n  clear() {\n    const options = this.container.actualOptions,\n      trail = options.particles.move.trail,\n      trailFill = this._trailFill;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > minimumLength && trailFill) {\n      if (trailFill.color) {\n        this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n      } else if (trailFill.image) {\n        this._paintImage(trailFill.image, trailFill.opacity);\n      }\n    } else if (options.clear) {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n  destroy() {\n    this.stop();\n    if (this._generated) {\n      const element = this.element;\n      element?.remove();\n      this.element = undefined;\n    } else {\n      this._resetOriginalStyle();\n    }\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n  draw(cb) {\n    const ctx = this._context;\n    if (!ctx) {\n      return;\n    }\n    return cb(ctx);\n  }\n  drawAsync(cb) {\n    const ctx = this._context;\n    if (!ctx) {\n      return undefined;\n    }\n    return cb(ctx);\n  }\n  drawParticle(particle, delta) {\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n    const radius = particle.getRadius();\n    if (radius <= minimumSize) {\n      return;\n    }\n    const pfColor = particle.getFillColor(),\n      psColor = particle.getStrokeColor() ?? pfColor;\n    let [fColor, sColor] = this._getPluginParticleColors(particle);\n    if (!fColor) {\n      fColor = pfColor;\n    }\n    if (!sColor) {\n      sColor = psColor;\n    }\n    if (!fColor && !sColor) {\n      return;\n    }\n    this.draw(ctx => {\n      const container = this.container,\n        options = container.actualOptions,\n        zIndexOptions = particle.options.zIndex,\n        zIndexFactor = zIndexFactorOffset - particle.zIndexFactor,\n        zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate,\n        opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity,\n        strokeOpacity = particle.strokeOpacity ?? opacity,\n        zOpacity = opacity * zOpacityFactor,\n        zStrokeOpacity = strokeOpacity * zOpacityFactor,\n        transform = {},\n        colorStyles = {\n          fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n        };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n      drawParticle({\n        container,\n        context: ctx,\n        particle,\n        delta,\n        colorStyles,\n        backgroundMask: options.backgroundMask.enable,\n        composite: options.backgroundMask.composite,\n        radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n        opacity: zOpacity,\n        shadow: particle.options.shadow,\n        transform\n      });\n      this._applyPostDrawUpdaters(particle);\n    });\n  }\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n  }\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => drawPlugin(ctx, plugin, delta));\n  }\n  async init() {\n    this._safeMutationObserver(obs => obs.disconnect());\n    this._mutationObserver = safeMutationObserver(records => {\n      for (const record of records) {\n        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n          this._repairStyle();\n        }\n      }\n    });\n    this.resize();\n    this._initStyle();\n    await this._initCover();\n    try {\n      await this._initTrail();\n    } catch (e) {\n      getLogger().error(e);\n    }\n    this.initBackground();\n    this._safeMutationObserver(obs => {\n      if (!this.element || !(this.element instanceof Node)) {\n        return;\n      }\n      obs.observe(this.element, {\n        attributes: true\n      });\n    });\n    this.initUpdaters();\n    this.initPlugins();\n    this.paint();\n  }\n  initBackground() {\n    const options = this.container.actualOptions,\n      background = options.background,\n      element = this.element;\n    if (!element) {\n      return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = rangeColorToRgb(this._engine, background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  initPlugins() {\n    this._resizePlugins = [];\n    for (const plugin of this.container.plugins.values()) {\n      if (plugin.resize) {\n        this._resizePlugins.push(plugin);\n      }\n      if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n        this._colorPlugins.push(plugin);\n      }\n    }\n  }\n  initUpdaters() {\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    for (const updater of this.container.particles.updaters) {\n      if (updater.afterDraw) {\n        this._postDrawUpdaters.push(updater);\n      }\n      if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n        this._preDrawUpdaters.push(updater);\n      }\n    }\n  }\n  loadCanvas(canvas) {\n    if (this._generated && this.element) {\n      this.element.remove();\n    }\n    this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n    this.element = canvas;\n    this.element.ariaHidden = \"true\";\n    this._originalStyle = cloneStyle(this.element.style);\n    const standardSize = this._standardSize;\n    standardSize.height = canvas.offsetHeight;\n    standardSize.width = canvas.offsetWidth;\n    const pxRatio = this.container.retina.pixelRatio,\n      retinaSize = this.size;\n    canvas.height = retinaSize.height = standardSize.height * pxRatio;\n    canvas.width = retinaSize.width = standardSize.width * pxRatio;\n    this._context = this.element.getContext(\"2d\");\n    this._safeMutationObserver(obs => obs.disconnect());\n    this.container.retina.init();\n    this.initBackground();\n    this._safeMutationObserver(obs => {\n      if (!this.element || !(this.element instanceof Node)) {\n        return;\n      }\n      obs.observe(this.element, {\n        attributes: true\n      });\n    });\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n        if (this._coverImage) {\n          this._paintImage(this._coverImage.image, this._coverImage.opacity);\n        } else if (this._coverColorStyle) {\n          this._paintBase(this._coverColorStyle);\n        } else {\n          this._paintBase();\n        }\n      } else {\n        this._paintBase();\n      }\n    });\n  }\n  resize() {\n    if (!this.element) {\n      return false;\n    }\n    const container = this.container,\n      currentSize = container.canvas._standardSize,\n      newSize = {\n        width: this.element.offsetWidth,\n        height: this.element.offsetHeight\n      },\n      pxRatio = container.retina.pixelRatio,\n      retinaSize = {\n        width: newSize.width * pxRatio,\n        height: newSize.height * pxRatio\n      };\n    if (newSize.height === currentSize.height && newSize.width === currentSize.width && retinaSize.height === this.element.height && retinaSize.width === this.element.width) {\n      return false;\n    }\n    const oldSize = {\n      ...currentSize\n    };\n    currentSize.height = newSize.height;\n    currentSize.width = newSize.width;\n    const canvasSize = this.size;\n    this.element.width = canvasSize.width = retinaSize.width;\n    this.element.height = canvasSize.height = retinaSize.height;\n    if (this.container.started) {\n      container.particles.setResizeFactor({\n        width: currentSize.width / oldSize.width,\n        height: currentSize.height / oldSize.height\n      });\n    }\n    return true;\n  }\n  stop() {\n    this._safeMutationObserver(obs => obs.disconnect());\n    this._mutationObserver = undefined;\n    this.draw(ctx => clear(ctx, this.size));\n  }\n  async windowResize() {\n    if (!this.element || !this.resize()) {\n      return;\n    }\n    const container = this.container,\n      needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n    this._applyResizePlugins();\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n}", "export var InteractivityDetect;\n(function (InteractivityDetect) {\n  InteractivityDetect[\"canvas\"] = \"canvas\";\n  InteractivityDetect[\"parent\"] = \"parent\";\n  InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));", "import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n    if (isBoolean(options)) {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\nexport class EventListeners {\n  constructor(container) {\n    this.container = container;\n    this._doMouseTouchClick = e => {\n      const container = this.container,\n        options = container.actualOptions;\n      if (this._canPush) {\n        const mouseInteractivity = container.interactivity.mouse,\n          mousePos = mouseInteractivity.position;\n        if (!mousePos) {\n          return;\n        }\n        mouseInteractivity.clickPosition = {\n          ...mousePos\n        };\n        mouseInteractivity.clickTime = new Date().getTime();\n        const onClick = options.interactivity.events.onClick;\n        executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n      }\n      if (e.type === \"touchend\") {\n        setTimeout(() => this._mouseTouchFinish(), touchDelay);\n      }\n    };\n    this._handleThemeChange = e => {\n      const mediaEvent = e,\n        container = this.container,\n        options = container.options,\n        defaultThemes = options.defaultThemes,\n        themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light,\n        theme = options.themes.find(theme => theme.name === themeName);\n      if (theme?.default.auto) {\n        void container.loadTheme(themeName);\n      }\n    };\n    this._handleVisibilityChange = () => {\n      const container = this.container,\n        options = container.actualOptions;\n      this._mouseTouchFinish();\n      if (!options.pauseOnBlur) {\n        return;\n      }\n      if (document?.hidden) {\n        container.pageHidden = true;\n        container.pause();\n      } else {\n        container.pageHidden = false;\n        if (container.animationStatus) {\n          void container.play(true);\n        } else {\n          void container.draw(true);\n        }\n      }\n    };\n    this._handleWindowResize = () => {\n      if (this._resizeTimeout) {\n        clearTimeout(this._resizeTimeout);\n        delete this._resizeTimeout;\n      }\n      const handleResize = async () => {\n        const canvas = this.container.canvas;\n        await canvas?.windowResize();\n      };\n      this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n    };\n    this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions,\n        interactivityEl = container.interactivity.element;\n      if (!interactivityEl) {\n        return;\n      }\n      const html = interactivityEl,\n        canvasEl = container.canvas.element;\n      if (canvasEl) {\n        canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n      }\n      if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n        return;\n      }\n      manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n      manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n      manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n      } else {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n        manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n        manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n      }\n      manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n      manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n    };\n    this._manageListeners = add => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions,\n        detectType = options.interactivity.detectsOn,\n        canvasEl = container.canvas.element;\n      let mouseLeaveTmpEvent = mouseLeaveEvent;\n      if (detectType === InteractivityDetect.window) {\n        container.interactivity.element = window;\n        mouseLeaveTmpEvent = mouseOutEvent;\n      } else if (detectType === InteractivityDetect.parent && canvasEl) {\n        container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n      } else {\n        container.interactivity.element = canvasEl;\n      }\n      this._manageMediaMatch(add);\n      this._manageResize(add);\n      this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n      if (document) {\n        manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n      }\n    };\n    this._manageMediaMatch = add => {\n      const handlers = this._handlers,\n        mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n      if (!mediaMatch) {\n        return;\n      }\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n        return;\n      }\n      if (mediaMatch.addListener === undefined) {\n        return;\n      }\n      if (add) {\n        mediaMatch.addListener(handlers.oldThemeChange);\n      } else {\n        mediaMatch.removeListener(handlers.oldThemeChange);\n      }\n    };\n    this._manageResize = add => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions;\n      if (!options.interactivity.events.resize) {\n        return;\n      }\n      if (typeof ResizeObserver === \"undefined\") {\n        manageListener(window, resizeEvent, handlers.resize, add);\n        return;\n      }\n      const canvasEl = container.canvas.element;\n      if (this._resizeObserver && !add) {\n        if (canvasEl) {\n          this._resizeObserver.unobserve(canvasEl);\n        }\n        this._resizeObserver.disconnect();\n        delete this._resizeObserver;\n      } else if (!this._resizeObserver && add && canvasEl) {\n        this._resizeObserver = new ResizeObserver(entries => {\n          const entry = entries.find(e => e.target === canvasEl);\n          if (!entry) {\n            return;\n          }\n          this._handleWindowResize();\n        });\n        this._resizeObserver.observe(canvasEl);\n      }\n    };\n    this._mouseDown = () => {\n      const {\n        interactivity\n      } = this.container;\n      if (!interactivity) {\n        return;\n      }\n      const {\n        mouse\n      } = interactivity;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    };\n    this._mouseTouchClick = e => {\n      const container = this.container,\n        options = container.actualOptions,\n        {\n          mouse\n        } = container.interactivity;\n      mouse.inside = true;\n      let handled = false;\n      const mousePosition = mouse.position;\n      if (!mousePosition || !options.interactivity.events.onClick.enable) {\n        return;\n      }\n      for (const plugin of container.plugins.values()) {\n        if (!plugin.clickPositionValid) {\n          continue;\n        }\n        handled = plugin.clickPositionValid(mousePosition);\n        if (handled) {\n          break;\n        }\n      }\n      if (!handled) {\n        this._doMouseTouchClick(e);\n      }\n      mouse.clicking = false;\n    };\n    this._mouseTouchFinish = () => {\n      const interactivity = this.container.interactivity;\n      if (!interactivity) {\n        return;\n      }\n      const mouse = interactivity.mouse;\n      delete mouse.position;\n      delete mouse.clickPosition;\n      delete mouse.downPosition;\n      interactivity.status = mouseLeaveEvent;\n      mouse.inside = false;\n      mouse.clicking = false;\n    };\n    this._mouseTouchMove = e => {\n      const container = this.container,\n        options = container.actualOptions,\n        interactivity = container.interactivity,\n        canvasEl = container.canvas.element;\n      if (!interactivity?.element) {\n        return;\n      }\n      interactivity.mouse.inside = true;\n      let pos;\n      if (e.type.startsWith(\"pointer\")) {\n        this._canPush = true;\n        const mouseEvent = e;\n        if (interactivity.element === window) {\n          if (canvasEl) {\n            const clientRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.clientX - clientRect.left,\n              y: mouseEvent.clientY - clientRect.top\n            };\n          }\n        } else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n          const source = mouseEvent.target,\n            target = mouseEvent.currentTarget;\n          if (source && target && canvasEl) {\n            const sourceRect = source.getBoundingClientRect(),\n              targetRect = target.getBoundingClientRect(),\n              canvasRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n              y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top)\n            };\n          } else {\n            pos = {\n              x: mouseEvent.offsetX ?? mouseEvent.clientX,\n              y: mouseEvent.offsetY ?? mouseEvent.clientY\n            };\n          }\n        } else if (mouseEvent.target === canvasEl) {\n          pos = {\n            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n            y: mouseEvent.offsetY ?? mouseEvent.clientY\n          };\n        }\n      } else {\n        this._canPush = e.type !== \"touchmove\";\n        if (canvasEl) {\n          const touchEvent = e,\n            lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset],\n            canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n            y: lastTouch.clientY - (canvasRect.top ?? minCoordinate)\n          };\n        }\n      }\n      const pxRatio = container.retina.pixelRatio;\n      if (pos) {\n        pos.x *= pxRatio;\n        pos.y *= pxRatio;\n      }\n      interactivity.mouse.position = pos;\n      interactivity.status = mouseMoveEvent;\n    };\n    this._touchEnd = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.delete(touch.identifier);\n      }\n      this._mouseTouchFinish();\n    };\n    this._touchEndClick = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.delete(touch.identifier);\n      }\n      this._mouseTouchClick(e);\n    };\n    this._touchStart = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.set(touch.identifier, performance.now());\n      }\n      this._mouseTouchMove(e);\n    };\n    this._canPush = true;\n    this._touches = new Map();\n    this._handlers = {\n      mouseDown: () => this._mouseDown(),\n      mouseLeave: () => this._mouseTouchFinish(),\n      mouseMove: e => this._mouseTouchMove(e),\n      mouseUp: e => this._mouseTouchClick(e),\n      touchStart: e => this._touchStart(e),\n      touchMove: e => this._mouseTouchMove(e),\n      touchEnd: e => this._touchEnd(e),\n      touchCancel: e => this._touchEnd(e),\n      touchEndClick: e => this._touchEndClick(e),\n      visibilityChange: () => this._handleVisibilityChange(),\n      themeChange: e => this._handleThemeChange(e),\n      oldThemeChange: e => this._handleThemeChange(e),\n      resize: () => {\n        this._handleWindowResize();\n      }\n    };\n  }\n  addListeners() {\n    this._manageListeners(true);\n  }\n  removeListeners() {\n    this._manageListeners(false);\n  }\n}", "export var EventType;\n(function (EventType) {\n  EventType[\"configAdded\"] = \"configAdded\";\n  EventType[\"containerInit\"] = \"containerInit\";\n  EventType[\"particlesSetup\"] = \"particlesSetup\";\n  EventType[\"containerStarted\"] = \"containerStarted\";\n  EventType[\"containerStopped\"] = \"containerStopped\";\n  EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n  EventType[\"containerPaused\"] = \"containerPaused\";\n  EventType[\"containerPlay\"] = \"containerPlay\";\n  EventType[\"containerBuilt\"] = \"containerBuilt\";\n  EventType[\"particleAdded\"] = \"particleAdded\";\n  EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n  EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n  constructor() {\n    this.value = \"\";\n  }\n  static create(source, data) {\n    const color = new OptionsColor();\n    color.load(source);\n    if (data !== undefined) {\n      if (isString(data) || isArray(data)) {\n        color.load({\n          value: data\n        });\n      } else {\n        color.load(data);\n      }\n    }\n    return color;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (!isNull(data.value)) {\n      this.value = data.value;\n    }\n  }\n}", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n  constructor() {\n    this.color = new OptionsColor();\n    this.color.value = \"\";\n    this.image = \"\";\n    this.position = \"\";\n    this.repeat = \"\";\n    this.size = \"\";\n    this.opacity = 1;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.image !== undefined) {\n      this.image = data.image;\n    }\n    if (data.position !== undefined) {\n      this.position = data.position;\n    }\n    if (data.repeat !== undefined) {\n      this.repeat = data.repeat;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n  constructor() {\n    this.opacity = 1;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.image !== undefined) {\n      this.image = data.image;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n  constructor() {\n    this.composite = \"destination-out\";\n    this.cover = new BackgroundMaskCover();\n    this.enable = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.composite !== undefined) {\n      this.composite = data.composite;\n    }\n    if (data.cover !== undefined) {\n      const cover = data.cover,\n        color = isString(data.cover) ? {\n          color: data.cover\n        } : data.cover;\n      this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : {\n        color: color\n      });\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n  }\n}", "import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n  constructor() {\n    this.enable = true;\n    this.zIndex = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.zIndex !== undefined) {\n      this.zIndex = data.zIndex;\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n  constructor() {\n    this.enable = false;\n    this.mode = [];\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n  }\n}", "export var DivType;\n(function (DivType) {\n  DivType[\"circle\"] = \"circle\";\n  DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));", "import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n  constructor() {\n    this.selectors = [];\n    this.enable = false;\n    this.mode = [];\n    this.type = DivType.circle;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.selectors !== undefined) {\n      this.selectors = data.selectors;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n  constructor() {\n    this.enable = false;\n    this.force = 2;\n    this.smooth = 10;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.force !== undefined) {\n      this.force = data.force;\n    }\n    if (data.smooth !== undefined) {\n      this.smooth = data.smooth;\n    }\n  }\n}", "import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n  constructor() {\n    this.enable = false;\n    this.mode = [];\n    this.parallax = new Parallax();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    this.parallax.load(data.parallax);\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n  constructor() {\n    this.delay = 0.5;\n    this.enable = true;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.delay !== undefined) {\n      this.delay = data.delay;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n  }\n}", "import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n  constructor() {\n    this.onClick = new ClickEvent();\n    this.onDiv = new DivEvent();\n    this.onHover = new HoverEvent();\n    this.resize = new ResizeEvent();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    this.onClick.load(data.onClick);\n    const onDiv = data.onDiv;\n    if (onDiv !== undefined) {\n      this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n        const tmp = new DivEvent();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    this.onHover.load(data.onHover);\n    this.resize.load(data.resize);\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n  constructor(engine, container) {\n    this._engine = engine;\n    this._container = container;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (!this._container) {\n      return;\n    }\n    const interactors = this._engine.interactors.get(this._container);\n    if (!interactors) {\n      return;\n    }\n    for (const interactor of interactors) {\n      if (!interactor.loadModeOptions) {\n        continue;\n      }\n      interactor.loadModeOptions(this, data);\n    }\n  }\n}", "import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n  constructor(engine, container) {\n    this.detectsOn = InteractivityDetect.window;\n    this.events = new Events();\n    this.modes = new Modes(engine, container);\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    const detectsOn = data.detectsOn;\n    if (detectsOn !== undefined) {\n      this.detectsOn = detectsOn;\n    }\n    this.events.load(data.events);\n    this.modes.load(data.modes);\n  }\n}", "import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.position) {\n      this.position = {\n        x: data.position.x ?? manualDefaultPosition,\n        y: data.position.y ?? manualDefaultPosition,\n        mode: data.position.mode ?? PixelMode.percent\n      };\n    }\n    if (data.options) {\n      this.options = deepExtend({}, data.options);\n    }\n  }\n}", "export var ResponsiveMode;\n(function (ResponsiveMode) {\n  ResponsiveMode[\"screen\"] = \"screen\";\n  ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));", "import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n  constructor() {\n    this.maxWidth = Infinity;\n    this.options = {};\n    this.mode = ResponsiveMode.canvas;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (!isNull(data.maxWidth)) {\n      this.maxWidth = data.maxWidth;\n    }\n    if (!isNull(data.mode)) {\n      if (data.mode === ResponsiveMode.screen) {\n        this.mode = ResponsiveMode.screen;\n      } else {\n        this.mode = ResponsiveMode.canvas;\n      }\n    }\n    if (!isNull(data.options)) {\n      this.options = deepExtend({}, data.options);\n    }\n  }\n}", "export var ThemeMode;\n(function (ThemeMode) {\n  ThemeMode[\"any\"] = \"any\";\n  ThemeMode[\"dark\"] = \"dark\";\n  ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));", "import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n  constructor() {\n    this.auto = false;\n    this.mode = ThemeMode.any;\n    this.value = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.auto !== undefined) {\n      this.auto = data.auto;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.value !== undefined) {\n      this.value = data.value;\n    }\n  }\n}", "import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n  constructor() {\n    this.name = \"\";\n    this.default = new ThemeDefault();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.name !== undefined) {\n      this.name = data.name;\n    }\n    this.default.load(data.default);\n    if (data.options !== undefined) {\n      this.options = deepExtend({}, data.options);\n    }\n  }\n}", "import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n  constructor() {\n    this.count = 0;\n    this.enable = false;\n    this.speed = 1;\n    this.decay = 0;\n    this.delay = 0;\n    this.sync = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.count !== undefined) {\n      this.count = setRangeValue(data.count);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.delay !== undefined) {\n      this.delay = setRangeValue(data.delay);\n    }\n    if (data.sync !== undefined) {\n      this.sync = data.sync;\n    }\n  }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n  constructor() {\n    super();\n    this.mode = AnimationMode.auto;\n    this.startValue = StartValueType.random;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.startValue !== undefined) {\n      this.startValue = data.startValue;\n    }\n  }\n}", "import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n  constructor() {\n    super();\n    this.offset = 0;\n    this.sync = true;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.offset !== undefined) {\n      this.offset = setRangeValue(data.offset);\n    }\n  }\n}", "import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n  constructor() {\n    this.h = new ColorAnimation();\n    this.s = new ColorAnimation();\n    this.l = new ColorAnimation();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    this.h.load(data.h);\n    this.s.load(data.s);\n    this.l.load(data.l);\n  }\n}", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n  constructor() {\n    super();\n    this.animation = new HslAnimation();\n  }\n  static create(source, data) {\n    const color = new AnimatableColor();\n    color.load(source);\n    if (data !== undefined) {\n      if (isString(data) || isArray(data)) {\n        color.load({\n          value: data\n        });\n      } else {\n        color.load(data);\n      }\n    }\n    return color;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    const colorAnimation = data.animation;\n    if (colorAnimation !== undefined) {\n      if (colorAnimation.enable !== undefined) {\n        this.animation.h.load(colorAnimation);\n      } else {\n        this.animation.load(data.animation);\n      }\n    }\n  }\n}", "export var CollisionMode;\n(function (CollisionMode) {\n  CollisionMode[\"absorb\"] = \"absorb\";\n  CollisionMode[\"bounce\"] = \"bounce\";\n  CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n  constructor() {\n    this.speed = 2;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.speed !== undefined) {\n      this.speed = data.speed;\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n  constructor() {\n    this.enable = true;\n    this.retries = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.retries !== undefined) {\n      this.retries = data.retries;\n    }\n  }\n}", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n  constructor() {\n    this.value = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (!isNull(data.value)) {\n      this.value = setRangeValue(data.value);\n    }\n  }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new AnimationOptions();\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    const animation = data.animation;\n    if (animation !== undefined) {\n      this.animation.load(animation);\n    }\n  }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new RangedAnimationOptions();\n  }\n  load(data) {\n    super.load(data);\n  }\n}", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n  constructor() {\n    super();\n    this.value = 1;\n  }\n}", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n  constructor() {\n    this.horizontal = new ParticlesBounceFactor();\n    this.vertical = new ParticlesBounceFactor();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    this.horizontal.load(data.horizontal);\n    this.vertical.load(data.vertical);\n  }\n}", "import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n  constructor() {\n    this.absorb = new CollisionsAbsorb();\n    this.bounce = new ParticlesBounce();\n    this.enable = false;\n    this.maxSpeed = 50;\n    this.mode = CollisionMode.bounce;\n    this.overlap = new CollisionsOverlap();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    this.absorb.load(data.absorb);\n    this.bounce.load(data.bounce);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.maxSpeed !== undefined) {\n      this.maxSpeed = setRangeValue(data.maxSpeed);\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    this.overlap.load(data.overlap);\n  }\n}", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n  constructor() {\n    this.close = true;\n    this.fill = true;\n    this.options = {};\n    this.type = [];\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    const options = data.options;\n    if (options !== undefined) {\n      for (const effect in options) {\n        const item = options[effect];\n        if (item) {\n          this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n        }\n      }\n    }\n    if (data.close !== undefined) {\n      this.close = data.close;\n    }\n    if (data.fill !== undefined) {\n      this.fill = data.fill;\n    }\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n  constructor() {\n    this.offset = 0;\n    this.value = 90;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.offset !== undefined) {\n      this.offset = setRangeValue(data.offset);\n    }\n    if (data.value !== undefined) {\n      this.value = setRangeValue(data.value);\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n  constructor() {\n    this.distance = 200;\n    this.enable = false;\n    this.rotate = {\n      x: 3000,\n      y: 3000\n    };\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = setRangeValue(data.distance);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.rotate) {\n      const rotateX = data.rotate.x;\n      if (rotateX !== undefined) {\n        this.rotate.x = rotateX;\n      }\n      const rotateY = data.rotate.y;\n      if (rotateY !== undefined) {\n        this.rotate.y = rotateY;\n      }\n    }\n  }\n}", "import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n  constructor() {\n    this.x = 50;\n    this.y = 50;\n    this.mode = PixelMode.percent;\n    this.radius = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.x !== undefined) {\n      this.x = data.x;\n    }\n    if (data.y !== undefined) {\n      this.y = data.y;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.radius !== undefined) {\n      this.radius = data.radius;\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n  constructor() {\n    this.acceleration = 9.81;\n    this.enable = false;\n    this.inverse = false;\n    this.maxSpeed = 50;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.acceleration !== undefined) {\n      this.acceleration = setRangeValue(data.acceleration);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.inverse !== undefined) {\n      this.inverse = data.inverse;\n    }\n    if (data.maxSpeed !== undefined) {\n      this.maxSpeed = setRangeValue(data.maxSpeed);\n    }\n  }\n}", "import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n  constructor() {\n    this.clamp = true;\n    this.delay = new ValueWithRandom();\n    this.enable = false;\n    this.options = {};\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.clamp !== undefined) {\n      this.clamp = data.clamp;\n    }\n    this.delay.load(data.delay);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.generator = data.generator;\n    if (data.options) {\n      this.options = deepExtend(this.options, data.options);\n    }\n  }\n}", "import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.image !== undefined) {\n      this.image = data.image;\n    }\n  }\n}", "import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n  constructor() {\n    this.enable = false;\n    this.length = 10;\n    this.fill = new MoveTrailFill();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.fill !== undefined) {\n      this.fill.load(data.fill);\n    }\n    if (data.length !== undefined) {\n      this.length = data.length;\n    }\n  }\n}", "export var OutMode;\n(function (OutMode) {\n  OutMode[\"bounce\"] = \"bounce\";\n  OutMode[\"none\"] = \"none\";\n  OutMode[\"out\"] = \"out\";\n  OutMode[\"destroy\"] = \"destroy\";\n  OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));", "import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n  constructor() {\n    this.default = OutMode.out;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.default !== undefined) {\n      this.default = data.default;\n    }\n    this.bottom = data.bottom ?? data.default;\n    this.left = data.left ?? data.default;\n    this.right = data.right ?? data.default;\n    this.top = data.top ?? data.default;\n  }\n}", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n  constructor() {\n    this.acceleration = 0;\n    this.enable = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.acceleration !== undefined) {\n      this.acceleration = setRangeValue(data.acceleration);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.position) {\n      this.position = deepExtend({}, data.position);\n    }\n  }\n}", "import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n  constructor() {\n    this.angle = new MoveAngle();\n    this.attract = new MoveAttract();\n    this.center = new MoveCenter();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = MoveDirection.none;\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new MovePath();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new MoveTrail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    this.angle.load(isNumber(data.angle) ? {\n      value: data.angle\n    } : data.angle);\n    this.attract.load(data.attract);\n    this.center.load(data.center);\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    if (data.distance !== undefined) {\n      this.distance = isNumber(data.distance) ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : {\n        ...data.distance\n      };\n    }\n    if (data.drift !== undefined) {\n      this.drift = setRangeValue(data.drift);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.gravity.load(data.gravity);\n    const outModes = data.outModes;\n    if (outModes !== undefined) {\n      if (isObject(outModes)) {\n        this.outModes.load(outModes);\n      } else {\n        this.outModes.load({\n          default: outModes\n        });\n      }\n    }\n    this.path.load(data.path);\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    this.spin.load(data.spin);\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n    this.trail.load(data.trail);\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n  constructor() {\n    super();\n    this.destroy = DestroyType.none;\n    this.speed = 2;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.destroy !== undefined) {\n      this.destroy = data.destroy;\n    }\n  }\n}", "import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new OpacityAnimation();\n    this.value = 1;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    super.load(data);\n    const animation = data.animation;\n    if (animation !== undefined) {\n      this.animation.load(animation);\n    }\n  }\n}", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n  constructor() {\n    this.enable = false;\n    this.width = 1920;\n    this.height = 1080;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    const width = data.width;\n    if (width !== undefined) {\n      this.width = width;\n    }\n    const height = data.height;\n    if (height !== undefined) {\n      this.height = height;\n    }\n  }\n}", "export var LimitMode;\n(function (LimitMode) {\n  LimitMode[\"delete\"] = \"delete\";\n  LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));", "import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n  constructor() {\n    this.mode = LimitMode.delete;\n    this.value = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.value !== undefined) {\n      this.value = data.value;\n    }\n  }\n}", "import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n  constructor() {\n    this.density = new ParticlesDensity();\n    this.limit = new ParticlesNumberLimit();\n    this.value = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    this.density.load(data.density);\n    this.limit.load(data.limit);\n    if (data.value !== undefined) {\n      this.value = data.value;\n    }\n  }\n}", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n  constructor() {\n    this.blur = 0;\n    this.color = new OptionsColor();\n    this.enable = false;\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n    this.color.value = \"#000\";\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.blur !== undefined) {\n      this.blur = data.blur;\n    }\n    this.color = OptionsColor.create(this.color, data.color);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.offset === undefined) {\n      return;\n    }\n    if (data.offset.x !== undefined) {\n      this.offset.x = data.offset.x;\n    }\n    if (data.offset.y !== undefined) {\n      this.offset.y = data.offset.y;\n    }\n  }\n}", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n  constructor() {\n    this.close = true;\n    this.fill = true;\n    this.options = {};\n    this.type = \"circle\";\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    const options = data.options;\n    if (options !== undefined) {\n      for (const shape in options) {\n        const item = options[shape];\n        if (item) {\n          this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n        }\n      }\n    }\n    if (data.close !== undefined) {\n      this.close = data.close;\n    }\n    if (data.fill !== undefined) {\n      this.fill = data.fill;\n    }\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n}", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n  constructor() {\n    super();\n    this.destroy = DestroyType.none;\n    this.speed = 5;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.destroy !== undefined) {\n      this.destroy = data.destroy;\n    }\n  }\n}", "import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new SizeAnimation();\n    this.value = 3;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    const animation = data.animation;\n    if (animation !== undefined) {\n      this.animation.load(animation);\n    }\n  }\n}", "import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n  constructor() {\n    this.width = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = AnimatableColor.create(this.color, data.color);\n    }\n    if (data.width !== undefined) {\n      this.width = setRangeValue(data.width);\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = setRangeValue(data.opacity);\n    }\n  }\n}", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n  constructor() {\n    super();\n    this.opacityRate = 1;\n    this.sizeRate = 1;\n    this.velocityRate = 1;\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.opacityRate !== undefined) {\n      this.opacityRate = data.opacityRate;\n    }\n    if (data.sizeRate !== undefined) {\n      this.sizeRate = data.sizeRate;\n    }\n    if (data.velocityRate !== undefined) {\n      this.velocityRate = data.velocityRate;\n    }\n  }\n}", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n  constructor(engine, container) {\n    this._engine = engine;\n    this._container = container;\n    this.bounce = new ParticlesBounce();\n    this.collisions = new Collisions();\n    this.color = new AnimatableColor();\n    this.color.value = \"#fff\";\n    this.effect = new Effect();\n    this.groups = {};\n    this.move = new Move();\n    this.number = new ParticlesNumber();\n    this.opacity = new Opacity();\n    this.reduceDuplicates = false;\n    this.shadow = new Shadow();\n    this.shape = new Shape();\n    this.size = new Size();\n    this.stroke = new Stroke();\n    this.zIndex = new ZIndex();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.groups !== undefined) {\n      for (const group of Object.keys(data.groups)) {\n        if (!Object.hasOwn(data.groups, group)) {\n          continue;\n        }\n        const item = data.groups[group];\n        if (item !== undefined) {\n          this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n        }\n      }\n    }\n    if (data.reduceDuplicates !== undefined) {\n      this.reduceDuplicates = data.reduceDuplicates;\n    }\n    this.bounce.load(data.bounce);\n    this.color.load(AnimatableColor.create(this.color, data.color));\n    this.effect.load(data.effect);\n    this.move.load(data.move);\n    this.number.load(data.number);\n    this.opacity.load(data.opacity);\n    this.shape.load(data.shape);\n    this.size.load(data.size);\n    this.shadow.load(data.shadow);\n    this.zIndex.load(data.zIndex);\n    this.collisions.load(data.collisions);\n    if (data.interactivity !== undefined) {\n      this.interactivity = deepExtend({}, data.interactivity);\n    }\n    const strokeToLoad = data.stroke;\n    if (strokeToLoad) {\n      this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n        const tmp = new Stroke();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    if (this._container) {\n      const updaters = this._engine.updaters.get(this._container);\n      if (updaters) {\n        for (const updater of updaters) {\n          if (updater.loadOptions) {\n            updater.loadOptions(this, data);\n          }\n        }\n      }\n      const interactors = this._engine.interactors.get(this._container);\n      if (interactors) {\n        for (const interactor of interactors) {\n          if (interactor.loadParticlesOptions) {\n            interactor.loadParticlesOptions(this, data);\n          }\n        }\n      }\n    }\n  }\n}", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n  for (const sourceOptions of sourceOptionsArr) {\n    options.load(sourceOptions);\n  }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n  const options = new ParticlesOptions(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n  constructor(engine, container) {\n    this._findDefaultTheme = mode => {\n      return this.themes.find(theme => theme.default.value && theme.default.mode === mode) ?? this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any);\n    };\n    this._importPreset = preset => {\n      this.load(this._engine.getPreset(preset));\n    };\n    this._engine = engine;\n    this._container = container;\n    this.autoPlay = true;\n    this.background = new Background();\n    this.backgroundMask = new BackgroundMask();\n    this.clear = true;\n    this.defaultThemes = {};\n    this.delay = 0;\n    this.fullScreen = new FullScreen();\n    this.detectRetina = true;\n    this.duration = 0;\n    this.fpsLimit = 120;\n    this.interactivity = new Interactivity(engine, container);\n    this.manualParticles = [];\n    this.particles = loadParticlesOptions(this._engine, this._container);\n    this.pauseOnBlur = true;\n    this.pauseOnOutsideViewport = true;\n    this.responsive = [];\n    this.smooth = false;\n    this.style = {};\n    this.themes = [];\n    this.zLayers = 100;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.preset !== undefined) {\n      executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n    }\n    if (data.autoPlay !== undefined) {\n      this.autoPlay = data.autoPlay;\n    }\n    if (data.clear !== undefined) {\n      this.clear = data.clear;\n    }\n    if (data.key !== undefined) {\n      this.key = data.key;\n    }\n    if (data.name !== undefined) {\n      this.name = data.name;\n    }\n    if (data.delay !== undefined) {\n      this.delay = setRangeValue(data.delay);\n    }\n    const detectRetina = data.detectRetina;\n    if (detectRetina !== undefined) {\n      this.detectRetina = detectRetina;\n    }\n    if (data.duration !== undefined) {\n      this.duration = setRangeValue(data.duration);\n    }\n    const fpsLimit = data.fpsLimit;\n    if (fpsLimit !== undefined) {\n      this.fpsLimit = fpsLimit;\n    }\n    if (data.pauseOnBlur !== undefined) {\n      this.pauseOnBlur = data.pauseOnBlur;\n    }\n    if (data.pauseOnOutsideViewport !== undefined) {\n      this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n    }\n    if (data.zLayers !== undefined) {\n      this.zLayers = data.zLayers;\n    }\n    this.background.load(data.background);\n    const fullScreen = data.fullScreen;\n    if (isBoolean(fullScreen)) {\n      this.fullScreen.enable = fullScreen;\n    } else {\n      this.fullScreen.load(fullScreen);\n    }\n    this.backgroundMask.load(data.backgroundMask);\n    this.interactivity.load(data.interactivity);\n    if (data.manualParticles) {\n      this.manualParticles = data.manualParticles.map(t => {\n        const tmp = new ManualParticle();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    this.particles.load(data.particles);\n    this.style = deepExtend(this.style, data.style);\n    this._engine.loadOptions(this, data);\n    if (data.smooth !== undefined) {\n      this.smooth = data.smooth;\n    }\n    const interactors = this._engine.interactors.get(this._container);\n    if (interactors) {\n      for (const interactor of interactors) {\n        if (interactor.loadOptions) {\n          interactor.loadOptions(this, data);\n        }\n      }\n    }\n    if (data.responsive !== undefined) {\n      for (const responsive of data.responsive) {\n        const optResponsive = new Responsive();\n        optResponsive.load(responsive);\n        this.responsive.push(optResponsive);\n      }\n    }\n    this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n    if (data.themes !== undefined) {\n      for (const theme of data.themes) {\n        const existingTheme = this.themes.find(t => t.name === theme.name);\n        if (!existingTheme) {\n          const optTheme = new Theme();\n          optTheme.load(theme);\n          this.themes.push(optTheme);\n        } else {\n          existingTheme.load(theme);\n        }\n      }\n    }\n    this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n    this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n  }\n  setResponsive(width, pxRatio, defaultOptions) {\n    this.load(defaultOptions);\n    const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n    this.load(responsiveOptions?.options);\n    return responsiveOptions?.maxWidth;\n  }\n  setTheme(name) {\n    if (name) {\n      const chosenTheme = this.themes.find(theme => theme.name === name);\n      if (chosenTheme) {\n        this.load(chosenTheme.options);\n      }\n    } else {\n      const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"),\n        clientDarkMode = mediaMatch?.matches,\n        defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n      if (defaultTheme) {\n        this.load(defaultTheme.options);\n      }\n    }\n  }\n}", "export var InteractorType;\n(function (InteractorType) {\n  InteractorType[\"external\"] = \"external\";\n  InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n  constructor(engine, container) {\n    this.container = container;\n    this._engine = engine;\n    this._interactors = [];\n    this._externalInteractors = [];\n    this._particleInteractors = [];\n  }\n  externalInteract(delta) {\n    for (const interactor of this._externalInteractors) {\n      if (interactor.isEnabled()) {\n        interactor.interact(delta);\n      }\n    }\n  }\n  handleClickMode(mode) {\n    for (const interactor of this._externalInteractors) {\n      interactor.handleClickMode?.(mode);\n    }\n  }\n  async init() {\n    this._interactors = await this._engine.getInteractors(this.container, true);\n    this._externalInteractors = [];\n    this._particleInteractors = [];\n    for (const interactor of this._interactors) {\n      switch (interactor.type) {\n        case InteractorType.external:\n          this._externalInteractors.push(interactor);\n          break;\n        case InteractorType.particles:\n          this._particleInteractors.push(interactor);\n          break;\n      }\n      interactor.init();\n    }\n  }\n  particlesInteract(particle, delta) {\n    for (const interactor of this._externalInteractors) {\n      interactor.clear(particle, delta);\n    }\n    for (const interactor of this._particleInteractors) {\n      if (interactor.isEnabled(particle)) {\n        interactor.interact(particle, delta);\n      }\n    }\n  }\n  reset(particle) {\n    for (const interactor of this._externalInteractors) {\n      if (interactor.isEnabled()) {\n        interactor.reset(particle);\n      }\n    }\n    for (const interactor of this._particleInteractors) {\n      if (interactor.isEnabled(particle)) {\n        interactor.reset(particle);\n      }\n    }\n  }\n}", "export var ParticleOutType;\n(function (ParticleOutType) {\n  ParticleOutType[\"normal\"] = \"normal\";\n  ParticleOutType[\"inside\"] = \"inside\";\n  ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));", "import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n  const effectData = effectOptions.options[effect];\n  if (!effectData) {\n    return;\n  }\n  return deepExtend({\n    close: effectOptions.close,\n    fill: effectOptions.fill\n  }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n  const shapeData = shapeOptions.options[shape];\n  if (!shapeData) {\n    return;\n  }\n  return deepExtend({\n    close: shapeOptions.close,\n    fill: shapeOptions.fill\n  }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n  if (!isInArray(data.outMode, data.checkModes)) {\n    return;\n  }\n  const diameter = data.radius * double;\n  if (data.coord > data.maxCoord - diameter) {\n    data.setCb(-data.radius);\n  } else if (data.coord < diameter) {\n    data.setCb(data.radius);\n  }\n}\nexport class Particle {\n  constructor(engine, container) {\n    this.container = container;\n    this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n      for (const plugin of container.plugins.values()) {\n        const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n        if (pluginPos) {\n          return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n        }\n      }\n      const canvasSize = container.canvas.size,\n        exactPosition = calcExactPositionOrRandomFromSize({\n          size: canvasSize,\n          position: position\n        }),\n        pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n        radius = this.getRadius(),\n        outModes = this.options.move.outModes,\n        fixHorizontal = outMode => {\n          fixOutMode({\n            outMode,\n            checkModes: [OutMode.bounce],\n            coord: pos.x,\n            maxCoord: container.canvas.size.width,\n            setCb: value => pos.x += value,\n            radius\n          });\n        },\n        fixVertical = outMode => {\n          fixOutMode({\n            outMode,\n            checkModes: [OutMode.bounce],\n            coord: pos.y,\n            maxCoord: container.canvas.size.height,\n            setCb: value => pos.y += value,\n            radius\n          });\n        };\n      fixHorizontal(outModes.left ?? outModes.default);\n      fixHorizontal(outModes.right ?? outModes.default);\n      fixVertical(outModes.top ?? outModes.default);\n      fixVertical(outModes.bottom ?? outModes.default);\n      if (this._checkOverlap(pos, tryCount)) {\n        return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n      }\n      return pos;\n    };\n    this._calculateVelocity = () => {\n      const baseVelocity = getParticleBaseVelocity(this.direction),\n        res = baseVelocity.copy(),\n        moveOptions = this.options.move;\n      if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n        return res;\n      }\n      const rad = degToRad(getRangeValue(moveOptions.angle.value)),\n        radOffset = degToRad(getRangeValue(moveOptions.angle.offset)),\n        range = {\n          left: radOffset - rad * half,\n          right: radOffset + rad * half\n        };\n      if (!moveOptions.straight) {\n        res.angle += randomInRange(setRangeValue(range.left, range.right));\n      }\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= getRandom();\n      }\n      return res;\n    };\n    this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n      const collisionsOptions = this.options.collisions,\n        radius = this.getRadius();\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n      const overlapOptions = collisionsOptions.overlap;\n      if (overlapOptions.enable) {\n        return false;\n      }\n      const retries = overlapOptions.retries;\n      if (retries >= minRetries && tryCount > retries) {\n        throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n      }\n      return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n    };\n    this._getRollColor = color => {\n      if (!color || !this.roll || !this.backColor && !this.roll.alter) {\n        return color;\n      }\n      const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor,\n        backSum = this.roll.horizontal ? Math.PI * half : none,\n        rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n      if (!rolled) {\n        return color;\n      }\n      if (this.backColor) {\n        return this.backColor;\n      }\n      if (this.roll.alter) {\n        return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n      }\n      return color;\n    };\n    this._initPosition = position => {\n      const container = this.container,\n        zIndexValue = getRangeValue(this.options.zIndex.value);\n      this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n      this.initialPosition = this.position.copy();\n      const canvasSize = container.canvas.size;\n      this.moveCenter = {\n        ...getPosition(this.options.move.center, canvasSize),\n        radius: this.options.move.center.radius ?? defaultRadius,\n        mode: this.options.move.center.mode ?? PixelMode.percent\n      };\n      this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n      switch (this.options.move.direction) {\n        case MoveDirection.inside:\n          this.outType = ParticleOutType.inside;\n          break;\n        case MoveDirection.outside:\n          this.outType = ParticleOutType.outside;\n          break;\n      }\n      this.offset = Vector.origin;\n    };\n    this._engine = engine;\n  }\n  destroy(override) {\n    if (this.unbreakable || this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    this.bubble.inRange = false;\n    this.slow.inRange = false;\n    const container = this.container,\n      pathGenerator = this.pathGenerator,\n      shapeDrawer = container.shapeDrawers.get(this.shape);\n    shapeDrawer?.particleDestroy?.(this);\n    for (const plugin of container.plugins.values()) {\n      plugin.particleDestroyed?.(this, override);\n    }\n    for (const updater of container.particles.updaters) {\n      updater.particleDestroyed?.(this, override);\n    }\n    pathGenerator?.reset(this);\n    this._engine.dispatchEvent(EventType.particleDestroyed, {\n      container: this.container,\n      data: {\n        particle: this\n      }\n    });\n  }\n  draw(delta) {\n    const container = this.container,\n      canvas = container.canvas;\n    for (const plugin of container.plugins.values()) {\n      canvas.drawParticlePlugin(plugin, this, delta);\n    }\n    canvas.drawParticle(this, delta);\n  }\n  getFillColor() {\n    return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n  }\n  getMass() {\n    return this.getRadius() ** squareExp * Math.PI * half;\n  }\n  getPosition() {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y,\n      z: this.position.z\n    };\n  }\n  getRadius() {\n    return this.bubble.radius ?? this.size.value;\n  }\n  getStrokeColor() {\n    return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n  }\n  init(id, position, overrideOptions, group) {\n    const container = this.container,\n      engine = this._engine;\n    this.id = id;\n    this.group = group;\n    this.effectClose = true;\n    this.effectFill = true;\n    this.shapeClose = true;\n    this.shapeFill = true;\n    this.pathRotation = false;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.isRotating = false;\n    this.rotation = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.outType = ParticleOutType.normal;\n    this.ignoresResizeRatio = true;\n    const pxRatio = container.retina.pixelRatio,\n      mainOptions = container.actualOptions,\n      particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles),\n      {\n        reduceDuplicates\n      } = particlesOptions,\n      effectType = particlesOptions.effect.type,\n      shapeType = particlesOptions.shape.type;\n    this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n    this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n    const effectOptions = particlesOptions.effect,\n      shapeOptions = particlesOptions.shape;\n    if (overrideOptions) {\n      if (overrideOptions.effect?.type) {\n        const overrideEffectType = overrideOptions.effect.type,\n          effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n        if (effect) {\n          this.effect = effect;\n          effectOptions.load(overrideOptions.effect);\n        }\n      }\n      if (overrideOptions.shape?.type) {\n        const overrideShapeType = overrideOptions.shape.type,\n          shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n        if (shape) {\n          this.shape = shape;\n          shapeOptions.load(overrideOptions.shape);\n        }\n      }\n    }\n    if (this.effect === randomColorValue) {\n      const availableEffects = [...this.container.effectDrawers.keys()];\n      this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n    }\n    if (this.shape === randomColorValue) {\n      const availableShapes = [...this.container.shapeDrawers.keys()];\n      this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n    }\n    this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n    this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n    particlesOptions.load(overrideOptions);\n    const effectData = this.effectData;\n    if (effectData) {\n      particlesOptions.load(effectData.particles);\n    }\n    const shapeData = this.shapeData;\n    if (shapeData) {\n      particlesOptions.load(shapeData.particles);\n    }\n    const interactivity = new Interactivity(engine, container);\n    interactivity.load(container.actualOptions.interactivity);\n    interactivity.load(particlesOptions.interactivity);\n    this.interactivity = interactivity;\n    this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n    this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n    this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n    this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n    this.options = particlesOptions;\n    const pathOptions = this.options.move.path;\n    this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n    if (pathOptions.generator) {\n      this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n      if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n        this.pathGenerator.init(container);\n      }\n    }\n    container.retina.initParticle(this);\n    this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n    this.bubble = {\n      inRange: false\n    };\n    this.slow = {\n      inRange: false,\n      factor: 1\n    };\n    this._initPosition(position);\n    this.initialVelocity = this._calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n    const particles = container.particles;\n    particles.setLastZIndex(this.position.z);\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    let effectDrawer = container.effectDrawers.get(this.effect);\n    if (!effectDrawer) {\n      effectDrawer = this._engine.getEffectDrawer(this.effect);\n      if (effectDrawer) {\n        container.effectDrawers.set(this.effect, effectDrawer);\n      }\n    }\n    if (effectDrawer?.loadEffect) {\n      effectDrawer.loadEffect(this);\n    }\n    let shapeDrawer = container.shapeDrawers.get(this.shape);\n    if (!shapeDrawer) {\n      shapeDrawer = this._engine.getShapeDrawer(this.shape);\n      if (shapeDrawer) {\n        container.shapeDrawers.set(this.shape, shapeDrawer);\n      }\n    }\n    if (shapeDrawer?.loadShape) {\n      shapeDrawer.loadShape(this);\n    }\n    const sideCountFunc = shapeDrawer?.getSidesCount;\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n    this.spawning = false;\n    this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n    for (const updater of particles.updaters) {\n      updater.init(this);\n    }\n    for (const mover of particles.movers) {\n      mover.init?.(this);\n    }\n    effectDrawer?.particleInit?.(container, this);\n    shapeDrawer?.particleInit?.(container, this);\n    for (const plugin of container.plugins.values()) {\n      plugin.particleCreated?.(this);\n    }\n  }\n  isInsideCanvas() {\n    const radius = this.getRadius(),\n      canvasSize = this.container.canvas.size,\n      position = this.position;\n    return position.x >= -radius && position.y >= -radius && position.y <= canvasSize.height + radius && position.x <= canvasSize.width + radius;\n  }\n  isVisible() {\n    return !this.destroyed && !this.spawning && this.isInsideCanvas();\n  }\n  reset() {\n    for (const updater of this.container.particles.updaters) {\n      updater.reset?.(this);\n    }\n  }\n}", "export class Point {\n  constructor(position, particle) {\n    this.position = position;\n    this.particle = particle;\n  }\n}", "export var RangeType;\n(function (RangeType) {\n  RangeType[\"circle\"] = \"circle\";\n  RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));", "import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n  constructor(x, y, type) {\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.type = type;\n  }\n}\nexport class Circle extends BaseRange {\n  constructor(x, y, radius) {\n    super(x, y, RangeType.circle);\n    this.radius = radius;\n  }\n  contains(point) {\n    return getDistance(point, this.position) <= this.radius;\n  }\n  intersects(range) {\n    const pos1 = this.position,\n      pos2 = range.position,\n      distPos = {\n        x: Math.abs(pos2.x - pos1.x),\n        y: Math.abs(pos2.y - pos1.y)\n      },\n      r = this.radius;\n    if (range instanceof Circle || range.type === RangeType.circle) {\n      const circleRange = range,\n        rSum = r + circleRange.radius,\n        dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n      return rSum > dist;\n    } else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n      const rectRange = range,\n        {\n          width,\n          height\n        } = rectRange.size,\n        edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n      return edges <= r ** squareExp || distPos.x <= r + width && distPos.y <= r + height || distPos.x <= width || distPos.y <= height;\n    }\n    return false;\n  }\n}\nexport class Rectangle extends BaseRange {\n  constructor(x, y, width, height) {\n    super(x, y, RangeType.rectangle);\n    this.size = {\n      height: height,\n      width: width\n    };\n  }\n  contains(point) {\n    const w = this.size.width,\n      h = this.size.height,\n      pos = this.position;\n    return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n  }\n  intersects(range) {\n    if (range instanceof Circle) {\n      return range.intersects(this);\n    }\n    const w = this.size.width,\n      h = this.size.height,\n      pos1 = this.position,\n      pos2 = range.position,\n      size2 = range instanceof Rectangle ? range.size : {\n        width: 0,\n        height: 0\n      },\n      w2 = size2.width,\n      h2 = size2.height;\n    return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n  }\n}", "import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this._subdivide = () => {\n      const {\n          x,\n          y\n        } = this.rectangle.position,\n        {\n          width,\n          height\n        } = this.rectangle.size,\n        {\n          capacity\n        } = this;\n      for (let i = 0; i < subdivideCount; i++) {\n        const fixedIndex = i % double;\n        this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n      }\n      this._divided = true;\n    };\n    this._points = [];\n    this._divided = false;\n    this._subs = [];\n  }\n  insert(point) {\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n    if (this._points.length < this.capacity) {\n      this._points.push(point);\n      return true;\n    }\n    if (!this._divided) {\n      this._subdivide();\n    }\n    return this._subs.some(sub => sub.insert(point));\n  }\n  query(range, check) {\n    const res = [];\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    }\n    for (const p of this._points) {\n      if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius() && (!check || check(p.particle))) {\n        continue;\n      }\n      res.push(p.particle);\n    }\n    if (this._divided) {\n      for (const sub of this._subs) {\n        res.push(...sub.query(range, check));\n      }\n    }\n    return res;\n  }\n  queryCircle(position, radius, check) {\n    return this.query(new Circle(position.x, position.y, radius), check);\n  }\n  queryRectangle(position, size, check) {\n    return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n  }\n}", "import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = canvasSize => {\n  const {\n    height,\n    width\n  } = canvasSize;\n  return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n  constructor(engine, container) {\n    this._addToPool = (...particles) => {\n      this._pool.push(...particles);\n    };\n    this._applyDensity = (options, manualCount, group) => {\n      const numberOptions = options.number;\n      if (!options.number.density?.enable) {\n        if (group === undefined) {\n          this._limit = numberOptions.limit.value;\n        } else if (numberOptions.limit) {\n          this._groupLimits.set(group, numberOptions.limit.value);\n        }\n        return;\n      }\n      const densityFactor = this._initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n      if (group === undefined) {\n        this._limit = numberOptions.limit.value * densityFactor;\n      } else {\n        this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n      }\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    };\n    this._initDensityFactor = densityOptions => {\n      const container = this._container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return defaultDensityFactor;\n      }\n      const canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n    };\n    this._pushParticle = (position, overrideOptions, group, initializer) => {\n      try {\n        let particle = this._pool.pop();\n        if (!particle) {\n          particle = new Particle(this._engine, this._container);\n        }\n        particle.init(this._nextId, position, overrideOptions, group);\n        let canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this._array.push(particle);\n        this._zArray.push(particle);\n        this._nextId++;\n        this._engine.dispatchEvent(EventType.particleAdded, {\n          container: this._container,\n          data: {\n            particle\n          }\n        });\n        return particle;\n      } catch (e) {\n        getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n      }\n    };\n    this._removeParticle = (index, group, override) => {\n      const particle = this._array[index];\n      if (!particle || particle.group !== group) {\n        return false;\n      }\n      const zIdx = this._zArray.indexOf(particle);\n      this._array.splice(index, deleteCount);\n      this._zArray.splice(zIdx, deleteCount);\n      particle.destroy(override);\n      this._engine.dispatchEvent(EventType.particleRemoved, {\n        container: this._container,\n        data: {\n          particle\n        }\n      });\n      this._addToPool(particle);\n      return true;\n    };\n    this._engine = engine;\n    this._container = container;\n    this._nextId = 0;\n    this._array = [];\n    this._zArray = [];\n    this._pool = [];\n    this._limit = 0;\n    this._groupLimits = new Map();\n    this._needsSort = false;\n    this._lastZIndex = 0;\n    this._interactionManager = new InteractionManager(engine, container);\n    this._pluginsInitialized = false;\n    const canvasSize = container.canvas.size;\n    this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n    this.movers = [];\n    this.updaters = [];\n  }\n  get count() {\n    return this._array.length;\n  }\n  addManualParticles() {\n    const container = this._container,\n      options = container.actualOptions;\n    options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n  }\n  addParticle(position, overrideOptions, group, initializer) {\n    const limitMode = this._container.actualOptions.particles.number.limit.mode,\n      limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit,\n      currentCount = this.count;\n    if (limit > minLimit) {\n      switch (limitMode) {\n        case LimitMode.delete:\n          {\n            const countToRemove = currentCount + countOffset - limit;\n            if (countToRemove > minCount) {\n              this.removeQuantity(countToRemove);\n            }\n            break;\n          }\n        case LimitMode.wait:\n          if (currentCount >= limit) {\n            return;\n          }\n          break;\n      }\n    }\n    return this._pushParticle(position, overrideOptions, group, initializer);\n  }\n  clear() {\n    this._array = [];\n    this._zArray = [];\n    this._pluginsInitialized = false;\n  }\n  destroy() {\n    this._array = [];\n    this._zArray = [];\n    this.movers = [];\n    this.updaters = [];\n  }\n  draw(delta) {\n    const container = this._container,\n      canvas = container.canvas;\n    canvas.clear();\n    this.update(delta);\n    for (const plugin of container.plugins.values()) {\n      canvas.drawPlugin(plugin, delta);\n    }\n    for (const p of this._zArray) {\n      p.draw(delta);\n    }\n  }\n  filter(condition) {\n    return this._array.filter(condition);\n  }\n  find(condition) {\n    return this._array.find(condition);\n  }\n  get(index) {\n    return this._array[index];\n  }\n  handleClickMode(mode) {\n    this._interactionManager.handleClickMode(mode);\n  }\n  async init() {\n    const container = this._container,\n      options = container.actualOptions;\n    this._lastZIndex = 0;\n    this._needsSort = false;\n    await this.initPlugins();\n    let handled = false;\n    for (const plugin of container.plugins.values()) {\n      handled = plugin.particlesInitialization?.() ?? handled;\n      if (handled) {\n        break;\n      }\n    }\n    this.addManualParticles();\n    if (!handled) {\n      const particlesOptions = options.particles,\n        groups = particlesOptions.groups;\n      for (const group in groups) {\n        const groupOptions = groups[group];\n        for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n          this.addParticle(undefined, groupOptions, group);\n        }\n      }\n      for (let i = this.count; i < particlesOptions.number.value; i++) {\n        this.addParticle();\n      }\n    }\n  }\n  async initPlugins() {\n    if (this._pluginsInitialized) {\n      return;\n    }\n    const container = this._container;\n    this.movers = await this._engine.getMovers(container, true);\n    this.updaters = await this._engine.getUpdaters(container, true);\n    await this._interactionManager.init();\n    for (const pathGenerator of container.pathGenerators.values()) {\n      pathGenerator.init(container);\n    }\n  }\n  push(nb, mouse, overrideOptions, group) {\n    for (let i = 0; i < nb; i++) {\n      this.addParticle(mouse?.position, overrideOptions, group);\n    }\n  }\n  async redraw() {\n    this.clear();\n    await this.init();\n    this.draw({\n      value: 0,\n      factor: 0\n    });\n  }\n  remove(particle, group, override) {\n    this.removeAt(this._array.indexOf(particle), undefined, group, override);\n  }\n  removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n    if (index < minIndex || index > this.count) {\n      return;\n    }\n    let deleted = 0;\n    for (let i = index; deleted < quantity && i < this.count; i++) {\n      if (this._removeParticle(i, group, override)) {\n        i--;\n        deleted++;\n      }\n    }\n  }\n  removeQuantity(quantity, group) {\n    this.removeAt(minIndex, quantity, group);\n  }\n  setDensity() {\n    const options = this._container.actualOptions,\n      groups = options.particles.groups;\n    for (const group in groups) {\n      this._applyDensity(groups[group], manualCount, group);\n    }\n    this._applyDensity(options.particles, options.manualParticles.length);\n  }\n  setLastZIndex(zIndex) {\n    this._lastZIndex = zIndex;\n    this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n  }\n  setResizeFactor(factor) {\n    this._resizeFactor = factor;\n  }\n  update(delta) {\n    const container = this._container,\n      particlesToDelete = new Set();\n    this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n    for (const pathGenerator of container.pathGenerators.values()) {\n      pathGenerator.update();\n    }\n    for (const plugin of container.plugins.values()) {\n      plugin.update?.(delta);\n    }\n    const resizeFactor = this._resizeFactor;\n    for (const particle of this._array) {\n      if (resizeFactor && !particle.ignoresResizeRatio) {\n        particle.position.x *= resizeFactor.width;\n        particle.position.y *= resizeFactor.height;\n        particle.initialPosition.x *= resizeFactor.width;\n        particle.initialPosition.y *= resizeFactor.height;\n      }\n      particle.ignoresResizeRatio = false;\n      this._interactionManager.reset(particle);\n      for (const plugin of this._container.plugins.values()) {\n        if (particle.destroyed) {\n          break;\n        }\n        plugin.particleUpdate?.(particle, delta);\n      }\n      for (const mover of this.movers) {\n        if (mover.isEnabled(particle)) {\n          mover.move(particle, delta);\n        }\n      }\n      if (particle.destroyed) {\n        particlesToDelete.add(particle);\n        continue;\n      }\n      this.quadTree.insert(new Point(particle.getPosition(), particle));\n    }\n    if (particlesToDelete.size) {\n      const checkDelete = p => !particlesToDelete.has(p);\n      this._array = this.filter(checkDelete);\n      this._zArray = this._zArray.filter(checkDelete);\n      for (const particle of particlesToDelete) {\n        this._engine.dispatchEvent(EventType.particleRemoved, {\n          container: this._container,\n          data: {\n            particle\n          }\n        });\n      }\n      this._addToPool(...particlesToDelete);\n    }\n    this._interactionManager.externalInteract(delta);\n    for (const particle of this._array) {\n      for (const updater of this.updaters) {\n        updater.update(particle, delta);\n      }\n      if (!particle.destroyed && !particle.spawning) {\n        this._interactionManager.particlesInteract(particle, delta);\n      }\n    }\n    delete this._resizeFactor;\n    if (this._needsSort) {\n      const zArray = this._zArray;\n      zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n      this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n      this._needsSort = false;\n    }\n  }\n}", "import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n  constructor(container) {\n    this.container = container;\n    this.pixelRatio = defaultRatio;\n    this.reduceFactor = defaultReduceFactor;\n  }\n  init() {\n    const container = this.container,\n      options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n    this.reduceFactor = defaultReduceFactor;\n    const ratio = this.pixelRatio,\n      canvas = container.canvas;\n    if (canvas.element) {\n      const element = canvas.element;\n      canvas.size.width = element.offsetWidth * ratio;\n      canvas.size.height = element.offsetHeight * ratio;\n    }\n    const particles = options.particles,\n      moveOptions = particles.move;\n    this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n  }\n  initParticle(particle) {\n    const options = particle.options,\n      ratio = this.pixelRatio,\n      moveOptions = options.move,\n      moveDistance = moveOptions.distance,\n      props = particle.retina;\n    props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n    props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n    props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n    const maxDistance = props.maxDistance;\n    maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n    maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n    props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n  }\n}", "import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n  return {\n    value,\n    factor: smooth ? defaultFps / fpsLimit : defaultFps * value / millisecondsToSeconds\n  };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n  const options = new Options(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        if (entry.isIntersecting) {\n          void this.play();\n        } else {\n          this.pause();\n        }\n      }\n    };\n    this._nextFrame = timestamp => {\n      try {\n        if (!this._smooth && this._lastFrameTime !== undefined && timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        this._lastFrameTime ??= timestamp;\n        const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n        this.addLifeTime(delta.value);\n        this._lastFrameTime = timestamp;\n        if (delta.value > millisecondsToSeconds) {\n          this.draw(false);\n          return;\n        }\n        this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.animationStatus) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(`${errorPrefix} in animation loop`, e);\n      }\n    };\n    this._engine = engine;\n    this.id = Symbol(id);\n    this.fpsLimit = 120;\n    this._smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this._lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._clickHandlers = new Map();\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this, this._engine);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.effectDrawers = new Map();\n    this.shapeDrawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n    this._engine.dispatchEvent(EventType.containerBuilt, {\n      container: this\n    });\n  }\n  get animationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        const pxRatio = this.retina.pixelRatio,\n          posRetina = {\n            x: pos.x * pxRatio,\n            y: pos.y * pxRatio\n          },\n          particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n        callback(e, particles);\n      },\n      clickHandler = e => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        const mouseEvent = e,\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        clickOrTouchHandler(e, pos, clickRadius);\n      },\n      touchStartHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touched = true;\n        touchMoved = false;\n      },\n      touchMoveHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touchMoved = true;\n      },\n      touchEndHandler = e => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        if (touched && !touchMoved) {\n          const touchEvent = e;\n          let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n          if (!lastTouch) {\n            lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n            if (!lastTouch) {\n              return;\n            }\n          }\n          const element = this.canvas.element,\n            canvasRect = element ? element.getBoundingClientRect() : undefined,\n            pos = {\n              x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n              y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate)\n            };\n          clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n        }\n        touched = false;\n        touchMoved = false;\n      },\n      touchCancelHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touched = false;\n        touchMoved = false;\n      };\n    let touched = false,\n      touchMoved = false;\n    this._clickHandlers.set(\"click\", clickHandler);\n    this._clickHandlers.set(\"touchstart\", touchStartHandler);\n    this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n    this._clickHandlers.set(\"touchend\", touchEndHandler);\n    this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n    for (const [key, handler] of this._clickHandlers) {\n      el.addEventListener(key, handler);\n    }\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator, override = false) {\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  clearClickHandlers() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    for (const [key, handler] of this._clickHandlers) {\n      this.interactivity.element?.removeEventListener(key, handler);\n    }\n    this._clickHandlers.clear();\n  }\n  destroy(remove = true) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.clearClickHandlers();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const effectDrawer of this.effectDrawers.values()) {\n      effectDrawer.destroy?.(this);\n    }\n    for (const shapeDrawer of this.shapeDrawers.values()) {\n      shapeDrawer.destroy?.(this);\n    }\n    for (const key of this.effectDrawers.keys()) {\n      this.effectDrawers.delete(key);\n    }\n    for (const key of this.shapeDrawers.keys()) {\n      this.shapeDrawers.delete(key);\n    }\n    this._engine.clearPlugins(this);\n    this.destroyed = true;\n    if (remove) {\n      const mainArr = this._engine.items,\n        idx = mainArr.findIndex(t => t === this);\n      if (idx >= removeMinIndex) {\n        mainArr.splice(idx, removeDeleteCount);\n      }\n    }\n    this._engine.dispatchEvent(EventType.containerDestroyed, {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    const frame = timestamp => {\n      if (refreshTime) {\n        this._lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      this._nextFrame(timestamp);\n    };\n    this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n  }\n  async export(type, options = {}) {\n    for (const plugin of this.plugins.values()) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const plugin of this.plugins.values()) {\n      plugin.handleClickMode?.(mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const effects = this._engine.getSupportedEffects();\n    for (const type of effects) {\n      const drawer = this._engine.getEffectDrawer(type);\n      if (drawer) {\n        this.effectDrawers.set(type, drawer);\n      }\n    }\n    const shapes = this._engine.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.getShapeDrawer(type);\n      if (drawer) {\n        this.shapeDrawers.set(type, drawer);\n      }\n    }\n    await this.particles.initPlugins();\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = await this._engine.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    const {\n      zLayers,\n      duration,\n      delay,\n      fpsLimit,\n      smooth\n    } = this.actualOptions;\n    this.zLayers = zLayers;\n    this._duration = getRangeValue(duration) * millisecondsToSeconds;\n    this._delay = getRangeValue(delay) * millisecondsToSeconds;\n    this._lifeTime = 0;\n    this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n    this._smooth = smooth;\n    for (const drawer of this.effectDrawers.values()) {\n      await drawer.init?.(this);\n    }\n    for (const drawer of this.shapeDrawers.values()) {\n      await drawer.init?.(this);\n    }\n    for (const plugin of this.plugins.values()) {\n      await plugin.init?.();\n    }\n    this._engine.dispatchEvent(EventType.containerInit, {\n      container: this\n    });\n    await this.particles.init();\n    this.particles.setDensity();\n    for (const plugin of this.plugins.values()) {\n      plugin.particlesSetup?.();\n    }\n    this._engine.dispatchEvent(EventType.particlesSetup, {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimation(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const plugin of this.plugins.values()) {\n      plugin.pause?.();\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(EventType.containerPaused, {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const plugin of this.plugins.values()) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(EventType.containerPlay, {\n      container: this\n    });\n    this.draw(needsUpdate ?? false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset(sourceOptions) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = sourceOptions;\n    this._sourceOptions = sourceOptions;\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      const start = async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n          await plugin.start?.();\n        }\n        this._engine.dispatchEvent(EventType.containerStarted, {\n          container: this\n        });\n        this.play();\n        resolve();\n      };\n      this._delayTimeout = setTimeout(() => void start(), this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const plugin of this.plugins.values()) {\n      plugin.stop?.();\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(EventType.containerStopped, {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this._responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this._responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}", "import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n  constructor() {\n    this._listeners = new Map();\n  }\n  addEventListener(type, listener) {\n    this.removeEventListener(type, listener);\n    let arr = this._listeners.get(type);\n    if (!arr) {\n      arr = [];\n      this._listeners.set(type, arr);\n    }\n    arr.push(listener);\n  }\n  dispatchEvent(type, args) {\n    const listeners = this._listeners.get(type);\n    listeners?.forEach(handler => handler(args));\n  }\n  hasEventListener(type) {\n    return !!this._listeners.get(type);\n  }\n  removeAllEventListeners(type) {\n    if (!type) {\n      this._listeners = new Map();\n    } else {\n      this._listeners.delete(type);\n    }\n  }\n  removeEventListener(type, listener) {\n    const arr = this._listeners.get(type);\n    if (!arr) {\n      return;\n    }\n    const length = arr.length,\n      idx = arr.indexOf(listener);\n    if (idx < minIndex) {\n      return;\n    }\n    if (length === deleteCount) {\n      this._listeners.delete(type);\n    } else {\n      arr.splice(idx, deleteCount);\n    }\n  }\n}", "import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n  let res = map.get(container);\n  if (!res || force) {\n    res = await Promise.all([...initializers.values()].map(t => t(container)));\n    map.set(container, res);\n  }\n  return res;\n}\nasync function getDataFromUrl(data) {\n  const url = itemFromSingleOrMultiple(data.url, data.index);\n  if (!url) {\n    return data.fallback;\n  }\n  const response = await fetch(url);\n  if (response.ok) {\n    return await response.json();\n  }\n  getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n  return data.fallback;\n}\nconst getCanvasFromContainer = domContainer => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n      canvasEl = domContainer;\n      if (!canvasEl.dataset[generatedAttribute]) {\n        canvasEl.dataset[generatedAttribute] = generatedFalse;\n      }\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[canvasFirstIndex];\n        canvasEl.dataset[generatedAttribute] = generatedFalse;\n      } else {\n        canvasEl = document.createElement(canvasTag);\n        canvasEl.dataset[generatedAttribute] = generatedTrue;\n        domContainer.appendChild(canvasEl);\n      }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n  },\n  getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n      return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n  };\nexport class Engine {\n  constructor() {\n    this._configs = new Map();\n    this._domArray = [];\n    this._eventDispatcher = new EventDispatcher();\n    this._initialized = false;\n    this.plugins = [];\n    this.colorManagers = new Map();\n    this.easingFunctions = new Map();\n    this._initializers = {\n      interactors: new Map(),\n      movers: new Map(),\n      updaters: new Map()\n    };\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.effectDrawers = new Map();\n    this.shapeDrawers = new Map();\n    this.pathGenerators = new Map();\n  }\n  get configs() {\n    const res = {};\n    for (const [name, config] of this._configs) {\n      res[name] = config;\n    }\n    return res;\n  }\n  get items() {\n    return this._domArray;\n  }\n  get version() {\n    return \"3.8.0\";\n  }\n  async addColorManager(manager, refresh = true) {\n    this.colorManagers.set(manager.key, manager);\n    await this.refresh(refresh);\n  }\n  addConfig(config) {\n    const key = config.key ?? config.name ?? \"default\";\n    this._configs.set(key, config);\n    this._eventDispatcher.dispatchEvent(EventType.configAdded, {\n      data: {\n        name: key,\n        config\n      }\n    });\n  }\n  async addEasing(name, easing, refresh = true) {\n    if (this.getEasing(name)) {\n      return;\n    }\n    this.easingFunctions.set(name, easing);\n    await this.refresh(refresh);\n  }\n  async addEffect(effect, drawer, refresh = true) {\n    executeOnSingleOrMultiple(effect, type => {\n      if (!this.getEffectDrawer(type)) {\n        this.effectDrawers.set(type, drawer);\n      }\n    });\n    await this.refresh(refresh);\n  }\n  addEventListener(type, listener) {\n    this._eventDispatcher.addEventListener(type, listener);\n  }\n  async addInteractor(name, interactorInitializer, refresh = true) {\n    this._initializers.interactors.set(name, interactorInitializer);\n    await this.refresh(refresh);\n  }\n  async addMover(name, moverInitializer, refresh = true) {\n    this._initializers.movers.set(name, moverInitializer);\n    await this.refresh(refresh);\n  }\n  async addParticleUpdater(name, updaterInitializer, refresh = true) {\n    this._initializers.updaters.set(name, updaterInitializer);\n    await this.refresh(refresh);\n  }\n  async addPathGenerator(name, generator, refresh = true) {\n    if (!this.getPathGenerator(name)) {\n      this.pathGenerators.set(name, generator);\n    }\n    await this.refresh(refresh);\n  }\n  async addPlugin(plugin, refresh = true) {\n    if (!this.getPlugin(plugin.id)) {\n      this.plugins.push(plugin);\n    }\n    await this.refresh(refresh);\n  }\n  async addPreset(preset, options, override = false, refresh = true) {\n    if (override || !this.getPreset(preset)) {\n      this.presets.set(preset, options);\n    }\n    await this.refresh(refresh);\n  }\n  async addShape(drawer, refresh = true) {\n    for (const validType of drawer.validTypes) {\n      if (this.getShapeDrawer(validType)) {\n        continue;\n      }\n      this.shapeDrawers.set(validType, drawer);\n    }\n    await this.refresh(refresh);\n  }\n  checkVersion(pluginVersion) {\n    if (this.version === pluginVersion) {\n      return;\n    }\n    throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n  }\n  clearPlugins(container) {\n    this.updaters.delete(container);\n    this.movers.delete(container);\n    this.interactors.delete(container);\n  }\n  dispatchEvent(type, args) {\n    this._eventDispatcher.dispatchEvent(type, args);\n  }\n  dom() {\n    return this.items;\n  }\n  domItem(index) {\n    return this.item(index);\n  }\n  async getAvailablePlugins(container) {\n    const res = new Map();\n    for (const plugin of this.plugins) {\n      if (plugin.needsPlugin(container.actualOptions)) {\n        res.set(plugin.id, await plugin.getPlugin(container));\n      }\n    }\n    return res;\n  }\n  getEasing(name) {\n    return this.easingFunctions.get(name) ?? (value => value);\n  }\n  getEffectDrawer(type) {\n    return this.effectDrawers.get(type);\n  }\n  async getInteractors(container, force = false) {\n    return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n  }\n  async getMovers(container, force = false) {\n    return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n  }\n  getPathGenerator(type) {\n    return this.pathGenerators.get(type);\n  }\n  getPlugin(plugin) {\n    return this.plugins.find(t => t.id === plugin);\n  }\n  getPreset(preset) {\n    return this.presets.get(preset);\n  }\n  getShapeDrawer(type) {\n    return this.shapeDrawers.get(type);\n  }\n  getSupportedEffects() {\n    return this.effectDrawers.keys();\n  }\n  getSupportedShapes() {\n    return this.shapeDrawers.keys();\n  }\n  async getUpdaters(container, force = false) {\n    return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n  }\n  init() {\n    if (this._initialized) {\n      return;\n    }\n    this._initialized = true;\n  }\n  item(index) {\n    const {\n        items\n      } = this,\n      item = items[index];\n    if (!item || item.destroyed) {\n      items.splice(index, removeDeleteCount);\n      return;\n    }\n    return item;\n  }\n  async load(params) {\n    const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`,\n      {\n        index,\n        url\n      } = params,\n      options = url ? await getDataFromUrl({\n        fallback: params.options,\n        url,\n        index\n      }) : params.options;\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n      {\n        items\n      } = this,\n      oldIndex = items.findIndex(v => v.id.description === id),\n      newItem = new Container(this, id, currentOptions);\n    if (oldIndex >= loadMinIndex) {\n      const old = this.item(oldIndex),\n        deleteCount = old ? one : none;\n      if (old && !old.destroyed) {\n        old.destroy(false);\n      }\n      items.splice(oldIndex, deleteCount, newItem);\n    } else {\n      items.push(newItem);\n    }\n    const domContainer = getDomContainer(id, params.element),\n      canvasEl = getCanvasFromContainer(domContainer);\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n  loadOptions(options, sourceOptions) {\n    this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n  }\n  loadParticlesOptions(container, options, ...sourceOptions) {\n    const updaters = this.updaters.get(container);\n    if (!updaters) {\n      return;\n    }\n    updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n  }\n  async refresh(refresh = true) {\n    if (!refresh) {\n      return;\n    }\n    await Promise.all(this.items.map(t => t.refresh()));\n  }\n  removeEventListener(type, listener) {\n    this._eventDispatcher.removeEventListener(type, listener);\n  }\n  setOnClickHandler(callback) {\n    const {\n      items\n    } = this;\n    if (!items.length) {\n      throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n    }\n    items.forEach(item => item.addClickHandler(callback));\n  }\n}", "import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n  const engine = new Engine();\n  engine.init();\n  return engine;\n}", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n  constructor(container) {\n    this.type = InteractorType.external;\n    this.container = container;\n  }\n}", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n  constructor(container) {\n    this.type = InteractorType.particles;\n    this.container = container;\n  }\n}", "export var RotateDirection;\n(function (RotateDirection) {\n  RotateDirection[\"clockwise\"] = \"clockwise\";\n  RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n  RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));", "export var GradientType;\n(function (GradientType) {\n  GradientType[\"linear\"] = \"linear\";\n  GradientType[\"radial\"] = \"radial\";\n  GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));", "export var EasingType;\n(function (EasingType) {\n  EasingType[\"easeInBack\"] = \"ease-in-back\";\n  EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n  EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n  EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n  EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n  EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n  EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n  EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n  EasingType[\"easeInSine\"] = \"ease-in-sine\";\n  EasingType[\"easeOutBack\"] = \"ease-out-back\";\n  EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n  EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n  EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n  EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n  EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n  EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n  EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n  EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n  EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n  EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n  EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n  EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n  EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n  EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n  EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n  EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n  EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));", "import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n  window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };"],
  "mappings": "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",
  "names": ["MoveDirection", "squareExp", "defaultAlpha", "AnimationMode", "AnimationStatus", "DestroyType", "OutModeDirection", "PixelMode", "StartValueType", "divMode", "decayOffset", "identity", "minVelocity", "AlterType", "temp1", "temp2", "identity", "minVelocity", "InteractivityDetect", "container", "theme", "EventType", "DivType", "ResponsiveMode", "ThemeMode", "CollisionMode", "OutMode", "LimitMode", "InteractorType", "ParticleOutType", "container", "RangeType", "capacity", "manualCount", "container", "deleteCount", "RotateDirection", "GradientType", "EasingType"]
}
