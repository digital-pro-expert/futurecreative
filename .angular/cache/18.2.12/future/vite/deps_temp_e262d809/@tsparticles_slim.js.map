{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tsparticles/move-base/browser/Utils.js", "../../../../../../node_modules/@tsparticles/move-base/browser/BaseMover.js", "../../../../../../node_modules/@tsparticles/move-base/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-circle/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js", "../../../../../../node_modules/@tsparticles/shape-circle/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js", "../../../../../../node_modules/@tsparticles/updater-color/browser/index.js", "../../../../../../node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js", "../../../../../../node_modules/@tsparticles/plugin-hex-color/browser/index.js", "../../../../../../node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js", "../../../../../../node_modules/@tsparticles/plugin-hsl-color/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js", "../../../../../../node_modules/@tsparticles/updater-opacity/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/Utils.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js", "../../../../../../node_modules/@tsparticles/updater-out-modes/browser/index.js", "../../../../../../node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js", "../../../../../../node_modules/@tsparticles/plugin-rgb-color/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js", "../../../../../../node_modules/@tsparticles/updater-size/browser/index.js", "../../../../../../node_modules/@tsparticles/basic/browser/index.js", "../../../../../../node_modules/@tsparticles/plugin-easing-quad/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-emoji/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js", "../../../../../../node_modules/@tsparticles/shape-emoji/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js", "../../../../../../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js", "../../../../../../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js", "../../../../../../node_modules/@tsparticles/interaction-external-attract/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js", "../../../../../../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js", "../../../../../../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js", "../../../../../../node_modules/@tsparticles/interaction-external-bounce/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js", "../../../../../../node_modules/@tsparticles/interaction-external-bubble/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js", "../../../../../../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js", "../../../../../../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js", "../../../../../../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js", "../../../../../../node_modules/@tsparticles/interaction-external-connect/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js", "../../../../../../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js", "../../../../../../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js", "../../../../../../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js", "../../../../../../node_modules/@tsparticles/interaction-external-grab/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js", "../../../../../../node_modules/@tsparticles/interaction-external-pause/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js", "../../../../../../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js", "../../../../../../node_modules/@tsparticles/interaction-external-push/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js", "../../../../../../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js", "../../../../../../node_modules/@tsparticles/interaction-external-remove/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js", "../../../../../../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js", "../../../../../../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js", "../../../../../../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js", "../../../../../../node_modules/@tsparticles/interaction-external-repulse/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js", "../../../../../../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js", "../../../../../../node_modules/@tsparticles/interaction-external-slow/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js", "../../../../../../node_modules/@tsparticles/shape-image/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js", "../../../../../../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js", "../../../../../../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js", "../../../../../../node_modules/@tsparticles/updater-life/browser/Utils.js", "../../../../../../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js", "../../../../../../node_modules/@tsparticles/updater-life/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-line/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-line/browser/LineDrawer.js", "../../../../../../node_modules/@tsparticles/shape-line/browser/index.js", "../../../../../../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js", "../../../../../../node_modules/@tsparticles/move-parallax/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js", "../../../../../../node_modules/@tsparticles/interaction-particles-attract/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js", "../../../../../../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js", "../../../../../../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js", "../../../../../../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js", "../../../../../../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js", "../../../../../../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js", "../../../../../../node_modules/@tsparticles/interaction-particles-links/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-polygon/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js", "../../../../../../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js", "../../../../../../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js", "../../../../../../node_modules/@tsparticles/shape-polygon/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js", "../../../../../../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js", "../../../../../../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js", "../../../../../../node_modules/@tsparticles/updater-rotate/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-square/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js", "../../../../../../node_modules/@tsparticles/shape-square/browser/index.js", "../../../../../../node_modules/@tsparticles/shape-star/browser/Utils.js", "../../../../../../node_modules/@tsparticles/shape-star/browser/StarDrawer.js", "../../../../../../node_modules/@tsparticles/shape-star/browser/index.js", "../../../../../../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js", "../../../../../../node_modules/@tsparticles/updater-stroke-color/browser/index.js", "../../../../../../node_modules/@tsparticles/slim/browser/index.js"],
  "sourcesContent": ["import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue } from \"@tsparticles/engine\";\nconst half = 0.5,\n  double = 2,\n  minVelocity = 0,\n  identity = 1,\n  moveSpeedFactor = 60,\n  minSpinRadius = 0,\n  spinFactor = 0.01,\n  doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n  const initialPosition = particle.initialPosition,\n    {\n      dx,\n      dy\n    } = getDistances(initialPosition, particle.position),\n    dxFixed = Math.abs(dx),\n    dyFixed = Math.abs(dy),\n    {\n      maxDistance\n    } = particle.retina,\n    hDistance = maxDistance.horizontal,\n    vDistance = maxDistance.vertical;\n  if (!hDistance && !vDistance) {\n    return;\n  }\n  const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false,\n    hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n  if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n    particle.misplaced = !!hDistance && dxFixed > hDistance || !!vDistance && dyFixed > vDistance;\n    if (hDistance) {\n      particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n    }\n    if (vDistance) {\n      particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n    }\n  } else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n    particle.misplaced = false;\n  } else if (particle.misplaced) {\n    const pos = particle.position,\n      vel = particle.velocity;\n    if (hDistance && (pos.x < initialPosition.x && vel.x < minVelocity || pos.x > initialPosition.x && vel.x > minVelocity)) {\n      vel.x *= -getRandom();\n    }\n    if (vDistance && (pos.y < initialPosition.y && vel.y < minVelocity || pos.y > initialPosition.y && vel.y > minVelocity)) {\n      vel.y *= -getRandom();\n    }\n  }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n  applyPath(particle, delta);\n  const gravityOptions = particle.gravity,\n    gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n  if (moveDrift && moveSpeed) {\n    particle.velocity.x += moveDrift * delta.factor / (moveSpeedFactor * moveSpeed);\n  }\n  if (gravityOptions?.enable && moveSpeed) {\n    particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (moveSpeedFactor * moveSpeed);\n  }\n  const decay = particle.moveDecay;\n  particle.velocity.multTo(decay);\n  const velocity = particle.velocity.mult(moveSpeed);\n  if (gravityOptions?.enable && maxSpeed > minVelocity && (!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed)) {\n    velocity.y = gravityFactor * maxSpeed;\n    if (moveSpeed) {\n      particle.velocity.y = velocity.y / moveSpeed;\n    }\n  }\n  const zIndexOptions = particle.options.zIndex,\n    zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n  velocity.multTo(zVelocityFactor);\n  const {\n    position\n  } = particle;\n  position.addTo(velocity);\n  if (moveOptions.vibrate) {\n    position.x += Math.sin(position.x * Math.cos(position.y));\n    position.y += Math.cos(position.y * Math.sin(position.x));\n  }\n}\nexport function spin(particle, moveSpeed) {\n  const container = particle.container;\n  if (!particle.spin) {\n    return;\n  }\n  const spinClockwise = particle.spin.direction === RotateDirection.clockwise,\n    updateFunc = {\n      x: spinClockwise ? Math.cos : Math.sin,\n      y: spinClockwise ? Math.sin : Math.cos\n    };\n  particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n  particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n  particle.spin.radius += particle.spin.acceleration;\n  const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height),\n    halfMaxSize = maxCanvasSize * half;\n  if (particle.spin.radius > halfMaxSize) {\n    particle.spin.radius = halfMaxSize;\n    particle.spin.acceleration *= -identity;\n  } else if (particle.spin.radius < minSpinRadius) {\n    particle.spin.radius = minSpinRadius;\n    particle.spin.acceleration *= -identity;\n  }\n  particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n  const particlesOptions = particle.options,\n    pathOptions = particlesOptions.move.path,\n    pathEnabled = pathOptions.enable;\n  if (!pathEnabled) {\n    return;\n  }\n  if (particle.lastPathTime <= particle.pathDelay) {\n    particle.lastPathTime += delta.value;\n    return;\n  }\n  const path = particle.pathGenerator?.generate(particle, delta);\n  if (path) {\n    particle.velocity.addTo(path);\n  }\n  if (pathOptions.clamp) {\n    particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n    particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n  }\n  particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n  return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n  const container = particle.container,\n    options = particle.options,\n    spinOptions = options.move.spin;\n  if (!spinOptions.enable) {\n    return;\n  }\n  const spinPos = spinOptions.position ?? {\n      x: 50,\n      y: 50\n    },\n    spinFactor = 0.01,\n    spinCenter = {\n      x: spinPos.x * spinFactor * container.canvas.size.width,\n      y: spinPos.y * spinFactor * container.canvas.size.height\n    },\n    pos = particle.getPosition(),\n    distance = getDistance(pos, spinCenter),\n    spinAcceleration = getRangeValue(spinOptions.acceleration);\n  particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n  particle.spin = {\n    center: spinCenter,\n    direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n    angle: getRandom() * doublePI,\n    radius: distance,\n    acceleration: particle.retina.spinAcceleration\n  };\n}", "import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2,\n  defaultSizeFactor = 1,\n  defaultDeltaFactor = 1;\nexport class BaseMover {\n  init(particle) {\n    const options = particle.options,\n      gravityOptions = options.move.gravity;\n    particle.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: getRangeValue(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    initSpin(particle);\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && particle.options.move.enable;\n  }\n  move(particle, delta) {\n    const particleOptions = particle.options,\n      moveOptions = particleOptions.move;\n    if (!moveOptions.enable) {\n      return;\n    }\n    const container = particle.container,\n      pxRatio = container.retina.pixelRatio;\n    particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n    particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n    const slowFactor = getProximitySpeedFactor(particle),\n      baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor,\n      moveDrift = particle.retina.moveDrift,\n      maxSize = getRangeMax(particleOptions.size.value) * pxRatio,\n      sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor,\n      deltaFactor = delta.factor || defaultDeltaFactor,\n      moveSpeed = baseSpeed * sizeFactor * slowFactor * deltaFactor / diffFactor,\n      maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n    if (moveOptions.spin.enable) {\n      spin(particle, moveSpeed);\n    } else {\n      move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n    }\n    applyDistance(particle);\n  }\n}", "import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addMover(\"base\", () => {\n    return Promise.resolve(new BaseMover());\n  }, refresh);\n}", "const double = 2,\n  doublePI = Math.PI * double,\n  minAngle = 0,\n  origin = {\n    x: 0,\n    y: 0\n  };\nexport function drawCircle(data) {\n  const {\n    context,\n    particle,\n    radius\n  } = data;\n  if (!particle.circleRange) {\n    particle.circleRange = {\n      min: minAngle,\n      max: doublePI\n    };\n  }\n  const circleRange = particle.circleRange;\n  context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}", "import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12,\n  maxAngle = 360,\n  minAngle = 0;\nexport class CircleDrawer {\n  constructor() {\n    this.validTypes = [\"circle\"];\n  }\n  draw(data) {\n    drawCircle(data);\n  }\n  getSidesCount() {\n    return sides;\n  }\n  particleInit(container, particle) {\n    const shapeData = particle.shapeData,\n      angle = shapeData?.angle ?? {\n        max: maxAngle,\n        min: minAngle\n      };\n    particle.circleRange = !isObject(angle) ? {\n      min: minAngle,\n      max: degToRad(angle)\n    } : {\n      min: degToRad(angle.min),\n      max: degToRad(angle.max)\n    };\n  }\n}", "import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new CircleDrawer(), refresh);\n}", "import { getHslAnimationFromHsl, rangeColorToHsl, updateColor } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n  constructor(container, engine) {\n    this._container = container;\n    this._engine = engine;\n  }\n  init(particle) {\n    const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n    if (hslColor) {\n      particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n    }\n  }\n  isEnabled(particle) {\n    const {\n        h: hAnimation,\n        s: sAnimation,\n        l: lAnimation\n      } = particle.options.color.animation,\n      {\n        color\n      } = particle;\n    return !particle.destroyed && !particle.spawning && (color?.h.value !== undefined && hAnimation.enable || color?.s.value !== undefined && sAnimation.enable || color?.l.value !== undefined && lAnimation.enable);\n  }\n  update(particle, delta) {\n    updateColor(particle.color, delta);\n  }\n}", "import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"color\", container => {\n    return Promise.resolve(new ColorUpdater(container, engine));\n  }, refresh);\n}", "var RgbIndexes;\n(function (RgbIndexes) {\n  RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n  RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n  RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n  RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,\n  hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,\n  hexRadix = 16,\n  defaultAlpha = 1,\n  alphaFactor = 0xff;\nexport class HexColorManager {\n  constructor() {\n    this.key = \"hex\";\n    this.stringPrefix = \"#\";\n  }\n  handleColor(color) {\n    return this._parseString(color.value);\n  }\n  handleRangeColor(color) {\n    return this._parseString(color.value);\n  }\n  parseString(input) {\n    return this._parseString(input);\n  }\n  _parseString(hexColor) {\n    if (typeof hexColor !== \"string\") {\n      return;\n    }\n    if (!hexColor?.startsWith(this.stringPrefix)) {\n      return;\n    }\n    const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n      }),\n      result = hexRegex.exec(hexFixed);\n    return result ? {\n      a: result[RgbIndexes.a] !== undefined ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor : defaultAlpha,\n      b: parseInt(result[RgbIndexes.b], hexRadix),\n      g: parseInt(result[RgbIndexes.g], hexRadix),\n      r: parseInt(result[RgbIndexes.r], hexRadix)\n    } : undefined;\n  }\n}", "import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addColorManager(new HexColorManager(), refresh);\n}", "import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n  HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n  HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n  HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n  HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n  constructor() {\n    this.key = \"hsl\";\n    this.stringPrefix = \"hsl\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      hslColor = colorValue.hsl ?? color.value;\n    if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n      return hslToRgb(hslColor);\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      hslColor = colorValue.hsl ?? color.value;\n    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n      return hslToRgb({\n        h: getRangeValue(hslColor.h),\n        l: getRangeValue(hslColor.l),\n        s: getRangeValue(hslColor.s)\n      });\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(\"hsl\")) {\n      return;\n    }\n    const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i,\n      result = regex.exec(input),\n      minLength = 4,\n      defaultAlpha = 1,\n      radix = 10;\n    return result ? hslaToRgba({\n      a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n      h: parseInt(result[HslIndexes.h], radix),\n      l: parseInt(result[HslIndexes.l], radix),\n      s: parseInt(result[HslIndexes.s], radix)\n    }) : undefined;\n  }\n}", "import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addColorManager(new HslColorManager(), refresh);\n}", "import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const opacityOptions = particle.options.opacity,\n      pxRatio = 1;\n    particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n    const opacityAnimation = opacityOptions.animation;\n    if (opacityAnimation.enable) {\n      particle.opacity.velocity = getRangeValue(opacityAnimation.speed) / percentDenominator * this.container.retina.reduceFactor;\n      if (!opacityAnimation.sync) {\n        particle.opacity.velocity *= getRandom();\n      }\n    }\n  }\n  isEnabled(particle) {\n    const none = 0;\n    return !particle.destroyed && !particle.spawning && !!particle.opacity && particle.opacity.enable && ((particle.opacity.maxLoops ?? none) <= none || (particle.opacity.maxLoops ?? none) > none && (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none));\n  }\n  reset(particle) {\n    if (particle.opacity) {\n      particle.opacity.time = 0;\n      particle.opacity.loops = 0;\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle) || !particle.opacity) {\n      return;\n    }\n    updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n  }\n}", "import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"opacity\", container => {\n    return Promise.resolve(new OpacityUpdater(container));\n  }, refresh);\n}", "import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0,\n  boundsMin = 0;\nexport function bounceHorizontal(data) {\n  if (data.outMode !== OutMode.bounce && data.outMode !== OutMode.split || data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right) {\n    return;\n  }\n  if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n    data.particle.position.x = data.size + data.offset.x;\n  } else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n    data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n  }\n  const velocity = data.particle.velocity.x;\n  let bounced = false;\n  if (data.direction === OutModeDirection.right && data.bounds.right >= data.canvasSize.width && velocity > minVelocity || data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity) {\n    const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n    data.particle.velocity.x *= -newVelocity;\n    bounced = true;\n  }\n  if (!bounced) {\n    return;\n  }\n  const minPos = data.offset.x + data.size;\n  if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n    data.particle.position.x = data.canvasSize.width - minPos;\n  } else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n    data.particle.position.x = minPos;\n  }\n  if (data.outMode === OutMode.split) {\n    data.particle.destroy();\n  }\n}\nexport function bounceVertical(data) {\n  if (data.outMode !== OutMode.bounce && data.outMode !== OutMode.split || data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top) {\n    return;\n  }\n  if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n    data.particle.position.y = data.size + data.offset.y;\n  } else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n    data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n  }\n  const velocity = data.particle.velocity.y;\n  let bounced = false;\n  if (data.direction === OutModeDirection.bottom && data.bounds.bottom >= data.canvasSize.height && velocity > minVelocity || data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity) {\n    const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n    data.particle.velocity.y *= -newVelocity;\n    bounced = true;\n  }\n  if (!bounced) {\n    return;\n  }\n  const minPos = data.offset.y + data.size;\n  if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n    data.particle.position.y = data.canvasSize.height - minPos;\n  } else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n    data.particle.position.y = minPos;\n  }\n  if (data.outMode === OutMode.split) {\n    data.particle.destroy();\n  }\n}", "import { OutMode, calculateBounds } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n  constructor(container) {\n    this.container = container;\n    this.modes = [OutMode.bounce, OutMode.split];\n  }\n  update(particle, direction, delta, outMode) {\n    if (!this.modes.includes(outMode)) {\n      return;\n    }\n    const container = this.container;\n    let handled = false;\n    for (const plugin of container.plugins.values()) {\n      if (plugin.particleBounce !== undefined) {\n        handled = plugin.particleBounce(particle, delta, direction);\n      }\n      if (handled) {\n        break;\n      }\n    }\n    if (handled) {\n      return;\n    }\n    const pos = particle.getPosition(),\n      offset = particle.offset,\n      size = particle.getRadius(),\n      bounds = calculateBounds(pos, size),\n      canvasSize = container.canvas.size;\n    bounceHorizontal({\n      particle,\n      outMode,\n      direction,\n      bounds,\n      canvasSize,\n      offset,\n      size\n    });\n    bounceVertical({\n      particle,\n      outMode,\n      direction,\n      bounds,\n      canvasSize,\n      offset,\n      size\n    });\n  }\n}", "import { OutMode, ParticleOutType, Vector, getDistances, isPointInside } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n  constructor(container) {\n    this.container = container;\n    this.modes = [OutMode.destroy];\n  }\n  update(particle, direction, _delta, outMode) {\n    if (!this.modes.includes(outMode)) {\n      return;\n    }\n    const container = this.container;\n    switch (particle.outType) {\n      case ParticleOutType.normal:\n      case ParticleOutType.outside:\n        if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n          return;\n        }\n        break;\n      case ParticleOutType.inside:\n        {\n          const {\n              dx,\n              dy\n            } = getDistances(particle.position, particle.moveCenter),\n            {\n              x: vx,\n              y: vy\n            } = particle.velocity;\n          if (vx < minVelocity && dx > particle.moveCenter.radius || vy < minVelocity && dy > particle.moveCenter.radius || vx >= minVelocity && dx < -particle.moveCenter.radius || vy >= minVelocity && dy < -particle.moveCenter.radius) {\n            return;\n          }\n          break;\n        }\n    }\n    container.particles.remove(particle, particle.group, true);\n  }\n}", "import { OutMode, OutModeDirection, Vector, isPointInside } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n  constructor(container) {\n    this.container = container;\n    this.modes = [OutMode.none];\n  }\n  update(particle, direction, delta, outMode) {\n    if (!this.modes.includes(outMode)) {\n      return;\n    }\n    if ((particle.options.move.distance.horizontal && (direction === OutModeDirection.left || direction === OutModeDirection.right)) ?? (particle.options.move.distance.vertical && (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n      return;\n    }\n    const gravityOptions = particle.options.move.gravity,\n      container = this.container,\n      canvasSize = container.canvas.size,\n      pRadius = particle.getRadius();\n    if (!gravityOptions.enable) {\n      if (particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius || particle.velocity.y < minVelocity && particle.position.y >= -pRadius || particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius || particle.velocity.x < minVelocity && particle.position.x >= -pRadius) {\n        return;\n      }\n      if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n        container.particles.remove(particle);\n      }\n    } else {\n      const position = particle.position;\n      if (!gravityOptions.inverse && position.y > canvasSize.height + pRadius && direction === OutModeDirection.bottom || gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top) {\n        container.particles.remove(particle);\n      }\n    }\n  }\n}", "import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange } from \"@tsparticles/engine\";\nconst minVelocity = 0,\n  minDistance = 0;\nexport class OutOutMode {\n  constructor(container) {\n    this.container = container;\n    this.modes = [OutMode.out];\n  }\n  update(particle, direction, delta, outMode) {\n    if (!this.modes.includes(outMode)) {\n      return;\n    }\n    const container = this.container;\n    switch (particle.outType) {\n      case ParticleOutType.inside:\n        {\n          const {\n            x: vx,\n            y: vy\n          } = particle.velocity;\n          const circVec = Vector.origin;\n          circVec.length = particle.moveCenter.radius;\n          circVec.angle = particle.velocity.angle + Math.PI;\n          circVec.addTo(Vector.create(particle.moveCenter));\n          const {\n            dx,\n            dy\n          } = getDistances(particle.position, circVec);\n          if (vx <= minVelocity && dx >= minDistance || vy <= minVelocity && dy >= minDistance || vx >= minVelocity && dx <= minDistance || vy >= minVelocity && dy <= minDistance) {\n            return;\n          }\n          particle.position.x = Math.floor(randomInRange({\n            min: 0,\n            max: container.canvas.size.width\n          }));\n          particle.position.y = Math.floor(randomInRange({\n            min: 0,\n            max: container.canvas.size.height\n          }));\n          const {\n            dx: newDx,\n            dy: newDy\n          } = getDistances(particle.position, particle.moveCenter);\n          particle.direction = Math.atan2(-newDy, -newDx);\n          particle.velocity.angle = particle.direction;\n          break;\n        }\n      default:\n        {\n          if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n            return;\n          }\n          switch (particle.outType) {\n            case ParticleOutType.outside:\n              {\n                particle.position.x = Math.floor(randomInRange({\n                  min: -particle.moveCenter.radius,\n                  max: particle.moveCenter.radius\n                })) + particle.moveCenter.x;\n                particle.position.y = Math.floor(randomInRange({\n                  min: -particle.moveCenter.radius,\n                  max: particle.moveCenter.radius\n                })) + particle.moveCenter.y;\n                const {\n                  dx,\n                  dy\n                } = getDistances(particle.position, particle.moveCenter);\n                if (particle.moveCenter.radius) {\n                  particle.direction = Math.atan2(dy, dx);\n                  particle.velocity.angle = particle.direction;\n                }\n                break;\n              }\n            case ParticleOutType.normal:\n              {\n                const warp = particle.options.move.warp,\n                  canvasSize = container.canvas.size,\n                  newPos = {\n                    bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                    left: -particle.getRadius() - particle.offset.x,\n                    right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                    top: -particle.getRadius() - particle.offset.y\n                  },\n                  sizeValue = particle.getRadius(),\n                  nextBounds = calculateBounds(particle.position, sizeValue);\n                if (direction === OutModeDirection.right && nextBounds.left > canvasSize.width + particle.offset.x) {\n                  particle.position.x = newPos.left;\n                  particle.initialPosition.x = particle.position.x;\n                  if (!warp) {\n                    particle.position.y = getRandom() * canvasSize.height;\n                    particle.initialPosition.y = particle.position.y;\n                  }\n                } else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                  particle.position.x = newPos.right;\n                  particle.initialPosition.x = particle.position.x;\n                  if (!warp) {\n                    particle.position.y = getRandom() * canvasSize.height;\n                    particle.initialPosition.y = particle.position.y;\n                  }\n                }\n                if (direction === OutModeDirection.bottom && nextBounds.top > canvasSize.height + particle.offset.y) {\n                  if (!warp) {\n                    particle.position.x = getRandom() * canvasSize.width;\n                    particle.initialPosition.x = particle.position.x;\n                  }\n                  particle.position.y = newPos.top;\n                  particle.initialPosition.y = particle.position.y;\n                } else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                  if (!warp) {\n                    particle.position.x = getRandom() * canvasSize.width;\n                    particle.initialPosition.x = particle.position.x;\n                  }\n                  particle.position.y = newPos.bottom;\n                  particle.initialPosition.y = particle.position.y;\n                }\n                break;\n              }\n          }\n          break;\n        }\n    }\n  }\n}", "import { OutMode, OutModeDirection } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n  return outModes.default === outMode || outModes.bottom === outMode || outModes.left === outMode || outModes.right === outMode || outModes.top === outMode;\n};\nexport class OutOfCanvasUpdater {\n  constructor(container) {\n    this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n      const outModes = particle.options.move.outModes;\n      if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n        this.updaters.set(outMode, getUpdater(this.container));\n      }\n    };\n    this._updateOutMode = (particle, delta, outMode, direction) => {\n      for (const updater of this.updaters.values()) {\n        updater.update(particle, direction, delta, outMode);\n      }\n    };\n    this.container = container;\n    this.updaters = new Map();\n  }\n  init(particle) {\n    this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n    this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n    this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n    this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning;\n  }\n  update(particle, delta) {\n    const outModes = particle.options.move.outModes;\n    this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n    this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n    this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n    this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n  }\n}", "import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"outModes\", container => {\n    return Promise.resolve(new OutOfCanvasUpdater(container));\n  }, refresh);\n}", "import { getRangeValue, parseAlpha } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n  RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n  RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n  RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n  RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n  constructor() {\n    this.key = \"rgb\";\n    this.stringPrefix = \"rgb\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      rgbColor = colorValue.rgb ?? color.value;\n    if (rgbColor.r !== undefined) {\n      return rgbColor;\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      rgbColor = colorValue.rgb ?? color.value;\n    if (rgbColor.r !== undefined) {\n      return {\n        r: getRangeValue(rgbColor.r),\n        g: getRangeValue(rgbColor.g),\n        b: getRangeValue(rgbColor.b)\n      };\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(this.stringPrefix)) {\n      return;\n    }\n    const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i,\n      result = regex.exec(input),\n      radix = 10,\n      minLength = 4,\n      defaultAlpha = 1;\n    return result ? {\n      a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n      b: parseInt(result[RgbIndexes.b], radix),\n      g: parseInt(result[RgbIndexes.g], radix),\n      r: parseInt(result[RgbIndexes.r], radix)\n    } : undefined;\n  }\n}", "import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addColorManager(new RgbColorManager(), refresh);\n}", "import { getRandom, percentDenominator, updateAnimation } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n  init(particle) {\n    const container = particle.container,\n      sizeOptions = particle.options.size,\n      sizeAnimation = sizeOptions.animation;\n    if (sizeAnimation.enable) {\n      particle.size.velocity = (particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator * container.retina.reduceFactor;\n      if (!sizeAnimation.sync) {\n        particle.size.velocity *= getRandom();\n      }\n    }\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning && particle.size.enable && ((particle.size.maxLoops ?? minLoops) <= minLoops || (particle.size.maxLoops ?? minLoops) > minLoops && (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops));\n  }\n  reset(particle) {\n    particle.size.loops = minLoops;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n  }\n}", "import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"size\", () => {\n    return Promise.resolve(new SizeUpdater());\n  }, refresh);\n}", "import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await loadHexColorPlugin(engine, false);\n  await loadHslColorPlugin(engine, false);\n  await loadRgbColorPlugin(engine, false);\n  await loadBaseMover(engine, false);\n  await loadCircleShape(engine, false);\n  await loadColorUpdater(engine, false);\n  await loadOpacityUpdater(engine, false);\n  await loadOutModesUpdater(engine, false);\n  await loadSizeUpdater(engine, false);\n  await engine.refresh(refresh);\n}", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n  await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n  await engine.addEasing(EasingType.easeInOutQuad, value => value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2, false);\n  await engine.refresh(refresh);\n}", "export function drawEmoji(data, image) {\n  const {\n      context,\n      opacity\n    } = data,\n    half = 0.5,\n    previousAlpha = context.globalAlpha;\n  if (!image) {\n    return;\n  }\n  const diameter = image.width,\n    radius = diameter * half;\n  context.globalAlpha = opacity;\n  context.drawImage(image, -radius, -radius, diameter, diameter);\n  context.globalAlpha = previousAlpha;\n}", "import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"',\n  noPadding = 0;\nexport class EmojiDrawer {\n  constructor() {\n    this.validTypes = [\"emoji\"];\n    this._emojiShapeDict = new Map();\n  }\n  destroy() {\n    for (const [key, data] of this._emojiShapeDict) {\n      if (data instanceof ImageBitmap) {\n        data?.close();\n      }\n      this._emojiShapeDict.delete(key);\n    }\n  }\n  draw(data) {\n    const key = data.particle.emojiDataKey;\n    if (!key) {\n      return;\n    }\n    const image = this._emojiShapeDict.get(key);\n    if (!image) {\n      return;\n    }\n    drawEmoji(data, image);\n  }\n  async init(container) {\n    const options = container.actualOptions,\n      {\n        validTypes\n      } = this;\n    if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n      return;\n    }\n    const promises = [loadFont(defaultFont)],\n      shapeOptions = validTypes.map(t => options.particles.shape.options[t]).find(t => !!t);\n    if (shapeOptions) {\n      executeOnSingleOrMultiple(shapeOptions, shape => {\n        if (shape.font) {\n          promises.push(loadFont(shape.font));\n        }\n      });\n    }\n    await Promise.all(promises);\n  }\n  particleDestroy(particle) {\n    particle.emojiDataKey = undefined;\n  }\n  particleInit(_container, particle) {\n    const double = 2,\n      shapeData = particle.shapeData;\n    if (!shapeData?.value) {\n      return;\n    }\n    const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n    if (!emoji) {\n      return;\n    }\n    const emojiOptions = typeof emoji === \"string\" ? {\n        font: shapeData.font ?? defaultFont,\n        padding: shapeData.padding ?? noPadding,\n        value: emoji\n      } : {\n        font: defaultFont,\n        padding: noPadding,\n        ...shapeData,\n        ...emoji\n      },\n      font = emojiOptions.font,\n      value = emojiOptions.value;\n    const key = `${value}_${font}`;\n    if (this._emojiShapeDict.has(key)) {\n      particle.emojiDataKey = key;\n      return;\n    }\n    const padding = emojiOptions.padding * double,\n      maxSize = getRangeMax(particle.size.value),\n      fullSize = maxSize + padding,\n      canvasSize = fullSize * double;\n    let image;\n    if (typeof OffscreenCanvas !== \"undefined\") {\n      const canvas = new OffscreenCanvas(canvasSize, canvasSize),\n        context = canvas.getContext(\"2d\");\n      if (!context) {\n        return;\n      }\n      context.font = `400 ${maxSize * double}px ${font}`;\n      context.textBaseline = \"middle\";\n      context.textAlign = \"center\";\n      context.fillText(value, fullSize, fullSize);\n      image = canvas.transferToImageBitmap();\n    } else {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = canvasSize;\n      canvas.height = canvasSize;\n      const context = canvas.getContext(\"2d\");\n      if (!context) {\n        return;\n      }\n      context.font = `400 ${maxSize * double}px ${font}`;\n      context.textBaseline = \"middle\";\n      context.textAlign = \"center\";\n      context.fillText(value, fullSize, fullSize);\n      image = canvas;\n    }\n    this._emojiShapeDict.set(key, image);\n    particle.emojiDataKey = key;\n  }\n}", "import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new EmojiDrawer(), refresh);\n}", "import { Circle, Vector, clamp, getDistances } from \"@tsparticles/engine\";\nconst minFactor = 1,\n  identity = 1,\n  minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n  const attractOptions = container.actualOptions.interactivity.modes.attract;\n  if (!attractOptions) {\n    return;\n  }\n  const query = container.particles.quadTree.query(area, queryCb);\n  for (const particle of query) {\n    const {\n        dx,\n        dy,\n        distance\n      } = getDistances(particle.position, position),\n      velocity = attractOptions.speed * attractOptions.factor,\n      attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed),\n      normVec = Vector.create(!distance ? velocity : dx / distance * attractFactor, !distance ? velocity : dy / distance * attractFactor);\n    particle.position.subFrom(normVec);\n  }\n}\nexport function clickAttract(engine, container, enabledCb) {\n  if (!container.attract) {\n    container.attract = {\n      particles: []\n    };\n  }\n  const {\n    attract\n  } = container;\n  if (!attract.finish) {\n    if (!attract.count) {\n      attract.count = 0;\n    }\n    attract.count++;\n    if (attract.count === container.particles.count) {\n      attract.finish = true;\n    }\n  }\n  if (attract.clicking) {\n    const mousePos = container.interactivity.mouse.clickPosition,\n      attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n      return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), p => enabledCb(p));\n  } else if (attract.clicking === false) {\n    attract.particles = [];\n  }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n  const mousePos = container.interactivity.mouse.position,\n    attractRadius = container.retina.attractModeDistance;\n  if (!attractRadius || attractRadius < minRadius || !mousePos) {\n    return;\n  }\n  processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), p => enabledCb(p));\n}", "import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n  constructor() {\n    this.distance = 200;\n    this.duration = 0.4;\n    this.easing = EasingType.easeOutQuad;\n    this.factor = 1;\n    this.maxSpeed = 50;\n    this.speed = 1;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n    if (data.duration !== undefined) {\n      this.duration = data.duration;\n    }\n    if (data.easing !== undefined) {\n      this.easing = data.easing;\n    }\n    if (data.factor !== undefined) {\n      this.factor = data.factor;\n    }\n    if (data.maxSpeed !== undefined) {\n      this.maxSpeed = data.maxSpeed;\n    }\n    if (data.speed !== undefined) {\n      this.speed = data.speed;\n    }\n  }\n}", "import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n  constructor(engine, container) {\n    super(container);\n    this._engine = engine;\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions,\n        attract = options.interactivity.modes.attract;\n      if (!attract || mode !== attractMode) {\n        return;\n      }\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n      container.attract.clicking = true;\n      container.attract.count = 0;\n      for (const particle of container.attract.particles) {\n        if (!this.isEnabled(particle)) {\n          continue;\n        }\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(() => {\n        if (container.destroyed) {\n          return;\n        }\n        if (!container.attract) {\n          container.attract = {\n            particles: []\n          };\n        }\n        container.attract.clicking = false;\n      }, attract.duration * millisecondsToSeconds);\n    };\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      attract = container.actualOptions.interactivity.modes.attract;\n    if (!attract) {\n      return;\n    }\n    container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n  }\n  interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n      events = options.interactivity.events,\n      {\n        enable: hoverEnabled,\n        mode: hoverMode\n      } = events.onHover,\n      {\n        enable: clickEnabled,\n        mode: clickMode\n      } = events.onClick;\n    if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n      hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n    } else if (clickEnabled && isInArray(attractMode, clickMode)) {\n      clickAttract(this._engine, this.container, p => this.isEnabled(p));\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? options.interactivity).events;\n    if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode,\n      clickMode = events.onClick.mode;\n    return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.attract) {\n      options.attract = new Attract();\n    }\n    for (const source of sources) {\n      options.attract.load(source?.attract);\n    }\n  }\n  reset() {}\n}", "import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalAttract\", container => {\n    return Promise.resolve(new Attractor(engine, container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";", "import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce } from \"@tsparticles/engine\";\nconst squareExp = 2,\n  half = 0.5,\n  halfPI = Math.PI * half,\n  double = 2,\n  toleranceFactor = 10,\n  minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n  const query = container.particles.quadTree.query(area, enabledCb);\n  for (const particle of query) {\n    if (area instanceof Circle) {\n      circleBounce(circleBounceDataFromParticle(particle), {\n        position,\n        radius,\n        mass: radius ** squareExp * halfPI,\n        velocity: Vector.origin,\n        factor: Vector.origin\n      });\n    } else if (area instanceof Rectangle) {\n      rectBounce(particle, calculateBounds(position, radius));\n    }\n  }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n  const query = document.querySelectorAll(selector);\n  if (!query.length) {\n    return;\n  }\n  query.forEach(item => {\n    const elem = item,\n      pxRatio = container.retina.pixelRatio,\n      pos = {\n        x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio\n      },\n      radius = elem.offsetWidth * half * pxRatio,\n      tolerance = toleranceFactor * pxRatio,\n      area = div.type === DivType.circle ? new Circle(pos.x, pos.y, radius + tolerance) : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n    bounceCb(pos, radius, area);\n  });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n  divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n  const pxRatio = container.retina.pixelRatio,\n    tolerance = toleranceFactor * pxRatio,\n    mousePos = container.interactivity.mouse.position,\n    radius = container.retina.bounceModeDistance;\n  if (!radius || radius < minRadius || !mousePos) {\n    return;\n  }\n  processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}", "import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n  constructor() {\n    this.distance = 200;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n  }\n}", "import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      bounce = container.actualOptions.interactivity.modes.bounce;\n    if (!bounce) {\n      return;\n    }\n    container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n  }\n  interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      events = options.interactivity.events,\n      mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n      hoverEnabled = events.onHover.enable,\n      hoverMode = events.onHover.mode,\n      divs = events.onDiv;\n    if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n      mouseBounce(this.container, p => this.isEnabled(p));\n    } else {\n      divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? options.interactivity).events,\n      divs = events.onDiv;\n    return !!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode) || isDivModeEnabled(bounceMode, divs);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.bounce) {\n      options.bounce = new Bounce();\n    }\n    for (const source of sources) {\n      options.bounce.load(source?.bounce);\n    }\n  }\n  reset() {}\n}", "import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalBounce\", container => {\n    return Promise.resolve(new Bouncer(container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";", "import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull } from \"@tsparticles/engine\";\nexport class BubbleBase {\n  constructor() {\n    this.distance = 200;\n    this.duration = 0.4;\n    this.mix = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n    if (data.duration !== undefined) {\n      this.duration = data.duration;\n    }\n    if (data.mix !== undefined) {\n      this.mix = data.mix;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n    if (data.color !== undefined) {\n      const sourceColor = isArray(this.color) ? undefined : this.color;\n      this.color = executeOnSingleOrMultiple(data.color, color => {\n        return OptionsColor.create(sourceColor, color);\n      });\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n  }\n}", "import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n  constructor() {\n    super();\n    this.selectors = [];\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.selectors !== undefined) {\n      this.selectors = data.selectors;\n    }\n  }\n}", "import { executeOnSingleOrMultiple, isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    this.divs = executeOnSingleOrMultiple(data.divs, div => {\n      const tmp = new BubbleDiv();\n      tmp.load(div);\n      return tmp;\n    });\n  }\n}", "export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n  ProcessBubbleType[\"color\"] = \"color\";\n  ProcessBubbleType[\"opacity\"] = \"opacity\";\n  ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));", "import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    const value = particleValue + (modeValue - optionsValue) * ratio;\n    return clamp(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    const value = particleValue - (optionsValue - modeValue) * ratio;\n    return clamp(value, modeValue, particleValue);\n  }\n}", "import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\",\n  minDistance = 0,\n  defaultClickTime = 0,\n  double = 2,\n  defaultOpacity = 1,\n  ratioOffset = 1,\n  defaultBubbleValue = 0,\n  minRatio = 0,\n  half = 0.5,\n  defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n  constructor(container, engine) {\n    super(container);\n    this._clickBubble = () => {\n      const container = this.container,\n        options = container.actualOptions,\n        mouseClickPos = container.interactivity.mouse.clickPosition,\n        bubbleOptions = options.interactivity.modes.bubble;\n      if (!bubbleOptions || !mouseClickPos) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      const distance = container.retina.bubbleModeDistance;\n      if (!distance || distance < minDistance) {\n        return;\n      }\n      const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)),\n        {\n          bubble\n        } = container;\n      for (const particle of query) {\n        if (!bubble.clicking) {\n          continue;\n        }\n        particle.bubble.inRange = !bubble.durationEnd;\n        const pos = particle.getPosition(),\n          distMouse = getDistance(pos, mouseClickPos),\n          timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) / millisecondsToSeconds;\n        if (timeSpent > bubbleOptions.duration) {\n          bubble.durationEnd = true;\n        }\n        if (timeSpent > bubbleOptions.duration * double) {\n          bubble.clicking = false;\n          bubble.durationEnd = false;\n        }\n        const sizeData = {\n          bubbleObj: {\n            optValue: container.retina.bubbleModeSize,\n            value: particle.bubble.radius\n          },\n          particlesObj: {\n            optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n            value: particle.size.value\n          },\n          type: ProcessBubbleType.size\n        };\n        this._process(particle, distMouse, timeSpent, sizeData);\n        const opacityData = {\n          bubbleObj: {\n            optValue: bubbleOptions.opacity,\n            value: particle.bubble.opacity\n          },\n          particlesObj: {\n            optValue: getRangeMax(particle.options.opacity.value),\n            value: particle.opacity?.value ?? defaultOpacity\n          },\n          type: ProcessBubbleType.opacity\n        };\n        this._process(particle, distMouse, timeSpent, opacityData);\n        if (!bubble.durationEnd && distMouse <= distance) {\n          this._hoverBubbleColor(particle, distMouse);\n        } else {\n          delete particle.bubble.color;\n        }\n      }\n    };\n    this._hoverBubble = () => {\n      const container = this.container,\n        mousePos = container.interactivity.mouse.position,\n        distance = container.retina.bubbleModeDistance;\n      if (!distance || distance < minDistance || !mousePos) {\n        return;\n      }\n      const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n      for (const particle of query) {\n        particle.bubble.inRange = true;\n        const pos = particle.getPosition(),\n          pointDistance = getDistance(pos, mousePos),\n          ratio = ratioOffset - pointDistance / distance;\n        if (pointDistance <= distance) {\n          if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n            this._hoverBubbleSize(particle, ratio);\n            this._hoverBubbleOpacity(particle, ratio);\n            this._hoverBubbleColor(particle, ratio);\n          }\n        } else {\n          this.reset(particle);\n        }\n        if (container.interactivity.status === mouseLeaveEvent) {\n          this.reset(particle);\n        }\n      }\n    };\n    this._hoverBubbleColor = (particle, ratio, divBubble) => {\n      const options = this.container.actualOptions,\n        bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n      if (!bubbleOptions) {\n        return;\n      }\n      if (!particle.bubble.finalColor) {\n        const modeColor = bubbleOptions.color;\n        if (!modeColor) {\n          return;\n        }\n        const bubbleColor = itemFromSingleOrMultiple(modeColor);\n        particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n      }\n      if (!particle.bubble.finalColor) {\n        return;\n      }\n      if (bubbleOptions.mix) {\n        particle.bubble.color = undefined;\n        const pColor = particle.getFillColor();\n        particle.bubble.color = pColor ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio)) : particle.bubble.finalColor;\n      } else {\n        particle.bubble.color = particle.bubble.finalColor;\n      }\n    };\n    this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n      const container = this.container,\n        options = container.actualOptions,\n        modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n      if (!modeOpacity) {\n        return;\n      }\n      const optOpacity = particle.options.opacity.value,\n        pOpacity = particle.opacity?.value ?? defaultOpacity,\n        opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    };\n    this._hoverBubbleSize = (particle, ratio, divBubble) => {\n      const container = this.container,\n        modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n      if (modeSize === undefined) {\n        return;\n      }\n      const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n        pSize = particle.size.value,\n        size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    };\n    this._process = (particle, distMouse, timeSpent, data) => {\n      const container = this.container,\n        bubbleParam = data.bubbleObj.optValue,\n        options = container.actualOptions,\n        bubbleOptions = options.interactivity.modes.bubble;\n      if (!bubbleOptions || bubbleParam === undefined) {\n        return;\n      }\n      const bubbleDuration = bubbleOptions.duration,\n        bubbleDistance = container.retina.bubbleModeDistance,\n        particlesParam = data.particlesObj.optValue,\n        pObjBubble = data.bubbleObj.value,\n        pObj = data.particlesObj.value ?? defaultBubbleValue,\n        type = data.type;\n      if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      if (container.bubble.durationEnd) {\n        if (pObjBubble) {\n          if (type === ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n          if (type === ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else {\n        if (distMouse <= bubbleDistance) {\n          const obj = pObjBubble ?? pObj;\n          if (obj !== bubbleParam) {\n            const value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n            if (type === ProcessBubbleType.size) {\n              particle.bubble.radius = value;\n            }\n            if (type === ProcessBubbleType.opacity) {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n          if (type === ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      }\n    };\n    this._singleSelectorHover = (delta, selector, div) => {\n      const container = this.container,\n        selectors = document.querySelectorAll(selector),\n        bubble = container.actualOptions.interactivity.modes.bubble;\n      if (!bubble || !selectors.length) {\n        return;\n      }\n      selectors.forEach(item => {\n        const elem = item,\n          pxRatio = container.retina.pixelRatio,\n          pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio\n          },\n          repulseRadius = elem.offsetWidth * half * pxRatio,\n          area = div.type === DivType.circle ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n          query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n        for (const particle of query) {\n          if (!area.contains(particle.getPosition())) {\n            continue;\n          }\n          particle.bubble.inRange = true;\n          const divs = bubble.divs,\n            divBubble = divMode(divs, elem);\n          if (!particle.bubble.div || particle.bubble.div !== elem) {\n            this.clear(particle, delta, true);\n            particle.bubble.div = elem;\n          }\n          this._hoverBubbleSize(particle, defaultRatio, divBubble);\n          this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n          this._hoverBubbleColor(particle, defaultRatio, divBubble);\n        }\n      });\n    };\n    this._engine = engine;\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n    this.handleClickMode = mode => {\n      if (mode !== bubbleMode) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      container.bubble.clicking = true;\n    };\n  }\n  clear(particle, delta, force) {\n    if (particle.bubble.inRange && !force) {\n      return;\n    }\n    delete particle.bubble.div;\n    delete particle.bubble.opacity;\n    delete particle.bubble.radius;\n    delete particle.bubble.color;\n  }\n  init() {\n    const container = this.container,\n      bubble = container.actualOptions.interactivity.modes.bubble;\n    if (!bubble) {\n      return;\n    }\n    container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n    if (bubble.size !== undefined) {\n      container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n    }\n  }\n  interact(delta) {\n    const options = this.container.actualOptions,\n      events = options.interactivity.events,\n      onHover = events.onHover,\n      onClick = events.onClick,\n      hoverEnabled = onHover.enable,\n      hoverMode = onHover.mode,\n      clickEnabled = onClick.enable,\n      clickMode = onClick.mode,\n      divs = events.onDiv;\n    if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n      this._hoverBubble();\n    } else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n      this._clickBubble();\n    } else {\n      divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? options.interactivity).events,\n      {\n        onClick,\n        onDiv,\n        onHover\n      } = events,\n      divBubble = isDivModeEnabled(bubbleMode, onDiv);\n    if (!(divBubble || onHover.enable && !!mouse.position || onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n    return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.bubble) {\n      options.bubble = new Bubble();\n    }\n    for (const source of sources) {\n      options.bubble.load(source?.bubble);\n    }\n  }\n  reset(particle) {\n    particle.bubble.inRange = false;\n  }\n}", "import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalBubble\", container => {\n    return Promise.resolve(new Bubbler(container, engine));\n  }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";", "import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n  constructor() {\n    this.opacity = 0.5;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n  constructor() {\n    this.distance = 80;\n    this.links = new ConnectLinks();\n    this.radius = 60;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n    this.links.load(data.links);\n    if (data.radius !== undefined) {\n      this.radius = data.radius;\n    }\n  }\n}", "import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb } from \"@tsparticles/engine\";\nconst gradientMin = 0,\n  gradientMax = 1,\n  defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n  const gradStop = Math.floor(p2.getRadius() / p1.getRadius()),\n    color1 = p1.getFillColor(),\n    color2 = p2.getFillColor();\n  if (!color1 || !color2) {\n    return;\n  }\n  const sourcePos = p1.getPosition(),\n    destPos = p2.getPosition(),\n    midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()),\n    grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n  grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n  grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n  return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n  drawLine(context, begin, end);\n  context.lineWidth = width;\n  context.strokeStyle = lineStyle;\n  context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n  const options = container.actualOptions,\n    connectOptions = options.interactivity.modes.connect;\n  if (!connectOptions) {\n    return;\n  }\n  return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n  container.canvas.draw(ctx => {\n    const ls = lineStyle(container, ctx, p1, p2);\n    if (!ls) {\n      return;\n    }\n    const pos1 = p1.getPosition(),\n      pos2 = p2.getPosition();\n    drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n  });\n}", "import { ExternalInteractorBase, isInArray } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\",\n  minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      connect = container.actualOptions.interactivity.modes.connect;\n    if (!connect) {\n      return;\n    }\n    container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n    container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n  }\n  interact() {\n    const container = this.container,\n      options = container.actualOptions;\n    if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n      const mousePos = container.interactivity.mouse.position,\n        {\n          connectModeDistance,\n          connectModeRadius\n        } = container.retina;\n      if (!connectModeDistance || connectModeDistance < minDistance || !connectModeRadius || connectModeRadius < minDistance || !mousePos) {\n        return;\n      }\n      const distance = Math.abs(connectModeRadius),\n        query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n      query.forEach((p1, i) => {\n        const pos1 = p1.getPosition(),\n          indexOffset = 1;\n        for (const p2 of query.slice(i + indexOffset)) {\n          const pos2 = p2.getPosition(),\n            distMax = Math.abs(connectModeDistance),\n            xDiff = Math.abs(pos1.x - pos2.x),\n            yDiff = Math.abs(pos1.y - pos2.y);\n          if (xDiff < distMax && yDiff < distMax) {\n            drawConnection(container, p1, p2);\n          }\n        }\n      });\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n    return isInArray(connectMode, events.onHover.mode);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.connect) {\n      options.connect = new Connect();\n    }\n    for (const source of sources) {\n      options.connect.load(source?.connect);\n    }\n  }\n  reset() {}\n}", "import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalConnect\", container => {\n    return Promise.resolve(new Connector(container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n  constructor() {\n    this.blink = false;\n    this.consent = false;\n    this.opacity = 1;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.blink !== undefined) {\n      this.blink = data.blink;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.consent !== undefined) {\n      this.consent = data.consent;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n  constructor() {\n    this.distance = 100;\n    this.links = new GrabLinks();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n    this.links.load(data.links);\n  }\n}", "import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n  drawLine(context, begin, end);\n  context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n  context.lineWidth = width;\n  context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n  container.canvas.draw(ctx => {\n    const beginPos = particle.getPosition();\n    drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n  });\n}", "import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\",\n  minDistance = 0,\n  minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n  constructor(container, engine) {\n    super(container);\n    this._engine = engine;\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      grab = container.actualOptions.interactivity.modes.grab;\n    if (!grab) {\n      return;\n    }\n    container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n  }\n  interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      interactivity = options.interactivity;\n    if (!interactivity.modes.grab || !interactivity.events.onHover.enable || container.interactivity.status !== mouseMoveEvent) {\n      return;\n    }\n    const mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const distance = container.retina.grabModeDistance;\n    if (!distance || distance < minDistance) {\n      return;\n    }\n    const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n    for (const particle of query) {\n      const pos = particle.getPosition(),\n        pointDistance = getDistance(pos, mousePos);\n      if (pointDistance > distance) {\n        continue;\n      }\n      const grabLineOptions = interactivity.modes.grab.links,\n        lineOpacity = grabLineOptions.opacity,\n        opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n      if (opacityLine <= minOpacity) {\n        continue;\n      }\n      const optColor = grabLineOptions.color ?? particle.options.links?.color;\n      if (!container.particles.grabLineColor && optColor) {\n        const linksOptions = interactivity.modes.grab.links;\n        container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n      }\n      const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n      if (!colorLine) {\n        continue;\n      }\n      drawGrab(container, particle, colorLine, opacityLine, mousePos);\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.grab) {\n      options.grab = new Grab();\n    }\n    for (const source of sources) {\n      options.grab.load(source?.grab);\n    }\n  }\n  reset() {}\n}", "import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalGrab\", container => {\n    return Promise.resolve(new Grabber(container, engine));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";", "import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      if (mode !== pauseMode) {\n        return;\n      }\n      const container = this.container;\n      if (container.animationStatus) {\n        container.pause();\n      } else {\n        container.play();\n      }\n    };\n  }\n  clear() {}\n  init() {}\n  interact() {}\n  isEnabled() {\n    return true;\n  }\n  reset() {}\n}", "import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalPause\", container => {\n    return Promise.resolve(new Pauser(container));\n  }, refresh);\n}", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n  constructor() {\n    this.default = true;\n    this.groups = [];\n    this.quantity = 4;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.default !== undefined) {\n      this.default = data.default;\n    }\n    if (data.groups !== undefined) {\n      this.groups = data.groups.map(t => t);\n    }\n    if (!this.groups.length) {\n      this.default = true;\n    }\n    const quantity = data.quantity;\n    if (quantity !== undefined) {\n      this.quantity = setRangeValue(quantity);\n    }\n  }\n}", "import { ExternalInteractorBase, getRangeValue, itemFromArray } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\",\n  minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      if (mode !== pushMode) {\n        return;\n      }\n      const container = this.container,\n        options = container.actualOptions,\n        pushOptions = options.interactivity.modes.push;\n      if (!pushOptions) {\n        return;\n      }\n      const quantity = getRangeValue(pushOptions.quantity);\n      if (quantity <= minQuantity) {\n        return;\n      }\n      const group = itemFromArray([undefined, ...pushOptions.groups]),\n        groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n      void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n    };\n  }\n  clear() {}\n  init() {}\n  interact() {}\n  isEnabled() {\n    return true;\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.push) {\n      options.push = new Push();\n    }\n    for (const source of sources) {\n      options.push.load(source?.push);\n    }\n  }\n  reset() {}\n}", "import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalPush\", container => {\n    return Promise.resolve(new Pusher(container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n  constructor() {\n    this.quantity = 2;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    const quantity = data.quantity;\n    if (quantity !== undefined) {\n      this.quantity = setRangeValue(quantity);\n    }\n  }\n}", "import { ExternalInteractorBase, getRangeValue } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      const container = this.container,\n        options = container.actualOptions;\n      if (!options.interactivity.modes.remove || mode !== removeMode) {\n        return;\n      }\n      const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n      container.particles.removeQuantity(removeNb);\n    };\n  }\n  clear() {}\n  init() {}\n  interact() {}\n  isEnabled() {\n    return true;\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.remove) {\n      options.remove = new Remove();\n    }\n    for (const source of sources) {\n      options.remove.load(source?.remove);\n    }\n  }\n  reset() {}\n}", "import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalRemove\", container => {\n    return Promise.resolve(new Remover(container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";", "import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n  constructor() {\n    this.distance = 200;\n    this.duration = 0.4;\n    this.factor = 100;\n    this.speed = 1;\n    this.maxSpeed = 50;\n    this.easing = EasingType.easeOutQuad;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n    if (data.duration !== undefined) {\n      this.duration = data.duration;\n    }\n    if (data.easing !== undefined) {\n      this.easing = data.easing;\n    }\n    if (data.factor !== undefined) {\n      this.factor = data.factor;\n    }\n    if (data.speed !== undefined) {\n      this.speed = data.speed;\n    }\n    if (data.maxSpeed !== undefined) {\n      this.maxSpeed = data.maxSpeed;\n    }\n  }\n}", "import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n  constructor() {\n    super();\n    this.selectors = [];\n  }\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    if (data.selectors !== undefined) {\n      this.selectors = data.selectors;\n    }\n  }\n}", "import { executeOnSingleOrMultiple, isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n  load(data) {\n    super.load(data);\n    if (isNull(data)) {\n      return;\n    }\n    this.divs = executeOnSingleOrMultiple(data.divs, div => {\n      const tmp = new RepulseDiv();\n      tmp.load(div);\n      return tmp;\n    });\n  }\n}", "import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\",\n  minDistance = 0,\n  repulseRadiusFactor = 6,\n  repulseRadiusPower = 3,\n  squarePower = 2,\n  minRadius = 0,\n  minSpeed = 0,\n  easingOffset = 1,\n  half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n  constructor(engine, container) {\n    super(container);\n    this._clickRepulse = () => {\n      const container = this.container,\n        repulseOptions = container.actualOptions.interactivity.modes.repulse;\n      if (!repulseOptions) {\n        return;\n      }\n      const repulse = container.repulse ?? {\n        particles: []\n      };\n      if (!repulse.finish) {\n        if (!repulse.count) {\n          repulse.count = 0;\n        }\n        repulse.count++;\n        if (repulse.count === container.particles.count) {\n          repulse.finish = true;\n        }\n      }\n      if (repulse.clicking) {\n        const repulseDistance = container.retina.repulseModeDistance;\n        if (!repulseDistance || repulseDistance < minDistance) {\n          return;\n        }\n        const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower),\n          mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n          return;\n        }\n        const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n          query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n        for (const particle of query) {\n          const {\n              dx,\n              dy,\n              distance\n            } = getDistances(mouseClickPos, particle.position),\n            d = distance ** squarePower,\n            velocity = repulseOptions.speed,\n            force = -repulseRadius * velocity / d;\n          if (d <= repulseRadius) {\n            repulse.particles.push(particle);\n            const vect = Vector.create(dx, dy);\n            vect.length = force;\n            particle.velocity.setTo(vect);\n          }\n        }\n      } else if (repulse.clicking === false) {\n        for (const particle of repulse.particles) {\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n        repulse.particles = [];\n      }\n    };\n    this._hoverRepulse = () => {\n      const container = this.container,\n        mousePos = container.interactivity.mouse.position,\n        repulseRadius = container.retina.repulseModeDistance;\n      if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n        return;\n      }\n      this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    };\n    this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n      const container = this.container,\n        query = container.particles.quadTree.query(area, p => this.isEnabled(p)),\n        repulseOptions = container.actualOptions.interactivity.modes.repulse;\n      if (!repulseOptions) {\n        return;\n      }\n      const {\n          easing,\n          speed,\n          factor,\n          maxSpeed\n        } = repulseOptions,\n        easingFunc = this._engine.getEasing(easing),\n        velocity = (divRepulse?.speed ?? speed) * factor;\n      for (const particle of query) {\n        const {\n            dx,\n            dy,\n            distance\n          } = getDistances(particle.position, position),\n          repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed),\n          normVec = Vector.create(!distance ? velocity : dx / distance * repulseFactor, !distance ? velocity : dy / distance * repulseFactor);\n        particle.position.addTo(normVec);\n      }\n    };\n    this._singleSelectorRepulse = (selector, div) => {\n      const container = this.container,\n        repulse = container.actualOptions.interactivity.modes.repulse;\n      if (!repulse) {\n        return;\n      }\n      const query = document.querySelectorAll(selector);\n      if (!query.length) {\n        return;\n      }\n      query.forEach(item => {\n        const elem = item,\n          pxRatio = container.retina.pixelRatio,\n          pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio\n          },\n          repulseRadius = elem.offsetWidth * half * pxRatio,\n          area = div.type === DivType.circle ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n          divs = repulse.divs,\n          divRepulse = divMode(divs, elem);\n        this._processRepulse(pos, repulseRadius, area, divRepulse);\n      });\n    };\n    this._engine = engine;\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions,\n        repulseOpts = options.interactivity.modes.repulse;\n      if (!repulseOpts || mode !== repulseMode) {\n        return;\n      }\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n      const repulse = container.repulse;\n      repulse.clicking = true;\n      repulse.count = 0;\n      for (const particle of container.repulse.particles) {\n        if (!this.isEnabled(particle)) {\n          continue;\n        }\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      repulse.particles = [];\n      repulse.finish = false;\n      setTimeout(() => {\n        if (container.destroyed) {\n          return;\n        }\n        repulse.clicking = false;\n      }, repulseOpts.duration * millisecondsToSeconds);\n    };\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      repulse = container.actualOptions.interactivity.modes.repulse;\n    if (!repulse) {\n      return;\n    }\n    container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n  }\n  interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n      events = options.interactivity.events,\n      hover = events.onHover,\n      hoverEnabled = hover.enable,\n      hoverMode = hover.mode,\n      click = events.onClick,\n      clickEnabled = click.enable,\n      clickMode = click.mode,\n      divs = events.onDiv;\n    if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n      this._hoverRepulse();\n    } else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n      this._clickRepulse();\n    } else {\n      divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n    }\n  }\n  isEnabled(particle) {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? options.interactivity).events,\n      divs = events.onDiv,\n      hover = events.onHover,\n      click = events.onClick,\n      divRepulse = isDivModeEnabled(repulseMode, divs);\n    if (!(divRepulse || hover.enable && !!mouse.position || click.enable && mouse.clickPosition)) {\n      return false;\n    }\n    const hoverMode = hover.mode,\n      clickMode = click.mode;\n    return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.repulse) {\n      options.repulse = new Repulse();\n    }\n    for (const source of sources) {\n      options.repulse.load(source?.repulse);\n    }\n  }\n  reset() {}\n}", "import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalRepulse\", container => {\n    return Promise.resolve(new Repulser(engine, container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";", "import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n  constructor() {\n    this.factor = 3;\n    this.radius = 200;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.factor !== undefined) {\n      this.factor = data.factor;\n    }\n    if (data.radius !== undefined) {\n      this.radius = data.radius;\n    }\n  }\n}", "import { ExternalInteractorBase, getDistance, isInArray } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\",\n  minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear(particle, delta, force) {\n    if (particle.slow.inRange && !force) {\n      return;\n    }\n    particle.slow.factor = 1;\n  }\n  init() {\n    const container = this.container,\n      slow = container.actualOptions.interactivity.modes.slow;\n    if (!slow) {\n      return;\n    }\n    container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n  }\n  interact() {}\n  isEnabled(particle) {\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n  }\n  loadModeOptions(options, ...sources) {\n    if (!options.slow) {\n      options.slow = new Slow();\n    }\n    for (const source of sources) {\n      options.slow.load(source?.slow);\n    }\n  }\n  reset(particle) {\n    particle.slow.inRange = false;\n    const container = this.container,\n      options = container.actualOptions,\n      mousePos = container.interactivity.mouse.position,\n      radius = container.retina.slowModeRadius,\n      slowOptions = options.interactivity.modes.slow;\n    if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n      return;\n    }\n    const particlePos = particle.getPosition(),\n      dist = getDistance(mousePos, particlePos),\n      proximityFactor = dist / radius,\n      slowFactor = slowOptions.factor,\n      {\n        slow\n      } = particle;\n    if (dist > radius) {\n      return;\n    }\n    slow.inRange = true;\n    slow.factor = proximityFactor / slowFactor;\n  }\n}", "import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"externalSlow\", container => {\n    return Promise.resolve(new Slower(container));\n  }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";", "import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0,\n  defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  const {\n    svgData\n  } = imageShape;\n  if (!svgData) {\n    return \"\";\n  }\n  const colorStyle = getStyleFromHsl(color, opacity);\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, () => colorStyle);\n  }\n  const preFillIndex = svgData.indexOf(\">\");\n  return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n  return new Promise(resolve => {\n    image.loading = true;\n    const img = new Image();\n    image.element = img;\n    img.addEventListener(\"load\", () => {\n      image.loading = false;\n      resolve();\n    });\n    img.addEventListener(\"error\", () => {\n      image.element = undefined;\n      image.error = true;\n      image.loading = false;\n      getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n      resolve();\n    });\n    img.src = image.source;\n  });\n}\nexport async function downloadSvgImage(image) {\n  if (image.type !== \"svg\") {\n    await loadImage(image);\n    return;\n  }\n  image.loading = true;\n  const response = await fetch(image.source);\n  if (!response.ok) {\n    getLogger().error(`${errorPrefix} Image not found`);\n    image.error = true;\n  } else {\n    image.svgData = await response.text();\n  }\n  image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n  const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity),\n    imageRes = {\n      color,\n      gif: imageData.gif,\n      data: {\n        ...image,\n        svgData: svgColoredData\n      },\n      loaded: false,\n      ratio: imageData.width / imageData.height,\n      replaceColor: imageData.replaceColor,\n      source: imageData.src\n    };\n  return new Promise(resolve => {\n    const svg = new Blob([svgColoredData], {\n        type: \"image/svg+xml\"\n      }),\n      domUrl = URL || window.URL || window.webkitURL || window,\n      url = domUrl.createObjectURL(svg),\n      img = new Image();\n    img.addEventListener(\"load\", () => {\n      imageRes.loaded = true;\n      imageRes.element = img;\n      resolve(imageRes);\n      domUrl.revokeObjectURL(url);\n    });\n    const errorHandler = async () => {\n      domUrl.revokeObjectURL(url);\n      const img2 = {\n        ...image,\n        error: false,\n        loading: true\n      };\n      await loadImage(img2);\n      imageRes.loaded = true;\n      imageRes.element = img2.element;\n      resolve(imageRes);\n    };\n    img.addEventListener(\"error\", () => void errorHandler());\n    img.src = url;\n  });\n}", "export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];", "export class ByteStream {\n  constructor(bytes) {\n    this.pos = 0;\n    this.data = new Uint8ClampedArray(bytes);\n  }\n  getString(count) {\n    const slice = this.data.slice(this.pos, this.pos + count);\n    this.pos += slice.length;\n    return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n  }\n  nextByte() {\n    return this.data[this.pos++];\n  }\n  nextTwoBytes() {\n    const increment = 2,\n      previous = 1,\n      shift = 8;\n    this.pos += increment;\n    return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n  }\n  readSubBlocks() {\n    let blockString = \"\",\n      size = 0;\n    const minCount = 0,\n      emptySize = 0;\n    do {\n      size = this.data[this.pos++];\n      for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {}\n    } while (size !== emptySize);\n    return blockString;\n  }\n  readSubBlocksBin() {\n    let size = this.data[this.pos],\n      len = 0;\n    const emptySize = 0,\n      increment = 1;\n    for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n      len += size;\n    }\n    const blockData = new Uint8Array(len);\n    size = this.data[this.pos++];\n    for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n      for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {}\n    }\n    return blockData;\n  }\n  skipSubBlocks() {\n    for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {}\n    this.pos++;\n  }\n}", "export var DisposalMethod;\n(function (DisposalMethod) {\n  DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n  DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n  DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n  DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n  DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n  DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n  DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n  DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));", "export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n  GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n  GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n  GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n  GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n  GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n  GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n  GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));", "import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0\n  },\n  defaultFrame = 0,\n  half = 0.5,\n  initialTime = 0,\n  firstIndex = 0,\n  defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n  const colors = [];\n  for (let i = 0; i < count; i++) {\n    colors.push({\n      r: byteStream.data[byteStream.pos],\n      g: byteStream.data[byteStream.pos + 1],\n      b: byteStream.data[byteStream.pos + 2]\n    });\n    byteStream.pos += 3;\n  }\n  return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n  switch (byteStream.nextByte()) {\n    case GIFDataHeaders.GraphicsControlExtension:\n      {\n        const frame = gif.frames[getFrameIndex(false)];\n        byteStream.pos++;\n        const packedByte = byteStream.nextByte();\n        frame.GCreserved = (packedByte & 0xe0) >>> 5;\n        frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n        frame.userInputDelayFlag = (packedByte & 2) === 2;\n        const transparencyFlag = (packedByte & 1) === 1;\n        frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n        const transparencyIndex = byteStream.nextByte();\n        if (transparencyFlag) {\n          getTransparencyIndex(transparencyIndex);\n        }\n        byteStream.pos++;\n        break;\n      }\n    case GIFDataHeaders.ApplicationExtension:\n      {\n        byteStream.pos++;\n        const applicationExtension = {\n          identifier: byteStream.getString(8),\n          authenticationCode: byteStream.getString(3),\n          data: byteStream.readSubBlocksBin()\n        };\n        gif.applicationExtensions.push(applicationExtension);\n        break;\n      }\n    case GIFDataHeaders.CommentExtension:\n      {\n        gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n        break;\n      }\n    case GIFDataHeaders.PlainTextExtension:\n      {\n        if (gif.globalColorTable.length === 0) {\n          throw new EvalError(\"plain text extension without global color table\");\n        }\n        byteStream.pos++;\n        gif.frames[getFrameIndex(false)].plainTextData = {\n          left: byteStream.nextTwoBytes(),\n          top: byteStream.nextTwoBytes(),\n          width: byteStream.nextTwoBytes(),\n          height: byteStream.nextTwoBytes(),\n          charSize: {\n            width: byteStream.nextTwoBytes(),\n            height: byteStream.nextTwoBytes()\n          },\n          foregroundColor: byteStream.nextByte(),\n          backgroundColor: byteStream.nextByte(),\n          text: byteStream.readSubBlocks()\n        };\n        break;\n      }\n    default:\n      byteStream.skipSubBlocks();\n      break;\n  }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n  const frame = gif.frames[getFrameIndex(true)];\n  frame.left = byteStream.nextTwoBytes();\n  frame.top = byteStream.nextTwoBytes();\n  frame.width = byteStream.nextTwoBytes();\n  frame.height = byteStream.nextTwoBytes();\n  const packedByte = byteStream.nextByte(),\n    localColorTableFlag = (packedByte & 0x80) === 0x80,\n    interlacedFlag = (packedByte & 0x40) === 0x40;\n  frame.sortFlag = (packedByte & 0x20) === 0x20;\n  frame.reserved = (packedByte & 0x18) >>> 3;\n  const localColorCount = 1 << (packedByte & 7) + 1;\n  if (localColorTableFlag) {\n    frame.localColorTable = parseColorTable(byteStream, localColorCount);\n  }\n  const getColor = index => {\n    const {\n      r,\n      g,\n      b\n    } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n    if (index !== getTransparencyIndex(null)) {\n      return {\n        r,\n        g,\n        b,\n        a: 255\n      };\n    }\n    return {\n      r,\n      g,\n      b,\n      a: avgAlpha ? ~~((r + g + b) / 3) : 0\n    };\n  };\n  const image = (() => {\n    try {\n      return new ImageData(frame.width, frame.height, {\n        colorSpace: \"srgb\"\n      });\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n        return null;\n      }\n      throw error;\n    }\n  })();\n  if (image == null) {\n    throw new EvalError(\"GIF frame size is to large\");\n  }\n  const minCodeSize = byteStream.nextByte(),\n    imageData = byteStream.readSubBlocksBin(),\n    clearCode = 1 << minCodeSize;\n  const readBits = (pos, len) => {\n    const bytePos = pos >>> 3,\n      bitPos = pos & 7;\n    return (imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16) & (1 << len) - 1 << bitPos) >>> bitPos;\n  };\n  if (interlacedFlag) {\n    for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n      if (InterlaceOffsets[pass] < frame.height) {\n        let pixelPos = 0,\n          lineIndex = 0,\n          exit = false;\n        while (!exit) {\n          const last = code;\n          code = readBits(pos, size);\n          pos += size + 1;\n          if (code === clearCode) {\n            size = minCodeSize + 1;\n            dic.length = clearCode + 2;\n            for (let i = 0; i < dic.length; i++) {\n              dic[i] = i < clearCode ? [i] : [];\n            }\n          } else {\n            if (code >= dic.length) {\n              dic.push(dic[last].concat(dic[last][0]));\n            } else if (last !== clearCode) {\n              dic.push(dic[last].concat(dic[code][0]));\n            }\n            for (const item of dic[code]) {\n              const {\n                r,\n                g,\n                b,\n                a\n              } = getColor(item);\n              image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width + InterlaceSteps[pass] * lineIndex + pixelPos % (frame.width * 4));\n              pixelPos += 4;\n            }\n            if (dic.length === 1 << size && size < 0xc) {\n              size++;\n            }\n          }\n          if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n            lineIndex++;\n            if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n              exit = true;\n            }\n          }\n        }\n      }\n      progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, {\n        x: frame.left,\n        y: frame.top\n      }, {\n        width: gif.width,\n        height: gif.height\n      });\n    }\n    frame.image = image;\n    frame.bitmap = await createImageBitmap(image);\n  } else {\n    let code = 0,\n      size = minCodeSize + 1,\n      pos = 0,\n      pixelPos = -4,\n      exit = false;\n    const dic = [[0]];\n    while (!exit) {\n      const last = code;\n      code = readBits(pos, size);\n      pos += size;\n      if (code === clearCode) {\n        size = minCodeSize + 1;\n        dic.length = clearCode + 2;\n        for (let i = 0; i < dic.length; i++) {\n          dic[i] = i < clearCode ? [i] : [];\n        }\n      } else {\n        if (code === clearCode + 1) {\n          exit = true;\n          break;\n        }\n        if (code >= dic.length) {\n          dic.push(dic[last].concat(dic[last][0]));\n        } else if (last !== clearCode) {\n          dic.push(dic[last].concat(dic[code][0]));\n        }\n        for (const item of dic[code]) {\n          const {\n            r,\n            g,\n            b,\n            a\n          } = getColor(item);\n          image.data.set([r, g, b, a], pixelPos += 4);\n        }\n        if (dic.length >= 1 << size && size < 0xc) {\n          size++;\n        }\n      }\n    }\n    frame.image = image;\n    frame.bitmap = await createImageBitmap(image);\n    progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, {\n      x: frame.left,\n      y: frame.top\n    }, {\n      width: gif.width,\n      height: gif.height\n    });\n  }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n  switch (byteStream.nextByte()) {\n    case GIFDataHeaders.EndOfFile:\n      return true;\n    case GIFDataHeaders.Image:\n      await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n      break;\n    case GIFDataHeaders.Extension:\n      parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n      break;\n    default:\n      throw new EvalError(\"undefined block found\");\n  }\n  return false;\n}\nexport function getGIFLoopAmount(gif) {\n  for (const extension of gif.applicationExtensions) {\n    if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n      continue;\n    }\n    return extension.data[1] + (extension.data[2] << 8);\n  }\n  return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n  if (!avgAlpha) avgAlpha = false;\n  const res = await fetch(gifURL);\n  if (!res.ok && res.status === 404) {\n    throw new EvalError(\"file not found\");\n  }\n  const buffer = await res.arrayBuffer();\n  const gif = {\n      width: 0,\n      height: 0,\n      totalTime: 0,\n      colorRes: 0,\n      pixelAspectRatio: 0,\n      frames: [],\n      sortFlag: false,\n      globalColorTable: [],\n      backgroundImage: new ImageData(1, 1, {\n        colorSpace: \"srgb\"\n      }),\n      comments: [],\n      applicationExtensions: []\n    },\n    byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n  if (byteStream.getString(6) !== \"GIF89a\") {\n    throw new Error(\"not a supported GIF file\");\n  }\n  gif.width = byteStream.nextTwoBytes();\n  gif.height = byteStream.nextTwoBytes();\n  const packedByte = byteStream.nextByte(),\n    globalColorTableFlag = (packedByte & 0x80) === 0x80;\n  gif.colorRes = (packedByte & 0x70) >>> 4;\n  gif.sortFlag = (packedByte & 8) === 8;\n  const globalColorCount = 1 << (packedByte & 7) + 1,\n    backgroundColorIndex = byteStream.nextByte();\n  gif.pixelAspectRatio = byteStream.nextByte();\n  if (gif.pixelAspectRatio !== 0) {\n    gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n  }\n  if (globalColorTableFlag) {\n    gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n  }\n  const backgroundImage = (() => {\n    try {\n      return new ImageData(gif.width, gif.height, {\n        colorSpace: \"srgb\"\n      });\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n        return null;\n      }\n      throw error;\n    }\n  })();\n  if (backgroundImage == null) {\n    throw new Error(\"GIF frame size is to large\");\n  }\n  const {\n    r,\n    g,\n    b\n  } = gif.globalColorTable[backgroundColorIndex];\n  backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n  for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n    backgroundImage.data.copyWithin(i, 0, i);\n  }\n  gif.backgroundImage = backgroundImage;\n  let frameIndex = -1,\n    incrementFrameIndex = true,\n    transparencyIndex = -1;\n  const getframeIndex = increment => {\n    if (increment) {\n      incrementFrameIndex = true;\n    }\n    return frameIndex;\n  };\n  const getTransparencyIndex = newValue => {\n    if (newValue != null) {\n      transparencyIndex = newValue;\n    }\n    return transparencyIndex;\n  };\n  try {\n    do {\n      if (incrementFrameIndex) {\n        gif.frames.push({\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0,\n          disposalMethod: DisposalMethod.Replace,\n          image: new ImageData(1, 1, {\n            colorSpace: \"srgb\"\n          }),\n          plainTextData: null,\n          userInputDelayFlag: false,\n          delayTime: 0,\n          sortFlag: false,\n          localColorTable: [],\n          reserved: 0,\n          GCreserved: 0\n        });\n        frameIndex++;\n        transparencyIndex = -1;\n        incrementFrameIndex = false;\n      }\n    } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n    gif.frames.length--;\n    for (const frame of gif.frames) {\n      if (frame.userInputDelayFlag && frame.delayTime === 0) {\n        gif.totalTime = Infinity;\n        break;\n      }\n      gif.totalTime += frame.delayTime;\n    }\n    return gif;\n  } catch (error) {\n    if (error instanceof EvalError) {\n      throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n    }\n    throw error;\n  }\n}\nexport function drawGif(data) {\n  const {\n      context,\n      radius,\n      particle,\n      delta\n    } = data,\n    image = particle.image;\n  if (!image?.gifData || !image.gif) {\n    return;\n  }\n  const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height),\n    offscreenContext = offscreenCanvas.getContext(\"2d\");\n  if (!offscreenContext) {\n    throw new Error(\"could not create offscreen canvas context\");\n  }\n  offscreenContext.imageSmoothingQuality = \"low\";\n  offscreenContext.imageSmoothingEnabled = false;\n  offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n  if (particle.gifLoopCount === undefined) {\n    particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n  }\n  let frameIndex = particle.gifFrame ?? defaultFrame;\n  const pos = {\n      x: -image.gifData.width * half,\n      y: -image.gifData.height * half\n    },\n    frame = image.gifData.frames[frameIndex];\n  if (particle.gifTime === undefined) {\n    particle.gifTime = initialTime;\n  }\n  if (!frame.bitmap) {\n    return;\n  }\n  context.scale(radius / image.gifData.width, radius / image.gifData.height);\n  switch (frame.disposalMethod) {\n    case DisposalMethod.UndefinedA:\n    case DisposalMethod.UndefinedB:\n    case DisposalMethod.UndefinedC:\n    case DisposalMethod.UndefinedD:\n    case DisposalMethod.Replace:\n      offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n      context.drawImage(offscreenCanvas, pos.x, pos.y);\n      offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n      break;\n    case DisposalMethod.Combine:\n      offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n      context.drawImage(offscreenCanvas, pos.x, pos.y);\n      break;\n    case DisposalMethod.RestoreBackground:\n      offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n      context.drawImage(offscreenCanvas, pos.x, pos.y);\n      offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n      if (!image.gifData.globalColorTable.length) {\n        offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n      } else {\n        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n      }\n      break;\n    case DisposalMethod.RestorePrevious:\n      {\n        const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n        context.drawImage(offscreenCanvas, pos.x, pos.y);\n        offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n      }\n      break;\n  }\n  particle.gifTime += delta.value;\n  if (particle.gifTime > frame.delayTime) {\n    particle.gifTime -= frame.delayTime;\n    if (++frameIndex >= image.gifData.frames.length) {\n      if (--particle.gifLoopCount <= defaultLoopCount) {\n        return;\n      }\n      frameIndex = firstIndex;\n      offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    }\n    particle.gifFrame = frameIndex;\n  }\n  context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n  if (image.type !== \"gif\") {\n    await loadImage(image);\n    return;\n  }\n  image.loading = true;\n  try {\n    image.gifData = await decodeGIF(image.source);\n    image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n    if (!image.gifLoopCount) {\n      image.gifLoopCount = Infinity;\n    }\n  } catch {\n    image.error = true;\n  }\n  image.loading = false;\n}", "import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2,\n  defaultAlpha = 1,\n  sides = 12,\n  defaultRatio = 1;\nexport class ImageDrawer {\n  constructor(engine) {\n    this.validTypes = [\"image\", \"images\"];\n    this.loadImageShape = async imageShape => {\n      if (!this._engine.loadImage) {\n        throw new Error(`${errorPrefix} image shape not initialized`);\n      }\n      await this._engine.loadImage({\n        gif: imageShape.gif,\n        name: imageShape.name,\n        replaceColor: imageShape.replaceColor ?? false,\n        src: imageShape.src\n      });\n    };\n    this._engine = engine;\n  }\n  addImage(image) {\n    if (!this._engine.images) {\n      this._engine.images = [];\n    }\n    this._engine.images.push(image);\n  }\n  draw(data) {\n    const {\n        context,\n        radius,\n        particle,\n        opacity\n      } = data,\n      image = particle.image,\n      element = image?.element;\n    if (!image) {\n      return;\n    }\n    context.globalAlpha = opacity;\n    if (image.gif && image.gifData) {\n      drawGif(data);\n    } else if (element) {\n      const ratio = image.ratio,\n        pos = {\n          x: -radius,\n          y: -radius\n        },\n        diameter = radius * double;\n      context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n    }\n    context.globalAlpha = defaultAlpha;\n  }\n  getSidesCount() {\n    return sides;\n  }\n  async init(container) {\n    const options = container.actualOptions;\n    if (!options.preload || !this._engine.loadImage) {\n      return;\n    }\n    for (const imageData of options.preload) {\n      await this._engine.loadImage(imageData);\n    }\n  }\n  loadShape(particle) {\n    if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n      return;\n    }\n    if (!this._engine.images) {\n      this._engine.images = [];\n    }\n    const imageData = particle.shapeData;\n    if (!imageData) {\n      return;\n    }\n    const image = this._engine.images.find(t => t.name === imageData.name || t.source === imageData.src);\n    if (!image) {\n      void this.loadImageShape(imageData).then(() => {\n        this.loadShape(particle);\n      });\n    }\n  }\n  particleInit(container, particle) {\n    if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n      return;\n    }\n    if (!this._engine.images) {\n      this._engine.images = [];\n    }\n    const images = this._engine.images,\n      imageData = particle.shapeData;\n    if (!imageData) {\n      return;\n    }\n    const color = particle.getFillColor(),\n      image = images.find(t => t.name === imageData.name || t.source === imageData.src);\n    if (!image) {\n      return;\n    }\n    const replaceColor = imageData.replaceColor ?? image.replaceColor;\n    if (image.loading) {\n      setTimeout(() => {\n        this.particleInit(container, particle);\n      });\n      return;\n    }\n    void (async () => {\n      let imageRes;\n      if (image.svgData && color) {\n        imageRes = await replaceImageColor(image, imageData, color, particle);\n      } else {\n        imageRes = {\n          color,\n          data: image,\n          element: image.element,\n          gif: image.gif,\n          gifData: image.gifData,\n          gifLoopCount: image.gifLoopCount,\n          loaded: true,\n          ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? defaultRatio,\n          replaceColor: replaceColor,\n          source: imageData.src\n        };\n      }\n      if (!imageRes.ratio) {\n        imageRes.ratio = 1;\n      }\n      const fill = imageData.fill ?? particle.shapeFill,\n        close = imageData.close ?? particle.shapeClose,\n        imageShape = {\n          image: imageRes,\n          fill,\n          close\n        };\n      particle.image = imageShape.image;\n      particle.shapeFill = imageShape.fill;\n      particle.shapeClose = imageShape.close;\n    })();\n  }\n}", "import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n  constructor() {\n    this.src = \"\";\n    this.gif = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.gif !== undefined) {\n      this.gif = data.gif;\n    }\n    if (data.height !== undefined) {\n      this.height = data.height;\n    }\n    if (data.name !== undefined) {\n      this.name = data.name;\n    }\n    if (data.replaceColor !== undefined) {\n      this.replaceColor = data.replaceColor;\n    }\n    if (data.src !== undefined) {\n      this.src = data.src;\n    }\n    if (data.width !== undefined) {\n      this.width = data.width;\n    }\n  }\n}", "import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n  constructor(engine) {\n    this.id = \"imagePreloader\";\n    this._engine = engine;\n  }\n  async getPlugin() {\n    await Promise.resolve();\n    return {};\n  }\n  loadOptions(options, source) {\n    if (!source?.preload) {\n      return;\n    }\n    if (!options.preload) {\n      options.preload = [];\n    }\n    const preloadOptions = options.preload;\n    for (const item of source.preload) {\n      const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n      if (existing) {\n        existing.load(item);\n      } else {\n        const preload = new Preload();\n        preload.load(item);\n        preloadOptions.push(preload);\n      }\n    }\n  }\n  needsPlugin() {\n    return true;\n  }\n}", "import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n  if (engine.loadImage) {\n    return;\n  }\n  engine.loadImage = async data => {\n    if (!data.name && !data.src) {\n      throw new Error(`${errorPrefix} no image source provided`);\n    }\n    if (!engine.images) {\n      engine.images = [];\n    }\n    if (engine.images.find(t => t.name === data.name || t.source === data.src)) {\n      return;\n    }\n    try {\n      const image = {\n        gif: data.gif ?? false,\n        name: data.name ?? data.src,\n        source: data.src,\n        type: data.src.substring(data.src.length - extLength),\n        error: false,\n        loading: true,\n        replaceColor: data.replaceColor,\n        ratio: data.width && data.height ? data.width / data.height : undefined\n      };\n      engine.images.push(image);\n      let imageFunc;\n      if (data.gif) {\n        imageFunc = loadGifImage;\n      } else {\n        imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n      }\n      await imageFunc(image);\n    } catch {\n      throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n    }\n  };\n}\nexport async function loadImageShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  addLoadImageToEngine(engine);\n  const preloader = new ImagePreloaderPlugin(engine);\n  await engine.addPlugin(preloader, refresh);\n  await engine.addShape(new ImageDrawer(engine), refresh);\n}", "import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n  constructor() {\n    super();\n    this.sync = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    super.load(data);\n    if (data.sync !== undefined) {\n      this.sync = data.sync;\n    }\n  }\n}", "import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n  constructor() {\n    super();\n    this.sync = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    super.load(data);\n    if (data.sync !== undefined) {\n      this.sync = data.sync;\n    }\n  }\n}", "import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n  constructor() {\n    this.count = 0;\n    this.delay = new LifeDelay();\n    this.duration = new LifeDuration();\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.count !== undefined) {\n      this.count = data.count;\n    }\n    this.delay.load(data.delay);\n    this.duration.load(data.duration);\n  }\n}", "import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue } from \"@tsparticles/engine\";\nconst noTime = 0,\n  infiniteValue = -1,\n  noLife = 0,\n  minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n  if (!particle.life) {\n    return;\n  }\n  const life = particle.life;\n  let justSpawned = false;\n  if (particle.spawning) {\n    life.delayTime += delta.value;\n    if (life.delayTime >= particle.life.delay) {\n      justSpawned = true;\n      particle.spawning = false;\n      life.delayTime = noTime;\n      life.time = noTime;\n    } else {\n      return;\n    }\n  }\n  if (life.duration === infiniteValue) {\n    return;\n  }\n  if (particle.spawning) {\n    return;\n  }\n  if (justSpawned) {\n    life.time = noTime;\n  } else {\n    life.time += delta.value;\n  }\n  if (life.time < life.duration) {\n    return;\n  }\n  life.time = noTime;\n  if (particle.life.count > noLife) {\n    particle.life.count--;\n  }\n  if (particle.life.count === noLife) {\n    particle.destroy();\n    return;\n  }\n  const widthRange = setRangeValue(minCanvasSize, canvasSize.width),\n    heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n  particle.position.x = randomInRange(widthRange);\n  particle.position.y = randomInRange(heightRange);\n  particle.spawning = true;\n  life.delayTime = noTime;\n  life.time = noTime;\n  particle.reset();\n  const lifeOptions = particle.options.life;\n  if (lifeOptions) {\n    life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n    life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n  }\n}", "import { getRandom, getRangeValue, millisecondsToSeconds } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0,\n  identity = 1,\n  infiniteValue = -1;\nexport class LifeUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const container = this.container,\n      particlesOptions = particle.options,\n      lifeOptions = particlesOptions.life;\n    if (!lifeOptions) {\n      return;\n    }\n    particle.life = {\n      delay: container.retina.reduceFactor ? getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom()) / container.retina.reduceFactor * millisecondsToSeconds : noTime,\n      delayTime: noTime,\n      duration: container.retina.reduceFactor ? getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom()) / container.retina.reduceFactor * millisecondsToSeconds : noTime,\n      time: noTime,\n      count: lifeOptions.count\n    };\n    if (particle.life.duration <= noTime) {\n      particle.life.duration = infiniteValue;\n    }\n    if (particle.life.count <= noTime) {\n      particle.life.count = infiniteValue;\n    }\n    if (particle.life) {\n      particle.spawning = particle.life.delay > noTime;\n    }\n  }\n  isEnabled(particle) {\n    return !particle.destroyed;\n  }\n  loadOptions(options, ...sources) {\n    if (!options.life) {\n      options.life = new Life();\n    }\n    for (const source of sources) {\n      options.life.load(source?.life);\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle) || !particle.life) {\n      return;\n    }\n    updateLife(particle, delta, this.container.canvas.size);\n  }\n}", "import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"life\", async container => {\n    return Promise.resolve(new LifeUpdater(container));\n  }, refresh);\n}", "export function drawLine(data) {\n  const {\n      context,\n      particle,\n      radius\n    } = data,\n    shapeData = particle.shapeData,\n    centerY = 0;\n  context.moveTo(-radius, centerY);\n  context.lineTo(radius, centerY);\n  context.lineCap = shapeData?.cap ?? \"butt\";\n}", "import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n  constructor() {\n    this.validTypes = [\"line\"];\n  }\n  draw(data) {\n    drawLine(data);\n  }\n  getSidesCount() {\n    return sides;\n  }\n}", "import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new LineDrawer(), refresh);\n}", "import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n  init() {}\n  isEnabled(particle) {\n    return !isSsr() && !particle.destroyed && particle.container.actualOptions.interactivity.events.onHover.parallax.enable;\n  }\n  move(particle) {\n    const container = particle.container,\n      options = container.actualOptions,\n      parallaxOptions = options.interactivity.events.onHover.parallax;\n    if (isSsr() || !parallaxOptions.enable) {\n      return;\n    }\n    const parallaxForce = parallaxOptions.force,\n      mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const canvasSize = container.canvas.size,\n      canvasCenter = {\n        x: canvasSize.width * half,\n        y: canvasSize.height * half\n      },\n      parallaxSmooth = parallaxOptions.smooth,\n      factor = particle.getRadius() / parallaxForce,\n      centerDistance = {\n        x: (mousePos.x - canvasCenter.x) * factor,\n        y: (mousePos.y - canvasCenter.y) * factor\n      },\n      {\n        offset\n      } = particle;\n    offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n    offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n  }\n}", "import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addMover(\"parallax\", () => {\n    return Promise.resolve(new ParallaxMover());\n  }, refresh);\n}", "import { ParticlesInteractorBase, getDistances, getRangeValue } from \"@tsparticles/engine\";\nconst attractFactor = 1000,\n  identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {}\n  interact(p1) {\n    const container = this.container;\n    if (p1.attractDistance === undefined) {\n      p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n    }\n    const distance = p1.attractDistance,\n      pos1 = p1.getPosition(),\n      query = container.particles.quadTree.queryCircle(pos1, distance);\n    for (const p2 of query) {\n      if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n        continue;\n      }\n      const pos2 = p2.getPosition(),\n        {\n          dx,\n          dy\n        } = getDistances(pos1, pos2),\n        rotate = p1.options.move.attract.rotate,\n        ax = dx / (rotate.x * attractFactor),\n        ay = dy / (rotate.y * attractFactor),\n        p1Factor = p2.size.value / p1.size.value,\n        p2Factor = identity / p1Factor;\n      p1.velocity.x -= ax * p1Factor;\n      p1.velocity.y -= ay * p1Factor;\n      p2.velocity.x += ax * p2Factor;\n      p2.velocity.y += ay * p2Factor;\n    }\n  }\n  isEnabled(particle) {\n    return particle.options.move.attract.enable;\n  }\n  reset() {}\n}", "import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"particlesAttract\", container => {\n    return Promise.resolve(new Attractor(container));\n  }, refresh);\n}", "import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5,\n  absorbFactor = 10,\n  minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n  const factor = clamp(p1.options.collisions.absorb.speed * delta.factor / absorbFactor, minAbsorbFactor, r2);\n  p1.size.value += factor * half;\n  p2.size.value -= factor;\n  if (r2 <= pixelRatio) {\n    p2.size.value = 0;\n    p2.destroy();\n  }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n  const r1 = p1.getRadius(),\n    r2 = p2.getRadius();\n  if (r1 === undefined && r2 !== undefined) {\n    p1.destroy();\n  } else if (r1 !== undefined && r2 === undefined) {\n    p2.destroy();\n  } else if (r1 !== undefined && r2 !== undefined) {\n    if (r1 >= r2) {\n      updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n    } else {\n      updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n    }\n  }\n}", "import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = p => {\n  if (p.collisionMaxSpeed === undefined) {\n    p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n  }\n  if (p.velocity.length > p.collisionMaxSpeed) {\n    p.velocity.length = p.collisionMaxSpeed;\n  }\n};\nexport function bounce(p1, p2) {\n  circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n  fixBounceSpeed(p1);\n  fixBounceSpeed(p2);\n}", "import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n  if (!p1.unbreakable && !p2.unbreakable) {\n    bounce(p1, p2);\n  }\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n    deleteP.destroy();\n  }\n}", "import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n  switch (p1.options.collisions.mode) {\n    case CollisionMode.absorb:\n      {\n        absorb(p1, p2, delta, pixelRatio);\n        break;\n      }\n    case CollisionMode.bounce:\n      {\n        bounce(p1, p2);\n        break;\n      }\n    case CollisionMode.destroy:\n      {\n        destroy(p1, p2);\n        break;\n      }\n  }\n}", "import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {}\n  interact(p1, delta) {\n    if (p1.destroyed || p1.spawning) {\n      return;\n    }\n    const container = this.container,\n      pos1 = p1.getPosition(),\n      radius1 = p1.getRadius(),\n      query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n    for (const p2 of query) {\n      if (p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning) {\n        continue;\n      }\n      const pos2 = p2.getPosition(),\n        radius2 = p2.getRadius();\n      if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n        continue;\n      }\n      const dist = getDistance(pos1, pos2),\n        distP = radius1 + radius2;\n      if (dist > distP) {\n        continue;\n      }\n      resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n    }\n  }\n  isEnabled(particle) {\n    return particle.options.collisions.enable;\n  }\n  reset() {}\n}", "import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addInteractor(\"particlesCollisions\", container => {\n    return Promise.resolve(new Collider(container));\n  }, refresh);\n}", "import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n  constructor(x, y, radius, canvasSize) {\n    super(x, y, radius);\n    this.canvasSize = canvasSize;\n    this.canvasSize = {\n      ...canvasSize\n    };\n  }\n  contains(point) {\n    const {\n        width,\n        height\n      } = this.canvasSize,\n      {\n        x,\n        y\n      } = point;\n    return super.contains(point) || super.contains({\n      x: x - width,\n      y\n    }) || super.contains({\n      x: x - width,\n      y: y - height\n    }) || super.contains({\n      x,\n      y: y - height\n    });\n  }\n  intersects(range) {\n    if (super.intersects(range)) {\n      return true;\n    }\n    const rect = range,\n      circle = range,\n      newPos = {\n        x: range.position.x - this.canvasSize.width,\n        y: range.position.y - this.canvasSize.height\n      };\n    if (circle.radius !== undefined) {\n      const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n      return super.intersects(biggerCircle);\n    } else if (rect.size !== undefined) {\n      const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n      return super.intersects(rectSW);\n    }\n    return false;\n  }\n}", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n  constructor() {\n    this.blur = 5;\n    this.color = new OptionsColor();\n    this.color.value = \"#000\";\n    this.enable = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.blur !== undefined) {\n      this.blur = data.blur;\n    }\n    this.color = OptionsColor.create(this.color, data.color);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n  }\n}", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n  constructor() {\n    this.enable = false;\n    this.frequency = 1;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.frequency !== undefined) {\n      this.frequency = data.frequency;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n  constructor() {\n    this.blink = false;\n    this.color = new OptionsColor();\n    this.color.value = \"#fff\";\n    this.consent = false;\n    this.distance = 100;\n    this.enable = false;\n    this.frequency = 1;\n    this.opacity = 1;\n    this.shadow = new LinksShadow();\n    this.triangles = new LinksTriangle();\n    this.width = 1;\n    this.warp = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.id !== undefined) {\n      this.id = data.id;\n    }\n    if (data.blink !== undefined) {\n      this.blink = data.blink;\n    }\n    this.color = OptionsColor.create(this.color, data.color);\n    if (data.consent !== undefined) {\n      this.consent = data.consent;\n    }\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.frequency !== undefined) {\n      this.frequency = data.frequency;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n    this.shadow.load(data.shadow);\n    this.triangles.load(data.triangles);\n    if (data.width !== undefined) {\n      this.width = data.width;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}", "import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2,\n  opacityOffset = 1,\n  origin = {\n    x: 0,\n    y: 0\n  },\n  minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n  const {\n    dx,\n    dy,\n    distance\n  } = getDistances(pos1, pos2);\n  if (!warp || distance <= optDistance) {\n    return distance;\n  }\n  const absDiffs = {\n      x: Math.abs(dx),\n      y: Math.abs(dy)\n    },\n    warpDistances = {\n      x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n      y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y)\n    };\n  return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n  constructor(container, engine) {\n    super(container);\n    this._setColor = p1 => {\n      if (!p1.options.links) {\n        return;\n      }\n      const container = this._linkContainer,\n        linksOptions = p1.options.links;\n      let linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);\n      if (linkColor) {\n        return;\n      }\n      const optColor = linksOptions.color;\n      linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n      if (linksOptions.id === undefined) {\n        container.particles.linksColor = linkColor;\n      } else {\n        container.particles.linksColors.set(linksOptions.id, linkColor);\n      }\n    };\n    this._linkContainer = container;\n    this._engine = engine;\n  }\n  clear() {}\n  init() {\n    this._linkContainer.particles.linksColor = undefined;\n    this._linkContainer.particles.linksColors = new Map();\n  }\n  interact(p1) {\n    if (!p1.options.links) {\n      return;\n    }\n    p1.links = [];\n    const pos1 = p1.getPosition(),\n      container = this.container,\n      canvasSize = container.canvas.size;\n    if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n      return;\n    }\n    const linkOpt1 = p1.options.links,\n      optOpacity = linkOpt1.opacity,\n      optDistance = p1.retina.linksDistance ?? minDistance,\n      warp = linkOpt1.warp;\n    let range;\n    if (warp) {\n      range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n    } else {\n      range = new Circle(pos1.x, pos1.y, optDistance);\n    }\n    const query = container.particles.quadTree.query(range);\n    for (const p2 of query) {\n      const linkOpt2 = p2.options.links;\n      if (p1 === p2 || !linkOpt2?.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || !p2.links || p1.links.some(t => t.destination === p2) || p2.links.some(t => t.destination === p1)) {\n        continue;\n      }\n      const pos2 = p2.getPosition();\n      if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n        continue;\n      }\n      const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n      if (distance > optDistance) {\n        continue;\n      }\n      const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n      this._setColor(p1);\n      p1.links.push({\n        destination: p2,\n        opacity: opacityLine\n      });\n    }\n  }\n  isEnabled(particle) {\n    return !!particle.options.links?.enable;\n  }\n  loadParticlesOptions(options, ...sources) {\n    if (!options.links) {\n      options.links = new Links();\n    }\n    for (const source of sources) {\n      options.links.load(source?.links);\n    }\n  }\n  reset() {}\n}", "import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n  await engine.addInteractor(\"particlesLinks\", async container => {\n    return Promise.resolve(new Linker(container, engine));\n  }, refresh);\n}", "import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\nexport function drawLinkLine(params) {\n  let drawn = false;\n  const {\n    begin,\n    end,\n    engine,\n    maxDistance,\n    context,\n    canvasSize,\n    width,\n    backgroundMask,\n    colorLine,\n    opacity,\n    links\n  } = params;\n  if (getDistance(begin, end) <= maxDistance) {\n    drawLine(context, begin, end);\n    drawn = true;\n  } else if (links.warp) {\n    let pi1;\n    let pi2;\n    const endNE = {\n      x: end.x - canvasSize.width,\n      y: end.y\n    };\n    const d1 = getDistances(begin, endNE);\n    if (d1.distance <= maxDistance) {\n      const yi = begin.y - d1.dy / d1.dx * begin.x;\n      pi1 = {\n        x: 0,\n        y: yi\n      };\n      pi2 = {\n        x: canvasSize.width,\n        y: yi\n      };\n    } else {\n      const endSW = {\n        x: end.x,\n        y: end.y - canvasSize.height\n      };\n      const d2 = getDistances(begin, endSW);\n      if (d2.distance <= maxDistance) {\n        const yi = begin.y - d2.dy / d2.dx * begin.x;\n        const xi = -yi / (d2.dy / d2.dx);\n        pi1 = {\n          x: xi,\n          y: 0\n        };\n        pi2 = {\n          x: xi,\n          y: canvasSize.height\n        };\n      } else {\n        const endSE = {\n          x: end.x - canvasSize.width,\n          y: end.y - canvasSize.height\n        };\n        const d3 = getDistances(begin, endSE);\n        if (d3.distance <= maxDistance) {\n          const yi = begin.y - d3.dy / d3.dx * begin.x;\n          const xi = -yi / (d3.dy / d3.dx);\n          pi1 = {\n            x: xi,\n            y: yi\n          };\n          pi2 = {\n            x: pi1.x + canvasSize.width,\n            y: pi1.y + canvasSize.height\n          };\n        }\n      }\n    }\n    if (pi1 && pi2) {\n      drawLine(context, begin, pi1);\n      drawLine(context, end, pi2);\n      drawn = true;\n    }\n  }\n  if (!drawn) {\n    return;\n  }\n  context.lineWidth = width;\n  if (backgroundMask.enable) {\n    context.globalCompositeOperation = backgroundMask.composite;\n  }\n  context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n  const {\n    shadow\n  } = links;\n  if (shadow.enable) {\n    const shadowColor = rangeColorToRgb(engine, shadow.color);\n    if (shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = getStyleFromRgb(shadowColor);\n    }\n  }\n  context.stroke();\n}\nexport function drawLinkTriangle(params) {\n  const {\n    context,\n    pos1,\n    pos2,\n    pos3,\n    backgroundMask,\n    colorTriangle,\n    opacityTriangle\n  } = params;\n  drawTriangle(context, pos1, pos2, pos3);\n  if (backgroundMask.enable) {\n    context.globalCompositeOperation = backgroundMask.composite;\n  }\n  context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n  context.fill();\n}\nexport function getLinkKey(ids) {\n  ids.sort((a, b) => a - b);\n  return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n  const key = getLinkKey(particles.map(t => t.id));\n  let res = dictionary.get(key);\n  if (res === undefined) {\n    res = getRandom();\n    dictionary.set(key, res);\n  }\n  return res;\n}", "import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0,\n  minWidth = 0,\n  minDistance = 0,\n  half = 0.5,\n  maxFrequency = 1;\nexport class LinkInstance {\n  constructor(container, engine) {\n    this._drawLinkLine = (p1, link) => {\n      const p1LinksOptions = p1.options.links;\n      if (!p1LinksOptions?.enable) {\n        return;\n      }\n      const container = this._container,\n        options = container.actualOptions,\n        p2 = link.destination,\n        pos1 = p1.getPosition(),\n        pos2 = p2.getPosition();\n      let opacity = link.opacity;\n      container.canvas.draw(ctx => {\n        let colorLine;\n        const twinkle = p1.options.twinkle?.lines;\n        if (twinkle?.enable) {\n          const twinkleFreq = twinkle.frequency,\n            twinkleRgb = rangeColorToRgb(this._engine, twinkle.color),\n            twinkling = getRandom() < twinkleFreq;\n          if (twinkling && twinkleRgb) {\n            colorLine = twinkleRgb;\n            opacity = getRangeValue(twinkle.opacity);\n          }\n        }\n        if (!colorLine) {\n          const linkColor = p1LinksOptions.id !== undefined ? container.particles.linksColors.get(p1LinksOptions.id) : container.particles.linksColor;\n          colorLine = getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n          return;\n        }\n        const width = p1.retina.linksWidth ?? minWidth,\n          maxDistance = p1.retina.linksDistance ?? minDistance,\n          {\n            backgroundMask\n          } = options;\n        drawLinkLine({\n          context: ctx,\n          width,\n          begin: pos1,\n          end: pos2,\n          engine: this._engine,\n          maxDistance,\n          canvasSize: container.canvas.size,\n          links: p1LinksOptions,\n          backgroundMask: backgroundMask,\n          colorLine,\n          opacity\n        });\n      });\n    };\n    this._drawLinkTriangle = (p1, link1, link2) => {\n      const linksOptions = p1.options.links;\n      if (!linksOptions?.enable) {\n        return;\n      }\n      const triangleOptions = linksOptions.triangles;\n      if (!triangleOptions.enable) {\n        return;\n      }\n      const container = this._container,\n        options = container.actualOptions,\n        p2 = link1.destination,\n        p3 = link2.destination,\n        opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n      if (opacityTriangle <= minOpacity) {\n        return;\n      }\n      container.canvas.draw(ctx => {\n        const pos1 = p1.getPosition(),\n          pos2 = p2.getPosition(),\n          pos3 = p3.getPosition(),\n          linksDistance = p1.retina.linksDistance ?? minDistance;\n        if (getDistance(pos1, pos2) > linksDistance || getDistance(pos3, pos2) > linksDistance || getDistance(pos3, pos1) > linksDistance) {\n          return;\n        }\n        let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n        if (!colorTriangle) {\n          const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorTriangle = getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n          return;\n        }\n        drawLinkTriangle({\n          context: ctx,\n          pos1,\n          pos2,\n          pos3,\n          backgroundMask: options.backgroundMask,\n          colorTriangle,\n          opacityTriangle\n        });\n      });\n    };\n    this._drawTriangles = (options, p1, link, p1Links) => {\n      const p2 = link.destination;\n      if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n        return;\n      }\n      const vertices = p2.links?.filter(t => {\n        const linkFreq = this._getLinkFrequency(p2, t.destination),\n          minCount = 0;\n        return p2.options.links && linkFreq <= p2.options.links.frequency && p1Links.findIndex(l => l.destination === t.destination) >= minCount;\n      });\n      if (!vertices?.length) {\n        return;\n      }\n      for (const vertex of vertices) {\n        const p3 = vertex.destination,\n          triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n        if (triangleFreq > options.links.triangles.frequency) {\n          continue;\n        }\n        this._drawLinkTriangle(p1, link, vertex);\n      }\n    };\n    this._getLinkFrequency = (p1, p2) => {\n      return setLinkFrequency([p1, p2], this._freqs.links);\n    };\n    this._getTriangleFrequency = (p1, p2, p3) => {\n      return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    };\n    this._container = container;\n    this._engine = engine;\n    this._freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n  }\n  drawParticle(context, particle) {\n    const {\n      links,\n      options\n    } = particle;\n    if (!links?.length) {\n      return;\n    }\n    const p1Links = links.filter(l => options.links && (options.links.frequency >= maxFrequency || this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n    for (const link of p1Links) {\n      this._drawTriangles(options, particle, link, p1Links);\n      if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n        this._drawLinkLine(particle, link);\n      }\n    }\n  }\n  async init() {\n    this._freqs.links = new Map();\n    this._freqs.triangles = new Map();\n    await Promise.resolve();\n  }\n  particleCreated(particle) {\n    particle.links = [];\n    if (!particle.options.links) {\n      return;\n    }\n    const ratio = this._container.retina.pixelRatio,\n      {\n        retina\n      } = particle,\n      {\n        distance,\n        width\n      } = particle.options.links;\n    retina.linksDistance = distance * ratio;\n    retina.linksWidth = width * ratio;\n  }\n  particleDestroyed(particle) {\n    particle.links = [];\n  }\n}", "import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n  constructor(engine) {\n    this.id = \"links\";\n    this._engine = engine;\n  }\n  getPlugin(container) {\n    return Promise.resolve(new LinkInstance(container, this._engine));\n  }\n  loadOptions() {}\n  needsPlugin() {\n    return true;\n  }\n}", "import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n  const plugin = new LinksPlugin(engine);\n  await engine.addPlugin(plugin, refresh);\n}", "import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await loadLinksInteraction(engine, refresh);\n  await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";", "import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180,\n  origin = {\n    x: 0,\n    y: 0\n  },\n  sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n  const {\n      context\n    } = data,\n    sideCount = side.count.numerator * side.count.denominator,\n    decimalSides = side.count.numerator / side.count.denominator,\n    interiorAngleDegrees = piDeg * (decimalSides - sidesOffset) / decimalSides,\n    interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n  if (!context) {\n    return;\n  }\n  context.beginPath();\n  context.translate(start.x, start.y);\n  context.moveTo(origin.x, origin.y);\n  for (let i = 0; i < sideCount; i++) {\n    context.lineTo(side.length, origin.y);\n    context.translate(side.length, origin.y);\n    context.rotate(interiorAngle);\n  }\n}", "import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n  draw(data) {\n    const {\n        particle,\n        radius\n      } = data,\n      start = this.getCenter(particle, radius),\n      side = this.getSidesData(particle, radius);\n    drawPolygon(data, start, side);\n  }\n  getSidesCount(particle) {\n    const polygon = particle.shapeData;\n    return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n  }\n}", "import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5,\n  yFactor = 2.66,\n  sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n  constructor() {\n    super(...arguments);\n    this.validTypes = [\"polygon\"];\n  }\n  getCenter(particle, radius) {\n    return {\n      x: -radius / (particle.sides / sidesCenterFactor),\n      y: -radius / (yFactor / sidesCenterFactor)\n    };\n  }\n  getSidesData(particle, radius) {\n    const sides = particle.sides;\n    return {\n      count: {\n        denominator: 1,\n        numerator: sides\n      },\n      length: radius * yFactor / (sides / sidesFactor)\n    };\n  }\n}", "import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66,\n  sides = 3,\n  double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n  constructor() {\n    super(...arguments);\n    this.validTypes = [\"triangle\"];\n  }\n  getCenter(particle, radius) {\n    return {\n      x: -radius,\n      y: radius / yFactor\n    };\n  }\n  getSidesCount() {\n    return sides;\n  }\n  getSidesData(particle, radius) {\n    const diameter = radius * double;\n    return {\n      count: {\n        denominator: 2,\n        numerator: 3\n      },\n      length: diameter\n    };\n  }\n}", "import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await loadGenericPolygonShape(engine, refresh);\n  await loadTriangleShape(engine, refresh);\n}", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n  constructor() {\n    this.enable = false;\n    this.speed = 0;\n    this.decay = 0;\n    this.sync = false;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.sync !== undefined) {\n      this.sync = data.sync;\n    }\n  }\n}", "import { RotateDirection, ValueWithRandom, isNull } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new RotateAnimation();\n    this.direction = RotateDirection.clockwise;\n    this.path = false;\n    this.value = 0;\n  }\n  load(data) {\n    if (isNull(data)) {\n      return;\n    }\n    super.load(data);\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    this.animation.load(data.animation);\n    if (data.path !== undefined) {\n      this.path = data.path;\n    }\n  }\n}", "import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2,\n  doublePI = Math.PI * double,\n  identity = 1,\n  doublePIDeg = 360;\nexport class RotateUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const rotateOptions = particle.options.rotate;\n    if (!rotateOptions) {\n      return;\n    }\n    particle.rotate = {\n      enable: rotateOptions.animation.enable,\n      value: degToRad(getRangeValue(rotateOptions.value)),\n      min: 0,\n      max: doublePI\n    };\n    particle.pathRotation = rotateOptions.path;\n    let rotateDirection = rotateOptions.direction;\n    if (rotateDirection === RotateDirection.random) {\n      const index = Math.floor(getRandom() * double),\n        minIndex = 0;\n      rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n    }\n    switch (rotateDirection) {\n      case RotateDirection.counterClockwise:\n      case \"counterClockwise\":\n        particle.rotate.status = AnimationStatus.decreasing;\n        break;\n      case RotateDirection.clockwise:\n        particle.rotate.status = AnimationStatus.increasing;\n        break;\n    }\n    const rotateAnimation = rotateOptions.animation;\n    if (rotateAnimation.enable) {\n      particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n      particle.rotate.velocity = getRangeValue(rotateAnimation.speed) / doublePIDeg * this.container.retina.reduceFactor;\n      if (!rotateAnimation.sync) {\n        particle.rotate.velocity *= getRandom();\n      }\n    }\n    particle.rotation = particle.rotate.value;\n  }\n  isEnabled(particle) {\n    const rotate = particle.options.rotate;\n    if (!rotate) {\n      return false;\n    }\n    return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n  }\n  loadOptions(options, ...sources) {\n    if (!options.rotate) {\n      options.rotate = new Rotate();\n    }\n    for (const source of sources) {\n      options.rotate.load(source?.rotate);\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    particle.isRotating = !!particle.rotate;\n    if (!particle.rotate) {\n      return;\n    }\n    updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n    particle.rotation = particle.rotate.value;\n  }\n}", "import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"rotate\", container => {\n    return Promise.resolve(new RotateUpdater(container));\n  }, refresh);\n}", "const fixFactorSquared = 2,\n  fixFactor = Math.sqrt(fixFactorSquared),\n  double = 2;\nexport function drawSquare(data) {\n  const {\n      context,\n      radius\n    } = data,\n    fixedRadius = radius / fixFactor,\n    fixedDiameter = fixedRadius * double;\n  context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}", "import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n  constructor() {\n    this.validTypes = [\"edge\", \"square\"];\n  }\n  draw(data) {\n    drawSquare(data);\n  }\n  getSidesCount() {\n    return sides;\n  }\n}", "import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new SquareDrawer(), refresh);\n}", "const defaultInset = 2,\n  origin = {\n    x: 0,\n    y: 0\n  };\nexport function drawStar(data) {\n  const {\n      context,\n      particle,\n      radius\n    } = data,\n    sides = particle.sides,\n    inset = particle.starInset ?? defaultInset;\n  context.moveTo(origin.x, origin.y - radius);\n  for (let i = 0; i < sides; i++) {\n    context.rotate(Math.PI / sides);\n    context.lineTo(origin.x, origin.y - radius * inset);\n    context.rotate(Math.PI / sides);\n    context.lineTo(origin.x, origin.y - radius);\n  }\n}", "import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2,\n  defaultSides = 5;\nexport class StarDrawer {\n  constructor() {\n    this.validTypes = [\"star\"];\n  }\n  draw(data) {\n    drawStar(data);\n  }\n  getSidesCount(particle) {\n    const star = particle.shapeData;\n    return Math.round(getRangeValue(star?.sides ?? defaultSides));\n  }\n  particleInit(container, particle) {\n    const star = particle.shapeData;\n    particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n  }\n}", "import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addShape(new StarDrawer(), refresh);\n}", "import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n  constructor(container, engine) {\n    this._container = container;\n    this._engine = engine;\n  }\n  init(particle) {\n    const container = this._container,\n      options = particle.options;\n    const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n    particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n    particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n    particle.strokeAnimation = stroke.color?.animation;\n    const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n    if (strokeHslColor) {\n      particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n    }\n  }\n  isEnabled(particle) {\n    const color = particle.strokeAnimation,\n      {\n        strokeColor\n      } = particle;\n    return !particle.destroyed && !particle.spawning && !!color && (strokeColor?.h.value !== undefined && strokeColor.h.enable || strokeColor?.s.value !== undefined && strokeColor.s.enable || strokeColor?.l.value !== undefined && strokeColor.l.enable);\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateColor(particle.strokeColor, delta);\n  }\n}", "import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await engine.addParticleUpdater(\"strokeColor\", container => {\n    return Promise.resolve(new StrokeColorUpdater(container, engine));\n  }, refresh);\n}", "import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n  engine.checkVersion(\"3.8.0\");\n  await loadParallaxMover(engine, false);\n  await loadExternalAttractInteraction(engine, false);\n  await loadExternalBounceInteraction(engine, false);\n  await loadExternalBubbleInteraction(engine, false);\n  await loadExternalConnectInteraction(engine, false);\n  await loadExternalGrabInteraction(engine, false);\n  await loadExternalPauseInteraction(engine, false);\n  await loadExternalPushInteraction(engine, false);\n  await loadExternalRemoveInteraction(engine, false);\n  await loadExternalRepulseInteraction(engine, false);\n  await loadExternalSlowInteraction(engine, false);\n  await loadParticlesAttractInteraction(engine, false);\n  await loadParticlesCollisionsInteraction(engine, false);\n  await loadParticlesLinksInteraction(engine, false);\n  await loadEasingQuadPlugin(engine, false);\n  await loadEmojiShape(engine, false);\n  await loadImageShape(engine, false);\n  await loadLineShape(engine, false);\n  await loadPolygonShape(engine, false);\n  await loadSquareShape(engine, false);\n  await loadStarShape(engine, false);\n  await loadLifeUpdater(engine, false);\n  await loadRotateUpdater(engine, false);\n  await loadStrokeColorUpdater(engine, false);\n  await loadBasic(engine, refresh);\n}"],
  "mappings": "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",
  "names": ["spinFactor", "double", "doublePI", "minAngle", "RgbIndexes", "HslIndexes", "defaultAlpha", "minVelocity", "minVelocity", "minVelocity", "minVelocity", "RgbIndexes", "defaultAlpha", "half", "double", "identity", "attractFactor", "half", "double", "minRadius", "bounceMode", "bounce", "ProcessBubbleType", "minDistance", "double", "half", "container", "lineStyle", "minDistance", "minDistance", "container", "container", "container", "minDistance", "minRadius", "half", "container", "minRadius", "defaultOpacity", "DisposalMethod", "GIFDataHeaders", "origin", "half", "double", "defaultAlpha", "sides", "defaultRatio", "noTime", "identity", "infiniteValue", "drawLine", "sides", "drawLine", "half", "identity", "Attractor", "Attractor", "half", "double", "double", "squarePower", "origin", "minDistance", "container", "minOpacity", "minDistance", "half", "container", "origin", "sides", "yFactor", "sides", "double", "double", "doublePI", "identity", "double", "sides", "origin", "sides", "defaultInset", "defaultSides", "defaultOpacity"]
}
